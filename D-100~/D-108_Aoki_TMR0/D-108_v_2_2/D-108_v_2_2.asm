;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/11/19 10:59:00
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$285E			GOTO	_main
$009F	$	_SD1602_write:
;sd1602_8bit_mode.h,1 :: 		void SD1602_write(char c, char r)
;sd1602_8bit_mode.h,3 :: 		PORTB = c; /* RB0〜RB7にデータをセットする */
$009F	$1303			BCF	STATUS, RP1
$00A0	$1283			BCF	STATUS, RP0
$00A1	$0815			MOVF	FARG_SD1602_write+0, 0
$00A2	$0086			MOVWF	PORTB
;sd1602_8bit_mode.h,5 :: 		if (r == 1) /* 文字コードの場合 */
$00A3	$0816			MOVF	FARG_SD1602_write+1, 0
$00A4	$3A01			XORLW	1
$00A5	$1D03			BTFSS	STATUS, Z
$00A6	$28A9			GOTO	L_SD1602_write_0
;sd1602_8bit_mode.h,7 :: 		PORTA |= 0x02; /* RSを1にする */
$00A7	$1485			BSF	PORTA, 1
;sd1602_8bit_mode.h,8 :: 		}
$00A8	$28AB			GOTO	L_SD1602_write_1
$00A9	$	L_SD1602_write_0:
;sd1602_8bit_mode.h,11 :: 		PORTA &= 0xFD; /* RSを0にする */
$00A9	$30FD			MOVLW	253
$00AA	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,12 :: 		}
$00AB	$	L_SD1602_write_1:
;sd1602_8bit_mode.h,14 :: 		PORTA &= 0xFE; /* Eを0にする */
$00AB	$30FE			MOVLW	254
$00AC	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,15 :: 		Delay_us(1); /* 1us（40ns以上）の時間待ち */
$00AD	$3001			MOVLW	1
$00AE	$00CA			MOVWF	STACK_10
$00AF	$0BCA			DECFSZ	STACK_10, F
$00B0	$28AF			GOTO	$-1
$00B1	$0000			NOP
;sd1602_8bit_mode.h,16 :: 		PORTA |= 0x01; /* Eを1にする */
$00B2	$1405			BSF	PORTA, 0
;sd1602_8bit_mode.h,17 :: 		Delay_us(1);  /* 1us（230ns以上）の時間待ち */
$00B3	$3001			MOVLW	1
$00B4	$00CA			MOVWF	STACK_10
$00B5	$0BCA			DECFSZ	STACK_10, F
$00B6	$28B5			GOTO	$-1
$00B7	$0000			NOP
;sd1602_8bit_mode.h,18 :: 		PORTA &= 0xFE; /* Eを0にする */
$00B8	$30FE			MOVLW	254
$00B9	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,19 :: 		}
$00BA	$0008			RETURN
$00EF	$	_SD1602_control:
;sd1602_8bit_mode.h,27 :: 		void SD1602_control(char c)
;sd1602_8bit_mode.h,29 :: 		SD1602_write(c, 0); /* 制御コードを渡す */
$00EF	$1303			BCF	STATUS, RP1
$00F0	$1283			BCF	STATUS, RP0
$00F1	$0814			MOVF	FARG_SD1602_control+0, 0
$00F2	$0095			MOVWF	FARG_SD1602_write+0
$00F3	$0196			CLRF	FARG_SD1602_write+1, 1
$00F4	$209F			CALL	_SD1602_write
;sd1602_8bit_mode.h,30 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$00F5	$3053			MOVLW	83
$00F6	$00CA			MOVWF	STACK_10
$00F7	$0BCA			DECFSZ	STACK_10, F
$00F8	$28F7			GOTO	$-1
;sd1602_8bit_mode.h,31 :: 		}
$00F9	$0008			RETURN
$00E3	$	_SD1602_display:
;sd1602_8bit_mode.h,21 :: 		void SD1602_display(char c)
;sd1602_8bit_mode.h,23 :: 		SD1602_write(c, 1); /* 文字コードを渡す */
$00E3	$1303			BCF	STATUS, RP1
$00E4	$1283			BCF	STATUS, RP0
$00E5	$0814			MOVF	FARG_SD1602_display+0, 0
$00E6	$0095			MOVWF	FARG_SD1602_write+0
$00E7	$3001			MOVLW	1
$00E8	$0096			MOVWF	FARG_SD1602_write+1
$00E9	$209F			CALL	_SD1602_write
;sd1602_8bit_mode.h,24 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$00EA	$3053			MOVLW	83
$00EB	$00CA			MOVWF	STACK_10
$00EC	$0BCA			DECFSZ	STACK_10, F
$00ED	$28EC			GOTO	$-1
;sd1602_8bit_mode.h,25 :: 		}
$00EE	$0008			RETURN
$0004	$	_SD1602_init:
;sd1602_8bit_mode.h,39 :: 		void SD1602_init(void)
;sd1602_8bit_mode.h,41 :: 		Delay_ms(20); /* 20ms（15ms以上）の時間待ち */
$0004	$3082			MOVLW	130
$0005	$1303			BCF	STATUS, RP1
$0006	$1283			BCF	STATUS, RP0
$0007	$00CB			MOVWF	STACK_11
$0008	$30FF			MOVLW	255
$0009	$00CA			MOVWF	STACK_10
$000A	$0BCB			DECFSZ	STACK_11, F
$000B	$280D			GOTO	$+2
$000C	$2810			GOTO	$+4
$000D	$0BCA			DECFSZ	STACK_10, F
$000E	$280D			GOTO	$-1
$000F	$280A			GOTO	$-5
$0010	$3087			MOVLW	135
$0011	$00CA			MOVWF	STACK_10
$0012	$0BCA			DECFSZ	STACK_10, F
$0013	$2812			GOTO	$-1
$0014	$0000			NOP
;sd1602_8bit_mode.h,42 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$0015	$3030			MOVLW	48
$0016	$0095			MOVWF	FARG_SD1602_write+0
$0017	$0196			CLRF	FARG_SD1602_write+1, 1
$0018	$209F			CALL	_SD1602_write
;sd1602_8bit_mode.h,43 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$0019	$3021			MOVLW	33
$001A	$00CB			MOVWF	STACK_11
$001B	$30FF			MOVLW	255
$001C	$00CA			MOVWF	STACK_10
$001D	$0BCB			DECFSZ	STACK_11, F
$001E	$2820			GOTO	$+2
$001F	$2823			GOTO	$+4
$0020	$0BCA			DECFSZ	STACK_10, F
$0021	$2820			GOTO	$-1
$0022	$281D			GOTO	$-5
$0023	$3060			MOVLW	96
$0024	$00CA			MOVWF	STACK_10
$0025	$0BCA			DECFSZ	STACK_10, F
$0026	$2825			GOTO	$-1
$0027	$0000			NOP
$0028	$0000			NOP
;sd1602_8bit_mode.h,44 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$0029	$3030			MOVLW	48
$002A	$0095			MOVWF	FARG_SD1602_write+0
$002B	$0196			CLRF	FARG_SD1602_write+1, 1
$002C	$209F			CALL	_SD1602_write
;sd1602_8bit_mode.h,45 :: 		Delay_ms(5); /* 5ms（100us以上）の時間待ち */
$002D	$3021			MOVLW	33
$002E	$00CB			MOVWF	STACK_11
$002F	$30FF			MOVLW	255
$0030	$00CA			MOVWF	STACK_10
$0031	$0BCB			DECFSZ	STACK_11, F
$0032	$2834			GOTO	$+2
$0033	$2837			GOTO	$+4
$0034	$0BCA			DECFSZ	STACK_10, F
$0035	$2834			GOTO	$-1
$0036	$2831			GOTO	$-5
$0037	$3060			MOVLW	96
$0038	$00CA			MOVWF	STACK_10
$0039	$0BCA			DECFSZ	STACK_10, F
$003A	$2839			GOTO	$-1
$003B	$0000			NOP
$003C	$0000			NOP
;sd1602_8bit_mode.h,46 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$003D	$3030			MOVLW	48
$003E	$0095			MOVWF	FARG_SD1602_write+0
$003F	$0196			CLRF	FARG_SD1602_write+1, 1
$0040	$209F			CALL	_SD1602_write
;sd1602_8bit_mode.h,47 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$0041	$3021			MOVLW	33
$0042	$00CB			MOVWF	STACK_11
$0043	$30FF			MOVLW	255
$0044	$00CA			MOVWF	STACK_10
$0045	$0BCB			DECFSZ	STACK_11, F
$0046	$2848			GOTO	$+2
$0047	$284B			GOTO	$+4
$0048	$0BCA			DECFSZ	STACK_10, F
$0049	$2848			GOTO	$-1
$004A	$2845			GOTO	$-5
$004B	$3060			MOVLW	96
$004C	$00CA			MOVWF	STACK_10
$004D	$0BCA			DECFSZ	STACK_10, F
$004E	$284D			GOTO	$-1
$004F	$0000			NOP
$0050	$0000			NOP
;sd1602_8bit_mode.h,48 :: 		SD1602_control(0x38); /* 8bitモードで2行表示に設定する */
$0051	$3038			MOVLW	56
$0052	$0094			MOVWF	FARG_SD1602_control+0
$0053	$20EF			CALL	_SD1602_control
;sd1602_8bit_mode.h,49 :: 		SD1602_control(0x08); /* テキスト表示をオフにする */
$0054	$3008			MOVLW	8
$0055	$0094			MOVWF	FARG_SD1602_control+0
$0056	$20EF			CALL	_SD1602_control
;sd1602_8bit_mode.h,50 :: 		SD1602_control(0x0C); /* テキスト表示をオンにする */
$0057	$300C			MOVLW	12
$0058	$0094			MOVWF	FARG_SD1602_control+0
$0059	$20EF			CALL	_SD1602_control
;sd1602_8bit_mode.h,51 :: 		SD1602_control(0x06); /* カーソル移動を右方向に設定する */
$005A	$3006			MOVLW	6
$005B	$0094			MOVWF	FARG_SD1602_control+0
$005C	$20EF			CALL	_SD1602_control
;sd1602_8bit_mode.h,52 :: 		}
$005D	$0008			RETURN
$00BB	$	_SD1602_clear:
;sd1602_8bit_mode.h,33 :: 		void SD1602_clear(void)
;sd1602_8bit_mode.h,35 :: 		SD1602_write(0x01, 0); /* 制御コードを渡す */
$00BB	$3001			MOVLW	1
$00BC	$1303			BCF	STATUS, RP1
$00BD	$1283			BCF	STATUS, RP0
$00BE	$0095			MOVWF	FARG_SD1602_write+0
$00BF	$0196			CLRF	FARG_SD1602_write+1, 1
$00C0	$209F			CALL	_SD1602_write
;sd1602_8bit_mode.h,36 :: 		Delay_ms(2); /* 2ms（1.64ms以上）の時間待ち */
$00C1	$300D			MOVLW	13
$00C2	$00CB			MOVWF	STACK_11
$00C3	$30FF			MOVLW	255
$00C4	$00CA			MOVWF	STACK_10
$00C5	$0BCB			DECFSZ	STACK_11, F
$00C6	$28C8			GOTO	$+2
$00C7	$28CB			GOTO	$+4
$00C8	$0BCA			DECFSZ	STACK_10, F
$00C9	$28C8			GOTO	$-1
$00CA	$28C5			GOTO	$-5
$00CB	$30F3			MOVLW	243
$00CC	$00CA			MOVWF	STACK_10
$00CD	$0BCA			DECFSZ	STACK_10, F
$00CE	$28CD			GOTO	$-1
$00CF	$0000			NOP
;sd1602_8bit_mode.h,37 :: 		}
$00D0	$0008			RETURN
$00D1	$	_SD1602_print:
;sd1602_8bit_mode.h,54 :: 		void SD1602_print(char *s)
;sd1602_8bit_mode.h,56 :: 		while (*s != 0x00) /* ナル文字（0x00）があらわれるまで */
$00D1	$	L_SD1602_print_2:
$00D1	$1303			BCF	STATUS, RP1
$00D2	$1283			BCF	STATUS, RP0
$00D3	$0813			MOVF	FARG_SD1602_print+0, 0
$00D4	$0084			MOVWF	FSR
$00D5	$0800			MOVF	INDF, 0
$00D6	$00C1			MOVWF	STACK_1
$00D7	$0841			MOVF	STACK_1, 0
$00D8	$3A00			XORLW	0
$00D9	$1903			BTFSC	STATUS, Z
$00DA	$28E2			GOTO	L_SD1602_print_3
;sd1602_8bit_mode.h,58 :: 		SD1602_display(*s); /* テキストデータを表示する */
$00DB	$0813			MOVF	FARG_SD1602_print+0, 0
$00DC	$0084			MOVWF	FSR
$00DD	$0800			MOVF	INDF, 0
$00DE	$0094			MOVWF	FARG_SD1602_display+0
$00DF	$20E3			CALL	_SD1602_display
;sd1602_8bit_mode.h,59 :: 		s++;
$00E0	$0A93			INCF	FARG_SD1602_print+0, 1
;sd1602_8bit_mode.h,60 :: 		}
$00E1	$28D1			GOTO	L_SD1602_print_2
$00E2	$	L_SD1602_print_3:
;sd1602_8bit_mode.h,61 :: 		}
$00E2	$0008			RETURN
$005E	$	_main:
$005E	$3048			MOVLW	72
$005F	$1303			BCF	STATUS, RP1
$0060	$1283			BCF	STATUS, RP0
$0061	$008C			MOVWF	main_s_L0+0
$0062	$3065			MOVLW	101
$0063	$008D			MOVWF	main_s_L0+1
$0064	$306C			MOVLW	108
$0065	$008E			MOVWF	main_s_L0+2
$0066	$306C			MOVLW	108
$0067	$008F			MOVWF	main_s_L0+3
$0068	$306F			MOVLW	111
$0069	$0090			MOVWF	main_s_L0+4
$006A	$3021			MOVLW	33
$006B	$0091			MOVWF	main_s_L0+5
$006C	$0192			CLRF	main_s_L0+6
;D-108_v_2_2.c,3 :: 		void main(void)
;D-108_v_2_2.c,7 :: 		TRISA     = 0x00;
$006D	$1683			BSF	STATUS, RP0
$006E	$0185			CLRF	TRISA, 1
;D-108_v_2_2.c,8 :: 		PORTA     = 0x00;
$006F	$1283			BCF	STATUS, RP0
$0070	$0185			CLRF	PORTA, 1
;D-108_v_2_2.c,9 :: 		TRISB     = 0x00;
$0071	$1683			BSF	STATUS, RP0
$0072	$0186			CLRF	TRISB, 1
;D-108_v_2_2.c,10 :: 		PORTB     = 0x00;
$0073	$1283			BCF	STATUS, RP0
$0074	$0186			CLRF	PORTB, 1
;D-108_v_2_2.c,13 :: 		SD1602_init();
$0075	$2004			CALL	_SD1602_init
;D-108_v_2_2.c,15 :: 		SD1602_clear();
$0076	$20BB			CALL	_SD1602_clear
;D-108_v_2_2.c,18 :: 		while(1)
$0077	$	L_main_4:
;D-108_v_2_2.c,21 :: 		SD1602_control(0x80);
$0077	$3080			MOVLW	128
$0078	$0094			MOVWF	FARG_SD1602_control+0
$0079	$20EF			CALL	_SD1602_control
;D-108_v_2_2.c,22 :: 		SD1602_print(s);
$007A	$300C			MOVLW	main_s_L0
$007B	$0093			MOVWF	FARG_SD1602_print+0
$007C	$20D1			CALL	_SD1602_print
;D-108_v_2_2.c,24 :: 		Delay_ms(1000);
$007D	$301A			MOVLW	26
$007E	$00CC			MOVWF	STACK_12
$007F	$30FF			MOVLW	255
$0080	$00CB			MOVWF	STACK_11
$0081	$30FF			MOVLW	255
$0082	$00CA			MOVWF	STACK_10
$0083	$0BCC			DECFSZ	STACK_12, F
$0084	$2886			GOTO	$+2
$0085	$288D			GOTO	$+8
$0086	$0BCB			DECFSZ	STACK_11, F
$0087	$2889			GOTO	$+2
$0088	$288C			GOTO	$+4
$0089	$0BCA			DECFSZ	STACK_10, F
$008A	$2889			GOTO	$-1
$008B	$2886			GOTO	$-5
$008C	$2883			GOTO	$-9
$008D	$307F			MOVLW	127
$008E	$00CB			MOVWF	STACK_11
$008F	$30FF			MOVLW	255
$0090	$00CA			MOVWF	STACK_10
$0091	$0BCB			DECFSZ	STACK_11, F
$0092	$2894			GOTO	$+2
$0093	$2897			GOTO	$+4
$0094	$0BCA			DECFSZ	STACK_10, F
$0095	$2894			GOTO	$-1
$0096	$2891			GOTO	$-5
$0097	$3058			MOVLW	88
$0098	$00CA			MOVWF	STACK_10
$0099	$0BCA			DECFSZ	STACK_10, F
$009A	$2899			GOTO	$-1
$009B	$0000			NOP
$009C	$0000			NOP
;D-108_v_2_2.c,25 :: 		}
$009D	$2877			GOTO	L_main_4
;D-108_v_2_2.c,27 :: 		}
$009E	$289E			GOTO	$
