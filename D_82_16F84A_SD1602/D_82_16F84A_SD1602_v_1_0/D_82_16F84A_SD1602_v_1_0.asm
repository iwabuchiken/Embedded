;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/03/02 16:33:23
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$285E			GOTO	_main
$00DA	$	_SD1602_write:
;sd1602_8bit_mode.h,1 :: 		void SD1602_write(char c, char r)
;sd1602_8bit_mode.h,3 :: 		PORTB = c; /* RB0〜RB7にデータをセットする */
$00DA	$1303			BCF	STATUS, RP1
$00DB	$1283			BCF	STATUS, RP0
$00DC	$0819			MOVF	FARG_SD1602_write+0, 0
$00DD	$0086			MOVWF	PORTB
;sd1602_8bit_mode.h,5 :: 		if (r == 1) /* 文字コードの場合 */
$00DE	$081A			MOVF	FARG_SD1602_write+1, 0
$00DF	$3A01			XORLW	1
$00E0	$1D03			BTFSS	STATUS, Z
$00E1	$28E4			GOTO	L_SD1602_write_0
;sd1602_8bit_mode.h,7 :: 		PORTA |= 0x02; /* RSを1にする */
$00E2	$1485			BSF	PORTA, 1
;sd1602_8bit_mode.h,8 :: 		}
$00E3	$28E6			GOTO	L_SD1602_write_1
$00E4	$	L_SD1602_write_0:
;sd1602_8bit_mode.h,11 :: 		PORTA &= 0xFD; /* RSを0にする */
$00E4	$30FD			MOVLW	253
$00E5	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,12 :: 		}
$00E6	$	L_SD1602_write_1:
;sd1602_8bit_mode.h,14 :: 		PORTA &= 0xFE; /* Eを0にする */
$00E6	$30FE			MOVLW	254
$00E7	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,15 :: 		Delay_us(1); /* 1us（40ns以上）の時間待ち */
$00E8	$3001			MOVLW	1
$00E9	$00CA			MOVWF	STACK_10
$00EA	$0BCA			DECFSZ	STACK_10, F
$00EB	$28EA			GOTO	$-1
$00EC	$0000			NOP
;sd1602_8bit_mode.h,16 :: 		PORTA |= 0x01; /* Eを1にする */
$00ED	$1405			BSF	PORTA, 0
;sd1602_8bit_mode.h,17 :: 		Delay_us(1);  /* 1us（230ns以上）の時間待ち */
$00EE	$3001			MOVLW	1
$00EF	$00CA			MOVWF	STACK_10
$00F0	$0BCA			DECFSZ	STACK_10, F
$00F1	$28F0			GOTO	$-1
$00F2	$0000			NOP
;sd1602_8bit_mode.h,18 :: 		PORTA &= 0xFE; /* Eを0にする */
$00F3	$30FE			MOVLW	254
$00F4	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,19 :: 		}
$00F5	$0008			RETURN
$0118	$	_SD1602_control:
;sd1602_8bit_mode.h,27 :: 		void SD1602_control(char c)
;sd1602_8bit_mode.h,29 :: 		SD1602_write(c, 0); /* 制御コードを渡す */
$0118	$1303			BCF	STATUS, RP1
$0119	$1283			BCF	STATUS, RP0
$011A	$0818			MOVF	FARG_SD1602_control+0, 0
$011B	$0099			MOVWF	FARG_SD1602_write+0
$011C	$019A			CLRF	FARG_SD1602_write+1, 1
$011D	$20DA			CALL	_SD1602_write
;sd1602_8bit_mode.h,30 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$011E	$3053			MOVLW	83
$011F	$00CA			MOVWF	STACK_10
$0120	$0BCA			DECFSZ	STACK_10, F
$0121	$2920			GOTO	$-1
;sd1602_8bit_mode.h,31 :: 		}
$0122	$0008			RETURN
$010C	$	_SD1602_display:
;sd1602_8bit_mode.h,21 :: 		void SD1602_display(char c)
;sd1602_8bit_mode.h,23 :: 		SD1602_write(c, 1); /* 文字コードを渡す */
$010C	$1303			BCF	STATUS, RP1
$010D	$1283			BCF	STATUS, RP0
$010E	$0818			MOVF	FARG_SD1602_display+0, 0
$010F	$0099			MOVWF	FARG_SD1602_write+0
$0110	$3001			MOVLW	1
$0111	$009A			MOVWF	FARG_SD1602_write+1
$0112	$20DA			CALL	_SD1602_write
;sd1602_8bit_mode.h,24 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$0113	$3053			MOVLW	83
$0114	$00CA			MOVWF	STACK_10
$0115	$0BCA			DECFSZ	STACK_10, F
$0116	$2915			GOTO	$-1
;sd1602_8bit_mode.h,25 :: 		}
$0117	$0008			RETURN
$0004	$	_SD1602_init:
;sd1602_8bit_mode.h,39 :: 		void SD1602_init(void)
;sd1602_8bit_mode.h,41 :: 		Delay_ms(20); /* 20ms（15ms以上）の時間待ち */
$0004	$3082			MOVLW	130
$0005	$1303			BCF	STATUS, RP1
$0006	$1283			BCF	STATUS, RP0
$0007	$00CB			MOVWF	STACK_11
$0008	$30FF			MOVLW	255
$0009	$00CA			MOVWF	STACK_10
$000A	$0BCB			DECFSZ	STACK_11, F
$000B	$280D			GOTO	$+2
$000C	$2810			GOTO	$+4
$000D	$0BCA			DECFSZ	STACK_10, F
$000E	$280D			GOTO	$-1
$000F	$280A			GOTO	$-5
$0010	$3087			MOVLW	135
$0011	$00CA			MOVWF	STACK_10
$0012	$0BCA			DECFSZ	STACK_10, F
$0013	$2812			GOTO	$-1
$0014	$0000			NOP
;sd1602_8bit_mode.h,42 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$0015	$3030			MOVLW	48
$0016	$0099			MOVWF	FARG_SD1602_write+0
$0017	$019A			CLRF	FARG_SD1602_write+1, 1
$0018	$20DA			CALL	_SD1602_write
;sd1602_8bit_mode.h,43 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$0019	$3021			MOVLW	33
$001A	$00CB			MOVWF	STACK_11
$001B	$30FF			MOVLW	255
$001C	$00CA			MOVWF	STACK_10
$001D	$0BCB			DECFSZ	STACK_11, F
$001E	$2820			GOTO	$+2
$001F	$2823			GOTO	$+4
$0020	$0BCA			DECFSZ	STACK_10, F
$0021	$2820			GOTO	$-1
$0022	$281D			GOTO	$-5
$0023	$3060			MOVLW	96
$0024	$00CA			MOVWF	STACK_10
$0025	$0BCA			DECFSZ	STACK_10, F
$0026	$2825			GOTO	$-1
$0027	$0000			NOP
$0028	$0000			NOP
;sd1602_8bit_mode.h,44 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$0029	$3030			MOVLW	48
$002A	$0099			MOVWF	FARG_SD1602_write+0
$002B	$019A			CLRF	FARG_SD1602_write+1, 1
$002C	$20DA			CALL	_SD1602_write
;sd1602_8bit_mode.h,45 :: 		Delay_ms(5); /* 5ms（100us以上）の時間待ち */
$002D	$3021			MOVLW	33
$002E	$00CB			MOVWF	STACK_11
$002F	$30FF			MOVLW	255
$0030	$00CA			MOVWF	STACK_10
$0031	$0BCB			DECFSZ	STACK_11, F
$0032	$2834			GOTO	$+2
$0033	$2837			GOTO	$+4
$0034	$0BCA			DECFSZ	STACK_10, F
$0035	$2834			GOTO	$-1
$0036	$2831			GOTO	$-5
$0037	$3060			MOVLW	96
$0038	$00CA			MOVWF	STACK_10
$0039	$0BCA			DECFSZ	STACK_10, F
$003A	$2839			GOTO	$-1
$003B	$0000			NOP
$003C	$0000			NOP
;sd1602_8bit_mode.h,46 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$003D	$3030			MOVLW	48
$003E	$0099			MOVWF	FARG_SD1602_write+0
$003F	$019A			CLRF	FARG_SD1602_write+1, 1
$0040	$20DA			CALL	_SD1602_write
;sd1602_8bit_mode.h,47 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$0041	$3021			MOVLW	33
$0042	$00CB			MOVWF	STACK_11
$0043	$30FF			MOVLW	255
$0044	$00CA			MOVWF	STACK_10
$0045	$0BCB			DECFSZ	STACK_11, F
$0046	$2848			GOTO	$+2
$0047	$284B			GOTO	$+4
$0048	$0BCA			DECFSZ	STACK_10, F
$0049	$2848			GOTO	$-1
$004A	$2845			GOTO	$-5
$004B	$3060			MOVLW	96
$004C	$00CA			MOVWF	STACK_10
$004D	$0BCA			DECFSZ	STACK_10, F
$004E	$284D			GOTO	$-1
$004F	$0000			NOP
$0050	$0000			NOP
;sd1602_8bit_mode.h,48 :: 		SD1602_control(0x38); /* 8bitモードで2行表示に設定する */
$0051	$3038			MOVLW	56
$0052	$0098			MOVWF	FARG_SD1602_control+0
$0053	$2118			CALL	_SD1602_control
;sd1602_8bit_mode.h,49 :: 		SD1602_control(0x08); /* テキスト表示をオフにする */
$0054	$3008			MOVLW	8
$0055	$0098			MOVWF	FARG_SD1602_control+0
$0056	$2118			CALL	_SD1602_control
;sd1602_8bit_mode.h,50 :: 		SD1602_control(0x0C); /* テキスト表示をオンにする */
$0057	$300C			MOVLW	12
$0058	$0098			MOVWF	FARG_SD1602_control+0
$0059	$2118			CALL	_SD1602_control
;sd1602_8bit_mode.h,51 :: 		SD1602_control(0x06); /* カーソル移動を右方向に設定する */
$005A	$3006			MOVLW	6
$005B	$0098			MOVWF	FARG_SD1602_control+0
$005C	$2118			CALL	_SD1602_control
;sd1602_8bit_mode.h,52 :: 		}
$005D	$0008			RETURN
$00F6	$	_SD1602_clear:
;sd1602_8bit_mode.h,33 :: 		void SD1602_clear(void)
;sd1602_8bit_mode.h,35 :: 		SD1602_write(0x01, 0); /* 制御コードを渡す */
$00F6	$3001			MOVLW	1
$00F7	$1303			BCF	STATUS, RP1
$00F8	$1283			BCF	STATUS, RP0
$00F9	$0099			MOVWF	FARG_SD1602_write+0
$00FA	$019A			CLRF	FARG_SD1602_write+1, 1
$00FB	$20DA			CALL	_SD1602_write
;sd1602_8bit_mode.h,36 :: 		Delay_ms(2); /* 2ms（1.64ms以上）の時間待ち */
$00FC	$300D			MOVLW	13
$00FD	$00CB			MOVWF	STACK_11
$00FE	$30FF			MOVLW	255
$00FF	$00CA			MOVWF	STACK_10
$0100	$0BCB			DECFSZ	STACK_11, F
$0101	$2903			GOTO	$+2
$0102	$2906			GOTO	$+4
$0103	$0BCA			DECFSZ	STACK_10, F
$0104	$2903			GOTO	$-1
$0105	$2900			GOTO	$-5
$0106	$30F3			MOVLW	243
$0107	$00CA			MOVWF	STACK_10
$0108	$0BCA			DECFSZ	STACK_10, F
$0109	$2908			GOTO	$-1
$010A	$0000			NOP
;sd1602_8bit_mode.h,37 :: 		}
$010B	$0008			RETURN
$00A7	$	_SD1602_print:
;sd1602_8bit_mode.h,54 :: 		void SD1602_print(char *s)
;sd1602_8bit_mode.h,56 :: 		while (*s != 0x00) /* ナル文字（0x00）があらわれるまで */
$00A7	$	L_SD1602_print_2:
$00A7	$1303			BCF	STATUS, RP1
$00A8	$1283			BCF	STATUS, RP0
$00A9	$0817			MOVF	FARG_SD1602_print+0, 0
$00AA	$0084			MOVWF	FSR
$00AB	$0800			MOVF	INDF, 0
$00AC	$00C1			MOVWF	STACK_1
$00AD	$0841			MOVF	STACK_1, 0
$00AE	$3A00			XORLW	0
$00AF	$1903			BTFSC	STATUS, Z
$00B0	$28D9			GOTO	L_SD1602_print_3
;sd1602_8bit_mode.h,58 :: 		SD1602_display(*s); /* テキストデータを表示する */
$00B1	$0817			MOVF	FARG_SD1602_print+0, 0
$00B2	$0084			MOVWF	FSR
$00B3	$0800			MOVF	INDF, 0
$00B4	$0098			MOVWF	FARG_SD1602_display+0
$00B5	$210C			CALL	_SD1602_display
;sd1602_8bit_mode.h,59 :: 		s++;
$00B6	$0A97			INCF	FARG_SD1602_print+0, 1
;sd1602_8bit_mode.h,61 :: 		Delay_ms(500);
$00B7	$300D			MOVLW	13
$00B8	$00CC			MOVWF	STACK_12
$00B9	$30FF			MOVLW	255
$00BA	$00CB			MOVWF	STACK_11
$00BB	$30FF			MOVLW	255
$00BC	$00CA			MOVWF	STACK_10
$00BD	$0BCC			DECFSZ	STACK_12, F
$00BE	$28C0			GOTO	$+2
$00BF	$28C7			GOTO	$+8
$00C0	$0BCB			DECFSZ	STACK_11, F
$00C1	$28C3			GOTO	$+2
$00C2	$28C6			GOTO	$+4
$00C3	$0BCA			DECFSZ	STACK_10, F
$00C4	$28C3			GOTO	$-1
$00C5	$28C0			GOTO	$-5
$00C6	$28BD			GOTO	$-9
$00C7	$30BF			MOVLW	191
$00C8	$00CB			MOVWF	STACK_11
$00C9	$30FF			MOVLW	255
$00CA	$00CA			MOVWF	STACK_10
$00CB	$0BCB			DECFSZ	STACK_11, F
$00CC	$28CE			GOTO	$+2
$00CD	$28D1			GOTO	$+4
$00CE	$0BCA			DECFSZ	STACK_10, F
$00CF	$28CE			GOTO	$-1
$00D0	$28CB			GOTO	$-5
$00D1	$302B			MOVLW	43
$00D2	$00CA			MOVWF	STACK_10
$00D3	$0BCA			DECFSZ	STACK_10, F
$00D4	$28D3			GOTO	$-1
$00D5	$0000			NOP
$00D6	$0000			NOP
$00D7	$0000			NOP
;sd1602_8bit_mode.h,63 :: 		}
$00D8	$28A7			GOTO	L_SD1602_print_2
$00D9	$	L_SD1602_print_3:
;sd1602_8bit_mode.h,64 :: 		}
$00D9	$0008			RETURN
$005E	$	_main:
$005E	$3044			MOVLW	68
$005F	$1303			BCF	STATUS, RP1
$0060	$1283			BCF	STATUS, RP0
$0061	$008C			MOVWF	main_s_L0+0
$0062	$3069			MOVLW	105
$0063	$008D			MOVWF	main_s_L0+1
$0064	$3063			MOVLW	99
$0065	$008E			MOVWF	main_s_L0+2
$0066	$3074			MOVLW	116
$0067	$008F			MOVWF	main_s_L0+3
$0068	$3069			MOVLW	105
$0069	$0090			MOVWF	main_s_L0+4
$006A	$306F			MOVLW	111
$006B	$0091			MOVWF	main_s_L0+5
$006C	$306E			MOVLW	110
$006D	$0092			MOVWF	main_s_L0+6
$006E	$3061			MOVLW	97
$006F	$0093			MOVWF	main_s_L0+7
$0070	$3072			MOVLW	114
$0071	$0094			MOVWF	main_s_L0+8
$0072	$3079			MOVLW	121
$0073	$0095			MOVWF	main_s_L0+9
$0074	$0196			CLRF	main_s_L0+10
;D_82_16F84A_SD1602_v_1_0.c,3 :: 		void main(void)
;D_82_16F84A_SD1602_v_1_0.c,10 :: 		TRISA     = 0x00;
$0075	$1683			BSF	STATUS, RP0
$0076	$0185			CLRF	TRISA, 1
;D_82_16F84A_SD1602_v_1_0.c,11 :: 		PORTA     = 0x00;
$0077	$1283			BCF	STATUS, RP0
$0078	$0185			CLRF	PORTA, 1
;D_82_16F84A_SD1602_v_1_0.c,12 :: 		TRISB     = 0x00;
$0079	$1683			BSF	STATUS, RP0
$007A	$0186			CLRF	TRISB, 1
;D_82_16F84A_SD1602_v_1_0.c,13 :: 		PORTB     = 0x00;
$007B	$1283			BCF	STATUS, RP0
$007C	$0186			CLRF	PORTB, 1
;D_82_16F84A_SD1602_v_1_0.c,16 :: 		SD1602_init();
$007D	$2004			CALL	_SD1602_init
;D_82_16F84A_SD1602_v_1_0.c,18 :: 		SD1602_clear();
$007E	$20F6			CALL	_SD1602_clear
;D_82_16F84A_SD1602_v_1_0.c,20 :: 		while(1)
$007F	$	L_main_4:
;D_82_16F84A_SD1602_v_1_0.c,23 :: 		SD1602_control(0x80);
$007F	$3080			MOVLW	128
$0080	$0098			MOVWF	FARG_SD1602_control+0
$0081	$2118			CALL	_SD1602_control
;D_82_16F84A_SD1602_v_1_0.c,24 :: 		SD1602_print(s);
$0082	$300C			MOVLW	main_s_L0
$0083	$0097			MOVWF	FARG_SD1602_print+0
$0084	$20A7			CALL	_SD1602_print
;D_82_16F84A_SD1602_v_1_0.c,26 :: 		Delay_ms(1000);
$0085	$301A			MOVLW	26
$0086	$00CC			MOVWF	STACK_12
$0087	$30FF			MOVLW	255
$0088	$00CB			MOVWF	STACK_11
$0089	$30FF			MOVLW	255
$008A	$00CA			MOVWF	STACK_10
$008B	$0BCC			DECFSZ	STACK_12, F
$008C	$288E			GOTO	$+2
$008D	$2895			GOTO	$+8
$008E	$0BCB			DECFSZ	STACK_11, F
$008F	$2891			GOTO	$+2
$0090	$2894			GOTO	$+4
$0091	$0BCA			DECFSZ	STACK_10, F
$0092	$2891			GOTO	$-1
$0093	$288E			GOTO	$-5
$0094	$288B			GOTO	$-9
$0095	$307F			MOVLW	127
$0096	$00CB			MOVWF	STACK_11
$0097	$30FF			MOVLW	255
$0098	$00CA			MOVWF	STACK_10
$0099	$0BCB			DECFSZ	STACK_11, F
$009A	$289C			GOTO	$+2
$009B	$289F			GOTO	$+4
$009C	$0BCA			DECFSZ	STACK_10, F
$009D	$289C			GOTO	$-1
$009E	$2899			GOTO	$-5
$009F	$3058			MOVLW	88
$00A0	$00CA			MOVWF	STACK_10
$00A1	$0BCA			DECFSZ	STACK_10, F
$00A2	$28A1			GOTO	$-1
$00A3	$0000			NOP
$00A4	$0000			NOP
;D_82_16F84A_SD1602_v_1_0.c,33 :: 		}
$00A5	$287F			GOTO	L_main_4
;D_82_16F84A_SD1602_v_1_0.c,35 :: 		}
$00A6	$28A6			GOTO	$
