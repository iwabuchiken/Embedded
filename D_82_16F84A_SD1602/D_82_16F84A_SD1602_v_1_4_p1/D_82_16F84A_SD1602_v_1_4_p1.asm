;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/03/02 16:48:12
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$00F9	$	_SD1602_write:
;sd1602_8bit_mode.h,1 :: 		void SD1602_write(char c, char r)
;sd1602_8bit_mode.h,3 :: 		PORTB = c; /* RB0〜RB7にデータをセットする */
$00F9	$1303			BCF	STATUS, RP1
$00FA	$1283			BCF	STATUS, RP0
$00FB	$0819			MOVF	FARG_SD1602_write+0, 0
$00FC	$0086			MOVWF	PORTB
;sd1602_8bit_mode.h,6 :: 		if (r == 1) /* 文字コードの場合 */
$00FD	$081A			MOVF	FARG_SD1602_write+1, 0
$00FE	$3A01			XORLW	1
$00FF	$1D03			BTFSS	STATUS, Z
$0100	$2903			GOTO	L_SD1602_write_0
;sd1602_8bit_mode.h,8 :: 		PORTA |= 0x02; /* RSを1にする */
$0101	$1485			BSF	PORTA, 1
;sd1602_8bit_mode.h,9 :: 		}
$0102	$2905			GOTO	L_SD1602_write_1
$0103	$	L_SD1602_write_0:
;sd1602_8bit_mode.h,12 :: 		PORTA &= 0xFD; /* RSを0にする */
$0103	$30FD			MOVLW	253
$0104	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,13 :: 		}
$0105	$	L_SD1602_write_1:
;sd1602_8bit_mode.h,15 :: 		PORTA &= 0xFE; /* Eを0にする */
$0105	$30FE			MOVLW	254
$0106	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,16 :: 		Delay_us(1); /* 1us（40ns以上）の時間待ち */
$0107	$3001			MOVLW	1
$0108	$00CA			MOVWF	STACK_10
$0109	$0BCA			DECFSZ	STACK_10, F
$010A	$2909			GOTO	$-1
$010B	$0000			NOP
;sd1602_8bit_mode.h,17 :: 		PORTA |= 0x01; /* Eを1にする */
$010C	$1405			BSF	PORTA, 0
;sd1602_8bit_mode.h,18 :: 		Delay_us(1);  /* 1us（230ns以上）の時間待ち */
$010D	$3001			MOVLW	1
$010E	$00CA			MOVWF	STACK_10
$010F	$0BCA			DECFSZ	STACK_10, F
$0110	$290F			GOTO	$-1
$0111	$0000			NOP
;sd1602_8bit_mode.h,19 :: 		PORTA &= 0xFE; /* Eを0にする */
$0112	$30FE			MOVLW	254
$0113	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,20 :: 		}
$0114	$0008			RETURN
$0137	$	_SD1602_control:
;sd1602_8bit_mode.h,28 :: 		void SD1602_control(char c)
;sd1602_8bit_mode.h,30 :: 		SD1602_write(c, 0); /* 制御コードを渡す */
$0137	$1303			BCF	STATUS, RP1
$0138	$1283			BCF	STATUS, RP0
$0139	$0818			MOVF	FARG_SD1602_control+0, 0
$013A	$0099			MOVWF	FARG_SD1602_write+0
$013B	$019A			CLRF	FARG_SD1602_write+1, 1
$013C	$20F9			CALL	_SD1602_write
;sd1602_8bit_mode.h,31 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$013D	$3053			MOVLW	83
$013E	$00CA			MOVWF	STACK_10
$013F	$0BCA			DECFSZ	STACK_10, F
$0140	$293F			GOTO	$-1
;sd1602_8bit_mode.h,32 :: 		}
$0141	$0008			RETURN
$012B	$	_SD1602_display:
;sd1602_8bit_mode.h,22 :: 		void SD1602_display(char c)
;sd1602_8bit_mode.h,24 :: 		SD1602_write(c, 1); /* 文字コードを渡す */
$012B	$1303			BCF	STATUS, RP1
$012C	$1283			BCF	STATUS, RP0
$012D	$0818			MOVF	FARG_SD1602_display+0, 0
$012E	$0099			MOVWF	FARG_SD1602_write+0
$012F	$3001			MOVLW	1
$0130	$009A			MOVWF	FARG_SD1602_write+1
$0131	$20F9			CALL	_SD1602_write
;sd1602_8bit_mode.h,25 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$0132	$3053			MOVLW	83
$0133	$00CA			MOVWF	STACK_10
$0134	$0BCA			DECFSZ	STACK_10, F
$0135	$2934			GOTO	$-1
;sd1602_8bit_mode.h,26 :: 		}
$0136	$0008			RETURN
$006F	$	_SD1602_init:
;sd1602_8bit_mode.h,40 :: 		void SD1602_init(void)
;sd1602_8bit_mode.h,42 :: 		Delay_ms(20); /* 20ms（15ms以上）の時間待ち */
$006F	$3082			MOVLW	130
$0070	$1303			BCF	STATUS, RP1
$0071	$1283			BCF	STATUS, RP0
$0072	$00CB			MOVWF	STACK_11
$0073	$30FF			MOVLW	255
$0074	$00CA			MOVWF	STACK_10
$0075	$0BCB			DECFSZ	STACK_11, F
$0076	$2878			GOTO	$+2
$0077	$287B			GOTO	$+4
$0078	$0BCA			DECFSZ	STACK_10, F
$0079	$2878			GOTO	$-1
$007A	$2875			GOTO	$-5
$007B	$3087			MOVLW	135
$007C	$00CA			MOVWF	STACK_10
$007D	$0BCA			DECFSZ	STACK_10, F
$007E	$287D			GOTO	$-1
$007F	$0000			NOP
;sd1602_8bit_mode.h,43 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$0080	$3030			MOVLW	48
$0081	$0099			MOVWF	FARG_SD1602_write+0
$0082	$019A			CLRF	FARG_SD1602_write+1, 1
$0083	$20F9			CALL	_SD1602_write
;sd1602_8bit_mode.h,44 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$0084	$3021			MOVLW	33
$0085	$00CB			MOVWF	STACK_11
$0086	$30FF			MOVLW	255
$0087	$00CA			MOVWF	STACK_10
$0088	$0BCB			DECFSZ	STACK_11, F
$0089	$288B			GOTO	$+2
$008A	$288E			GOTO	$+4
$008B	$0BCA			DECFSZ	STACK_10, F
$008C	$288B			GOTO	$-1
$008D	$2888			GOTO	$-5
$008E	$3060			MOVLW	96
$008F	$00CA			MOVWF	STACK_10
$0090	$0BCA			DECFSZ	STACK_10, F
$0091	$2890			GOTO	$-1
$0092	$0000			NOP
$0093	$0000			NOP
;sd1602_8bit_mode.h,45 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$0094	$3030			MOVLW	48
$0095	$0099			MOVWF	FARG_SD1602_write+0
$0096	$019A			CLRF	FARG_SD1602_write+1, 1
$0097	$20F9			CALL	_SD1602_write
;sd1602_8bit_mode.h,46 :: 		Delay_ms(5); /* 5ms（100us以上）の時間待ち */
$0098	$3021			MOVLW	33
$0099	$00CB			MOVWF	STACK_11
$009A	$30FF			MOVLW	255
$009B	$00CA			MOVWF	STACK_10
$009C	$0BCB			DECFSZ	STACK_11, F
$009D	$289F			GOTO	$+2
$009E	$28A2			GOTO	$+4
$009F	$0BCA			DECFSZ	STACK_10, F
$00A0	$289F			GOTO	$-1
$00A1	$289C			GOTO	$-5
$00A2	$3060			MOVLW	96
$00A3	$00CA			MOVWF	STACK_10
$00A4	$0BCA			DECFSZ	STACK_10, F
$00A5	$28A4			GOTO	$-1
$00A6	$0000			NOP
$00A7	$0000			NOP
;sd1602_8bit_mode.h,47 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$00A8	$3030			MOVLW	48
$00A9	$0099			MOVWF	FARG_SD1602_write+0
$00AA	$019A			CLRF	FARG_SD1602_write+1, 1
$00AB	$20F9			CALL	_SD1602_write
;sd1602_8bit_mode.h,48 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$00AC	$3021			MOVLW	33
$00AD	$00CB			MOVWF	STACK_11
$00AE	$30FF			MOVLW	255
$00AF	$00CA			MOVWF	STACK_10
$00B0	$0BCB			DECFSZ	STACK_11, F
$00B1	$28B3			GOTO	$+2
$00B2	$28B6			GOTO	$+4
$00B3	$0BCA			DECFSZ	STACK_10, F
$00B4	$28B3			GOTO	$-1
$00B5	$28B0			GOTO	$-5
$00B6	$3060			MOVLW	96
$00B7	$00CA			MOVWF	STACK_10
$00B8	$0BCA			DECFSZ	STACK_10, F
$00B9	$28B8			GOTO	$-1
$00BA	$0000			NOP
$00BB	$0000			NOP
;sd1602_8bit_mode.h,49 :: 		SD1602_control(0x38); /* 8bitモードで2行表示に設定する */
$00BC	$3038			MOVLW	56
$00BD	$0098			MOVWF	FARG_SD1602_control+0
$00BE	$2137			CALL	_SD1602_control
;sd1602_8bit_mode.h,50 :: 		SD1602_control(0x08); /* テキスト表示をオフにする */
$00BF	$3008			MOVLW	8
$00C0	$0098			MOVWF	FARG_SD1602_control+0
$00C1	$2137			CALL	_SD1602_control
;sd1602_8bit_mode.h,51 :: 		SD1602_control(0x0C); /* テキスト表示をオンにする */
$00C2	$300C			MOVLW	12
$00C3	$0098			MOVWF	FARG_SD1602_control+0
$00C4	$2137			CALL	_SD1602_control
;sd1602_8bit_mode.h,52 :: 		SD1602_control(0x06); /* カーソル移動を右方向に設定する */
$00C5	$3006			MOVLW	6
$00C6	$0098			MOVWF	FARG_SD1602_control+0
$00C7	$2137			CALL	_SD1602_control
;sd1602_8bit_mode.h,53 :: 		}
$00C8	$0008			RETURN
$0115	$	_SD1602_clear:
;sd1602_8bit_mode.h,34 :: 		void SD1602_clear(void)
;sd1602_8bit_mode.h,36 :: 		SD1602_write(0x01, 0); /* 制御コードを渡す */
$0115	$3001			MOVLW	1
$0116	$1303			BCF	STATUS, RP1
$0117	$1283			BCF	STATUS, RP0
$0118	$0099			MOVWF	FARG_SD1602_write+0
$0119	$019A			CLRF	FARG_SD1602_write+1, 1
$011A	$20F9			CALL	_SD1602_write
;sd1602_8bit_mode.h,37 :: 		Delay_ms(2); /* 2ms（1.64ms以上）の時間待ち */
$011B	$300D			MOVLW	13
$011C	$00CB			MOVWF	STACK_11
$011D	$30FF			MOVLW	255
$011E	$00CA			MOVWF	STACK_10
$011F	$0BCB			DECFSZ	STACK_11, F
$0120	$2922			GOTO	$+2
$0121	$2925			GOTO	$+4
$0122	$0BCA			DECFSZ	STACK_10, F
$0123	$2922			GOTO	$-1
$0124	$291F			GOTO	$-5
$0125	$30F3			MOVLW	243
$0126	$00CA			MOVWF	STACK_10
$0127	$0BCA			DECFSZ	STACK_10, F
$0128	$2927			GOTO	$-1
$0129	$0000			NOP
;sd1602_8bit_mode.h,38 :: 		}
$012A	$0008			RETURN
$00C9	$	_SD1602_print:
;sd1602_8bit_mode.h,55 :: 		void SD1602_print(char *s)
;sd1602_8bit_mode.h,57 :: 		while (*s != 0x00) /* ナル文字（0x00）があらわれるまで */
$00C9	$	L_SD1602_print_2:
$00C9	$1303			BCF	STATUS, RP1
$00CA	$1283			BCF	STATUS, RP0
$00CB	$0817			MOVF	FARG_SD1602_print+0, 0
$00CC	$0084			MOVWF	FSR
$00CD	$0800			MOVF	INDF, 0
$00CE	$00C1			MOVWF	STACK_1
$00CF	$0841			MOVF	STACK_1, 0
$00D0	$3A00			XORLW	0
$00D1	$1903			BTFSC	STATUS, Z
$00D2	$28F8			GOTO	L_SD1602_print_3
;sd1602_8bit_mode.h,59 :: 		SD1602_display(*s); /* テキストデータを表示する */
$00D3	$0817			MOVF	FARG_SD1602_print+0, 0
$00D4	$0084			MOVWF	FSR
$00D5	$0800			MOVF	INDF, 0
$00D6	$0098			MOVWF	FARG_SD1602_display+0
$00D7	$212B			CALL	_SD1602_display
;sd1602_8bit_mode.h,60 :: 		s++;
$00D8	$0A97			INCF	FARG_SD1602_print+0, 1
;sd1602_8bit_mode.h,62 :: 		Delay_ms(250);
$00D9	$3007			MOVLW	7
$00DA	$00CC			MOVWF	STACK_12
$00DB	$30FF			MOVLW	255
$00DC	$00CB			MOVWF	STACK_11
$00DD	$30FF			MOVLW	255
$00DE	$00CA			MOVWF	STACK_10
$00DF	$0BCC			DECFSZ	STACK_12, F
$00E0	$28E2			GOTO	$+2
$00E1	$28E9			GOTO	$+8
$00E2	$0BCB			DECFSZ	STACK_11, F
$00E3	$28E5			GOTO	$+2
$00E4	$28E8			GOTO	$+4
$00E5	$0BCA			DECFSZ	STACK_10, F
$00E6	$28E5			GOTO	$-1
$00E7	$28E2			GOTO	$-5
$00E8	$28DF			GOTO	$-9
$00E9	$3060			MOVLW	96
$00EA	$00CB			MOVWF	STACK_11
$00EB	$30FF			MOVLW	255
$00EC	$00CA			MOVWF	STACK_10
$00ED	$0BCB			DECFSZ	STACK_11, F
$00EE	$28F0			GOTO	$+2
$00EF	$28F3			GOTO	$+4
$00F0	$0BCA			DECFSZ	STACK_10, F
$00F1	$28F0			GOTO	$-1
$00F2	$28ED			GOTO	$-5
$00F3	$3014			MOVLW	20
$00F4	$00CA			MOVWF	STACK_10
$00F5	$0BCA			DECFSZ	STACK_10, F
$00F6	$28F5			GOTO	$-1
;sd1602_8bit_mode.h,64 :: 		}
$00F7	$28C9			GOTO	L_SD1602_print_2
$00F8	$	L_SD1602_print_3:
;sd1602_8bit_mode.h,65 :: 		}
$00F8	$0008			RETURN
$0004	$	_main:
$0004	$3044			MOVLW	68
$0005	$1303			BCF	STATUS, RP1
$0006	$1283			BCF	STATUS, RP0
$0007	$008C			MOVWF	main_s_L0+0
$0008	$3069			MOVLW	105
$0009	$008D			MOVWF	main_s_L0+1
$000A	$3063			MOVLW	99
$000B	$008E			MOVWF	main_s_L0+2
$000C	$3074			MOVLW	116
$000D	$008F			MOVWF	main_s_L0+3
$000E	$3069			MOVLW	105
$000F	$0090			MOVWF	main_s_L0+4
$0010	$306F			MOVLW	111
$0011	$0091			MOVWF	main_s_L0+5
$0012	$306E			MOVLW	110
$0013	$0092			MOVWF	main_s_L0+6
$0014	$3061			MOVLW	97
$0015	$0093			MOVWF	main_s_L0+7
$0016	$3072			MOVLW	114
$0017	$0094			MOVWF	main_s_L0+8
$0018	$3079			MOVLW	121
$0019	$0095			MOVWF	main_s_L0+9
$001A	$0196			CLRF	main_s_L0+10
;D_82_16F84A_SD1602_v_1_4_p1.c,3 :: 		void main(void)
;D_82_16F84A_SD1602_v_1_4_p1.c,10 :: 		TRISA     = 0x00;
$001B	$1683			BSF	STATUS, RP0
$001C	$0185			CLRF	TRISA, 1
;D_82_16F84A_SD1602_v_1_4_p1.c,11 :: 		PORTA     = 0x00;
$001D	$1283			BCF	STATUS, RP0
$001E	$0185			CLRF	PORTA, 1
;D_82_16F84A_SD1602_v_1_4_p1.c,12 :: 		TRISB     = 0x00;
$001F	$1683			BSF	STATUS, RP0
$0020	$0186			CLRF	TRISB, 1
;D_82_16F84A_SD1602_v_1_4_p1.c,13 :: 		PORTB     = 0x00;
$0021	$1283			BCF	STATUS, RP0
$0022	$0186			CLRF	PORTB, 1
;D_82_16F84A_SD1602_v_1_4_p1.c,16 :: 		SD1602_init();
$0023	$206F			CALL	_SD1602_init
;D_82_16F84A_SD1602_v_1_4_p1.c,18 :: 		SD1602_clear();
$0024	$2115			CALL	_SD1602_clear
;D_82_16F84A_SD1602_v_1_4_p1.c,20 :: 		while(1)
$0025	$	L_main_4:
;D_82_16F84A_SD1602_v_1_4_p1.c,23 :: 		SD1602_control(0x80);
$0025	$3080			MOVLW	128
$0026	$0098			MOVWF	FARG_SD1602_control+0
$0027	$2137			CALL	_SD1602_control
;D_82_16F84A_SD1602_v_1_4_p1.c,24 :: 		SD1602_print(s);
$0028	$300C			MOVLW	main_s_L0
$0029	$0097			MOVWF	FARG_SD1602_print+0
$002A	$20C9			CALL	_SD1602_print
;D_82_16F84A_SD1602_v_1_4_p1.c,26 :: 		Delay_ms(1000);
$002B	$301A			MOVLW	26
$002C	$00CC			MOVWF	STACK_12
$002D	$30FF			MOVLW	255
$002E	$00CB			MOVWF	STACK_11
$002F	$30FF			MOVLW	255
$0030	$00CA			MOVWF	STACK_10
$0031	$0BCC			DECFSZ	STACK_12, F
$0032	$2834			GOTO	$+2
$0033	$283B			GOTO	$+8
$0034	$0BCB			DECFSZ	STACK_11, F
$0035	$2837			GOTO	$+2
$0036	$283A			GOTO	$+4
$0037	$0BCA			DECFSZ	STACK_10, F
$0038	$2837			GOTO	$-1
$0039	$2834			GOTO	$-5
$003A	$2831			GOTO	$-9
$003B	$307F			MOVLW	127
$003C	$00CB			MOVWF	STACK_11
$003D	$30FF			MOVLW	255
$003E	$00CA			MOVWF	STACK_10
$003F	$0BCB			DECFSZ	STACK_11, F
$0040	$2842			GOTO	$+2
$0041	$2845			GOTO	$+4
$0042	$0BCA			DECFSZ	STACK_10, F
$0043	$2842			GOTO	$-1
$0044	$283F			GOTO	$-5
$0045	$3058			MOVLW	88
$0046	$00CA			MOVWF	STACK_10
$0047	$0BCA			DECFSZ	STACK_10, F
$0048	$2847			GOTO	$-1
$0049	$0000			NOP
$004A	$0000			NOP
;D_82_16F84A_SD1602_v_1_4_p1.c,29 :: 		SD1602_clear();
$004B	$2115			CALL	_SD1602_clear
;D_82_16F84A_SD1602_v_1_4_p1.c,31 :: 		Delay_ms(500);
$004C	$300D			MOVLW	13
$004D	$00CC			MOVWF	STACK_12
$004E	$30FF			MOVLW	255
$004F	$00CB			MOVWF	STACK_11
$0050	$30FF			MOVLW	255
$0051	$00CA			MOVWF	STACK_10
$0052	$0BCC			DECFSZ	STACK_12, F
$0053	$2855			GOTO	$+2
$0054	$285C			GOTO	$+8
$0055	$0BCB			DECFSZ	STACK_11, F
$0056	$2858			GOTO	$+2
$0057	$285B			GOTO	$+4
$0058	$0BCA			DECFSZ	STACK_10, F
$0059	$2858			GOTO	$-1
$005A	$2855			GOTO	$-5
$005B	$2852			GOTO	$-9
$005C	$30BF			MOVLW	191
$005D	$00CB			MOVWF	STACK_11
$005E	$30FF			MOVLW	255
$005F	$00CA			MOVWF	STACK_10
$0060	$0BCB			DECFSZ	STACK_11, F
$0061	$2863			GOTO	$+2
$0062	$2866			GOTO	$+4
$0063	$0BCA			DECFSZ	STACK_10, F
$0064	$2863			GOTO	$-1
$0065	$2860			GOTO	$-5
$0066	$302B			MOVLW	43
$0067	$00CA			MOVWF	STACK_10
$0068	$0BCA			DECFSZ	STACK_10, F
$0069	$2868			GOTO	$-1
$006A	$0000			NOP
$006B	$0000			NOP
$006C	$0000			NOP
;D_82_16F84A_SD1602_v_1_4_p1.c,33 :: 		}
$006D	$2825			GOTO	L_main_4
;D_82_16F84A_SD1602_v_1_4_p1.c,35 :: 		}
$006E	$286E			GOTO	$
