;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/03/03 11:09:23
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0110	$	_SD1602_write:
;sd1602_8bit_mode.h,1 :: 		void SD1602_write(char c, char r)
;sd1602_8bit_mode.h,3 :: 		PORTB = c; /* RB0〜RB7にデータをセットする */
$0110	$1303			BCF	STATUS, RP1
$0111	$1283			BCF	STATUS, RP0
$0112	$0822			MOVF	FARG_SD1602_write+0, 0
$0113	$0086			MOVWF	PORTB
;sd1602_8bit_mode.h,6 :: 		if (r == 1) /* 文字コードの場合 */
$0114	$0823			MOVF	FARG_SD1602_write+1, 0
$0115	$3A01			XORLW	1
$0116	$1D03			BTFSS	STATUS, Z
$0117	$291A			GOTO	L_SD1602_write_0
;sd1602_8bit_mode.h,8 :: 		PORTA |= 0x02; /* RSを1にする */
$0118	$1485			BSF	PORTA, 1
;sd1602_8bit_mode.h,9 :: 		}
$0119	$291C			GOTO	L_SD1602_write_1
$011A	$	L_SD1602_write_0:
;sd1602_8bit_mode.h,12 :: 		PORTA &= 0xFD; /* RSを0にする */
$011A	$30FD			MOVLW	253
$011B	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,13 :: 		}
$011C	$	L_SD1602_write_1:
;sd1602_8bit_mode.h,15 :: 		PORTA &= 0xFE; /* Eを0にする */
$011C	$30FE			MOVLW	254
$011D	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,16 :: 		Delay_us(1); /* 1us（40ns以上）の時間待ち */
$011E	$3001			MOVLW	1
$011F	$00CA			MOVWF	STACK_10
$0120	$0BCA			DECFSZ	STACK_10, F
$0121	$2920			GOTO	$-1
$0122	$0000			NOP
;sd1602_8bit_mode.h,17 :: 		PORTA |= 0x01; /* Eを1にする */
$0123	$1405			BSF	PORTA, 0
;sd1602_8bit_mode.h,18 :: 		Delay_us(1);  /* 1us（230ns以上）の時間待ち */
$0124	$3001			MOVLW	1
$0125	$00CA			MOVWF	STACK_10
$0126	$0BCA			DECFSZ	STACK_10, F
$0127	$2926			GOTO	$-1
$0128	$0000			NOP
;sd1602_8bit_mode.h,19 :: 		PORTA &= 0xFE; /* Eを0にする */
$0129	$30FE			MOVLW	254
$012A	$0585			ANDWF	PORTA, 1
;sd1602_8bit_mode.h,20 :: 		}
$012B	$0008			RETURN
$014E	$	_SD1602_control:
;sd1602_8bit_mode.h,28 :: 		void SD1602_control(char c)
;sd1602_8bit_mode.h,30 :: 		SD1602_write(c, 0); /* 制御コードを渡す */
$014E	$1303			BCF	STATUS, RP1
$014F	$1283			BCF	STATUS, RP0
$0150	$0821			MOVF	FARG_SD1602_control+0, 0
$0151	$00A2			MOVWF	FARG_SD1602_write+0
$0152	$01A3			CLRF	FARG_SD1602_write+1, 1
$0153	$2110			CALL	_SD1602_write
;sd1602_8bit_mode.h,31 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$0154	$3053			MOVLW	83
$0155	$00CA			MOVWF	STACK_10
$0156	$0BCA			DECFSZ	STACK_10, F
$0157	$2956			GOTO	$-1
;sd1602_8bit_mode.h,32 :: 		}
$0158	$0008			RETURN
$0142	$	_SD1602_display:
;sd1602_8bit_mode.h,22 :: 		void SD1602_display(char c)
;sd1602_8bit_mode.h,24 :: 		SD1602_write(c, 1); /* 文字コードを渡す */
$0142	$1303			BCF	STATUS, RP1
$0143	$1283			BCF	STATUS, RP0
$0144	$0821			MOVF	FARG_SD1602_display+0, 0
$0145	$00A2			MOVWF	FARG_SD1602_write+0
$0146	$3001			MOVLW	1
$0147	$00A3			MOVWF	FARG_SD1602_write+1
$0148	$2110			CALL	_SD1602_write
;sd1602_8bit_mode.h,25 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$0149	$3053			MOVLW	83
$014A	$00CA			MOVWF	STACK_10
$014B	$0BCA			DECFSZ	STACK_10, F
$014C	$294B			GOTO	$-1
;sd1602_8bit_mode.h,26 :: 		}
$014D	$0008			RETURN
$0085	$	_SD1602_init:
;sd1602_8bit_mode.h,40 :: 		void SD1602_init(void)
;sd1602_8bit_mode.h,42 :: 		Delay_ms(20); /* 20ms（15ms以上）の時間待ち */
$0085	$3082			MOVLW	130
$0086	$1303			BCF	STATUS, RP1
$0087	$1283			BCF	STATUS, RP0
$0088	$00CB			MOVWF	STACK_11
$0089	$30FF			MOVLW	255
$008A	$00CA			MOVWF	STACK_10
$008B	$0BCB			DECFSZ	STACK_11, F
$008C	$288E			GOTO	$+2
$008D	$2891			GOTO	$+4
$008E	$0BCA			DECFSZ	STACK_10, F
$008F	$288E			GOTO	$-1
$0090	$288B			GOTO	$-5
$0091	$3087			MOVLW	135
$0092	$00CA			MOVWF	STACK_10
$0093	$0BCA			DECFSZ	STACK_10, F
$0094	$2893			GOTO	$-1
$0095	$0000			NOP
;sd1602_8bit_mode.h,43 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$0096	$3030			MOVLW	48
$0097	$00A2			MOVWF	FARG_SD1602_write+0
$0098	$01A3			CLRF	FARG_SD1602_write+1, 1
$0099	$2110			CALL	_SD1602_write
;sd1602_8bit_mode.h,44 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$009A	$3021			MOVLW	33
$009B	$00CB			MOVWF	STACK_11
$009C	$30FF			MOVLW	255
$009D	$00CA			MOVWF	STACK_10
$009E	$0BCB			DECFSZ	STACK_11, F
$009F	$28A1			GOTO	$+2
$00A0	$28A4			GOTO	$+4
$00A1	$0BCA			DECFSZ	STACK_10, F
$00A2	$28A1			GOTO	$-1
$00A3	$289E			GOTO	$-5
$00A4	$3060			MOVLW	96
$00A5	$00CA			MOVWF	STACK_10
$00A6	$0BCA			DECFSZ	STACK_10, F
$00A7	$28A6			GOTO	$-1
$00A8	$0000			NOP
$00A9	$0000			NOP
;sd1602_8bit_mode.h,45 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$00AA	$3030			MOVLW	48
$00AB	$00A2			MOVWF	FARG_SD1602_write+0
$00AC	$01A3			CLRF	FARG_SD1602_write+1, 1
$00AD	$2110			CALL	_SD1602_write
;sd1602_8bit_mode.h,46 :: 		Delay_ms(5); /* 5ms（100us以上）の時間待ち */
$00AE	$3021			MOVLW	33
$00AF	$00CB			MOVWF	STACK_11
$00B0	$30FF			MOVLW	255
$00B1	$00CA			MOVWF	STACK_10
$00B2	$0BCB			DECFSZ	STACK_11, F
$00B3	$28B5			GOTO	$+2
$00B4	$28B8			GOTO	$+4
$00B5	$0BCA			DECFSZ	STACK_10, F
$00B6	$28B5			GOTO	$-1
$00B7	$28B2			GOTO	$-5
$00B8	$3060			MOVLW	96
$00B9	$00CA			MOVWF	STACK_10
$00BA	$0BCA			DECFSZ	STACK_10, F
$00BB	$28BA			GOTO	$-1
$00BC	$0000			NOP
$00BD	$0000			NOP
;sd1602_8bit_mode.h,47 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$00BE	$3030			MOVLW	48
$00BF	$00A2			MOVWF	FARG_SD1602_write+0
$00C0	$01A3			CLRF	FARG_SD1602_write+1, 1
$00C1	$2110			CALL	_SD1602_write
;sd1602_8bit_mode.h,48 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$00C2	$3021			MOVLW	33
$00C3	$00CB			MOVWF	STACK_11
$00C4	$30FF			MOVLW	255
$00C5	$00CA			MOVWF	STACK_10
$00C6	$0BCB			DECFSZ	STACK_11, F
$00C7	$28C9			GOTO	$+2
$00C8	$28CC			GOTO	$+4
$00C9	$0BCA			DECFSZ	STACK_10, F
$00CA	$28C9			GOTO	$-1
$00CB	$28C6			GOTO	$-5
$00CC	$3060			MOVLW	96
$00CD	$00CA			MOVWF	STACK_10
$00CE	$0BCA			DECFSZ	STACK_10, F
$00CF	$28CE			GOTO	$-1
$00D0	$0000			NOP
$00D1	$0000			NOP
;sd1602_8bit_mode.h,49 :: 		SD1602_control(0x38); /* 8bitモードで2行表示に設定する */
$00D2	$3038			MOVLW	56
$00D3	$00A1			MOVWF	FARG_SD1602_control+0
$00D4	$214E			CALL	_SD1602_control
;sd1602_8bit_mode.h,50 :: 		SD1602_control(0x08); /* テキスト表示をオフにする */
$00D5	$3008			MOVLW	8
$00D6	$00A1			MOVWF	FARG_SD1602_control+0
$00D7	$214E			CALL	_SD1602_control
;sd1602_8bit_mode.h,53 :: 		SD1602_control(0x0D);
$00D8	$300D			MOVLW	13
$00D9	$00A1			MOVWF	FARG_SD1602_control+0
$00DA	$214E			CALL	_SD1602_control
;sd1602_8bit_mode.h,55 :: 		SD1602_control(0x06); /* カーソル移動を右方向に設定する */
$00DB	$3006			MOVLW	6
$00DC	$00A1			MOVWF	FARG_SD1602_control+0
$00DD	$214E			CALL	_SD1602_control
;sd1602_8bit_mode.h,56 :: 		}
$00DE	$0008			RETURN
$012C	$	_SD1602_clear:
;sd1602_8bit_mode.h,34 :: 		void SD1602_clear(void)
;sd1602_8bit_mode.h,36 :: 		SD1602_write(0x01, 0); /* 制御コードを渡す */
$012C	$3001			MOVLW	1
$012D	$1303			BCF	STATUS, RP1
$012E	$1283			BCF	STATUS, RP0
$012F	$00A2			MOVWF	FARG_SD1602_write+0
$0130	$01A3			CLRF	FARG_SD1602_write+1, 1
$0131	$2110			CALL	_SD1602_write
;sd1602_8bit_mode.h,37 :: 		Delay_ms(2); /* 2ms（1.64ms以上）の時間待ち */
$0132	$300D			MOVLW	13
$0133	$00CB			MOVWF	STACK_11
$0134	$30FF			MOVLW	255
$0135	$00CA			MOVWF	STACK_10
$0136	$0BCB			DECFSZ	STACK_11, F
$0137	$2939			GOTO	$+2
$0138	$293C			GOTO	$+4
$0139	$0BCA			DECFSZ	STACK_10, F
$013A	$2939			GOTO	$-1
$013B	$2936			GOTO	$-5
$013C	$30F3			MOVLW	243
$013D	$00CA			MOVWF	STACK_10
$013E	$0BCA			DECFSZ	STACK_10, F
$013F	$293E			GOTO	$-1
$0140	$0000			NOP
;sd1602_8bit_mode.h,38 :: 		}
$0141	$0008			RETURN
$00DF	$	_SD1602_print:
;sd1602_8bit_mode.h,58 :: 		void SD1602_print(char *s)
;sd1602_8bit_mode.h,60 :: 		while (*s != 0x00) /* ナル文字（0x00）があらわれるまで */
$00DF	$	L_SD1602_print_2:
$00DF	$1303			BCF	STATUS, RP1
$00E0	$1283			BCF	STATUS, RP0
$00E1	$0820			MOVF	FARG_SD1602_print+0, 0
$00E2	$0084			MOVWF	FSR
$00E3	$0800			MOVF	INDF, 0
$00E4	$00C1			MOVWF	STACK_1
$00E5	$0841			MOVF	STACK_1, 0
$00E6	$3A00			XORLW	0
$00E7	$1903			BTFSC	STATUS, Z
$00E8	$290F			GOTO	L_SD1602_print_3
;sd1602_8bit_mode.h,62 :: 		SD1602_display(*s); /* テキストデータを表示する */
$00E9	$0820			MOVF	FARG_SD1602_print+0, 0
$00EA	$0084			MOVWF	FSR
$00EB	$0800			MOVF	INDF, 0
$00EC	$00A1			MOVWF	FARG_SD1602_display+0
$00ED	$2142			CALL	_SD1602_display
;sd1602_8bit_mode.h,63 :: 		s++;
$00EE	$0AA0			INCF	FARG_SD1602_print+0, 1
;sd1602_8bit_mode.h,65 :: 		Delay_ms(150);
$00EF	$3004			MOVLW	4
$00F0	$00CC			MOVWF	STACK_12
$00F1	$30FF			MOVLW	255
$00F2	$00CB			MOVWF	STACK_11
$00F3	$30FF			MOVLW	255
$00F4	$00CA			MOVWF	STACK_10
$00F5	$0BCC			DECFSZ	STACK_12, F
$00F6	$28F8			GOTO	$+2
$00F7	$28FF			GOTO	$+8
$00F8	$0BCB			DECFSZ	STACK_11, F
$00F9	$28FB			GOTO	$+2
$00FA	$28FE			GOTO	$+4
$00FB	$0BCA			DECFSZ	STACK_10, F
$00FC	$28FB			GOTO	$-1
$00FD	$28F8			GOTO	$-5
$00FE	$28F5			GOTO	$-9
$00FF	$30D2			MOVLW	210
$0100	$00CB			MOVWF	STACK_11
$0101	$30FF			MOVLW	255
$0102	$00CA			MOVWF	STACK_10
$0103	$0BCB			DECFSZ	STACK_11, F
$0104	$2906			GOTO	$+2
$0105	$2909			GOTO	$+4
$0106	$0BCA			DECFSZ	STACK_10, F
$0107	$2906			GOTO	$-1
$0108	$2903			GOTO	$-5
$0109	$3073			MOVLW	115
$010A	$00CA			MOVWF	STACK_10
$010B	$0BCA			DECFSZ	STACK_10, F
$010C	$290B			GOTO	$-1
$010D	$0000			NOP
;sd1602_8bit_mode.h,67 :: 		}
$010E	$28DF			GOTO	L_SD1602_print_2
$010F	$	L_SD1602_print_3:
;sd1602_8bit_mode.h,68 :: 		}
$010F	$0008			RETURN
$0004	$	_main:
$0004	$3048			MOVLW	72
$0005	$1303			BCF	STATUS, RP1
$0006	$1283			BCF	STATUS, RP0
$0007	$008C			MOVWF	main_s1_L0+0
$0008	$3065			MOVLW	101
$0009	$008D			MOVWF	main_s1_L0+1
$000A	$306C			MOVLW	108
$000B	$008E			MOVWF	main_s1_L0+2
$000C	$306C			MOVLW	108
$000D	$008F			MOVWF	main_s1_L0+3
$000E	$306F			MOVLW	111
$000F	$0090			MOVWF	main_s1_L0+4
$0010	$3021			MOVLW	33
$0011	$0091			MOVWF	main_s1_L0+5
$0012	$3020			MOVLW	32
$0013	$0092			MOVWF	main_s1_L0+6
$0014	$3077			MOVLW	119
$0015	$0093			MOVWF	main_s1_L0+7
$0016	$306F			MOVLW	111
$0017	$0094			MOVWF	main_s1_L0+8
$0018	$3072			MOVLW	114
$0019	$0095			MOVWF	main_s1_L0+9
$001A	$306C			MOVLW	108
$001B	$0096			MOVWF	main_s1_L0+10
$001C	$3064			MOVLW	100
$001D	$0097			MOVWF	main_s1_L0+11
$001E	$302E			MOVLW	46
$001F	$0098			MOVWF	main_s1_L0+12
$0020	$0199			CLRF	main_s1_L0+13
$0021	$30BF			MOVLW	191
$0022	$009A			MOVWF	main_s2_L0+0
$0023	$30C9			MOVLW	201
$0024	$009B			MOVWF	main_s2_L0+1
$0025	$30C4			MOVLW	196
$0026	$009C			MOVWF	main_s2_L0+2
$0027	$30B5			MOVLW	181
$0028	$009D			MOVWF	main_s2_L0+3
$0029	$30D8			MOVLW	216
$002A	$009E			MOVWF	main_s2_L0+4
$002B	$019F			CLRF	main_s2_L0+5
;D_82_16F84A_SD1602_v_2_0.c,3 :: 		void main(void)
;D_82_16F84A_SD1602_v_2_0.c,8 :: 		TRISA     = 0x00;
$002C	$1683			BSF	STATUS, RP0
$002D	$0185			CLRF	TRISA, 1
;D_82_16F84A_SD1602_v_2_0.c,9 :: 		PORTA     = 0x00;
$002E	$1283			BCF	STATUS, RP0
$002F	$0185			CLRF	PORTA, 1
;D_82_16F84A_SD1602_v_2_0.c,10 :: 		TRISB     = 0x00;
$0030	$1683			BSF	STATUS, RP0
$0031	$0186			CLRF	TRISB, 1
;D_82_16F84A_SD1602_v_2_0.c,11 :: 		PORTB     = 0x00;
$0032	$1283			BCF	STATUS, RP0
$0033	$0186			CLRF	PORTB, 1
;D_82_16F84A_SD1602_v_2_0.c,14 :: 		SD1602_init();
$0034	$2085			CALL	_SD1602_init
;D_82_16F84A_SD1602_v_2_0.c,16 :: 		while(1)
$0035	$	L_main_4:
;D_82_16F84A_SD1602_v_2_0.c,19 :: 		SD1602_clear();
$0035	$212C			CALL	_SD1602_clear
;D_82_16F84A_SD1602_v_2_0.c,21 :: 		SD1602_control(0x80);
$0036	$3080			MOVLW	128
$0037	$00A1			MOVWF	FARG_SD1602_control+0
$0038	$214E			CALL	_SD1602_control
;D_82_16F84A_SD1602_v_2_0.c,23 :: 		SD1602_print(s1);
$0039	$300C			MOVLW	main_s1_L0
$003A	$00A0			MOVWF	FARG_SD1602_print+0
$003B	$20DF			CALL	_SD1602_print
;D_82_16F84A_SD1602_v_2_0.c,25 :: 		Delay_ms(1000);
$003C	$301A			MOVLW	26
$003D	$00CC			MOVWF	STACK_12
$003E	$30FF			MOVLW	255
$003F	$00CB			MOVWF	STACK_11
$0040	$30FF			MOVLW	255
$0041	$00CA			MOVWF	STACK_10
$0042	$0BCC			DECFSZ	STACK_12, F
$0043	$2845			GOTO	$+2
$0044	$284C			GOTO	$+8
$0045	$0BCB			DECFSZ	STACK_11, F
$0046	$2848			GOTO	$+2
$0047	$284B			GOTO	$+4
$0048	$0BCA			DECFSZ	STACK_10, F
$0049	$2848			GOTO	$-1
$004A	$2845			GOTO	$-5
$004B	$2842			GOTO	$-9
$004C	$307F			MOVLW	127
$004D	$00CB			MOVWF	STACK_11
$004E	$30FF			MOVLW	255
$004F	$00CA			MOVWF	STACK_10
$0050	$0BCB			DECFSZ	STACK_11, F
$0051	$2853			GOTO	$+2
$0052	$2856			GOTO	$+4
$0053	$0BCA			DECFSZ	STACK_10, F
$0054	$2853			GOTO	$-1
$0055	$2850			GOTO	$-5
$0056	$3058			MOVLW	88
$0057	$00CA			MOVWF	STACK_10
$0058	$0BCA			DECFSZ	STACK_10, F
$0059	$2858			GOTO	$-1
$005A	$0000			NOP
$005B	$0000			NOP
;D_82_16F84A_SD1602_v_2_0.c,28 :: 		SD1602_clear();
$005C	$212C			CALL	_SD1602_clear
;D_82_16F84A_SD1602_v_2_0.c,30 :: 		SD1602_control(0xC0);
$005D	$30C0			MOVLW	192
$005E	$00A1			MOVWF	FARG_SD1602_control+0
$005F	$214E			CALL	_SD1602_control
;D_82_16F84A_SD1602_v_2_0.c,32 :: 		SD1602_print(s2);
$0060	$301A			MOVLW	main_s2_L0
$0061	$00A0			MOVWF	FARG_SD1602_print+0
$0062	$20DF			CALL	_SD1602_print
;D_82_16F84A_SD1602_v_2_0.c,34 :: 		Delay_ms(1000);
$0063	$301A			MOVLW	26
$0064	$00CC			MOVWF	STACK_12
$0065	$30FF			MOVLW	255
$0066	$00CB			MOVWF	STACK_11
$0067	$30FF			MOVLW	255
$0068	$00CA			MOVWF	STACK_10
$0069	$0BCC			DECFSZ	STACK_12, F
$006A	$286C			GOTO	$+2
$006B	$2873			GOTO	$+8
$006C	$0BCB			DECFSZ	STACK_11, F
$006D	$286F			GOTO	$+2
$006E	$2872			GOTO	$+4
$006F	$0BCA			DECFSZ	STACK_10, F
$0070	$286F			GOTO	$-1
$0071	$286C			GOTO	$-5
$0072	$2869			GOTO	$-9
$0073	$307F			MOVLW	127
$0074	$00CB			MOVWF	STACK_11
$0075	$30FF			MOVLW	255
$0076	$00CA			MOVWF	STACK_10
$0077	$0BCB			DECFSZ	STACK_11, F
$0078	$287A			GOTO	$+2
$0079	$287D			GOTO	$+4
$007A	$0BCA			DECFSZ	STACK_10, F
$007B	$287A			GOTO	$-1
$007C	$2877			GOTO	$-5
$007D	$3058			MOVLW	88
$007E	$00CA			MOVWF	STACK_10
$007F	$0BCA			DECFSZ	STACK_10, F
$0080	$287F			GOTO	$-1
$0081	$0000			NOP
$0082	$0000			NOP
;D_82_16F84A_SD1602_v_2_0.c,36 :: 		}
$0083	$2835			GOTO	L_main_4
;D_82_16F84A_SD1602_v_2_0.c,38 :: 		}
$0084	$2884			GOTO	$
