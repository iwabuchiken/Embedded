;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/03/03 11:35:46
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0103	$	_SD1602_write:
;sd1602_4bit_mode.h,1 :: 		void SD1602_write(char c, char r)
;sd1602_4bit_mode.h,3 :: 		PORTB = c & 0xF0; /* RB4〜RB7にデータの上位4bitをセットする */
$0103	$30F0			MOVLW	240
$0104	$1303			BCF	STATUS, RP1
$0105	$1283			BCF	STATUS, RP0
$0106	$052A			ANDWF	FARG_SD1602_write+0, 0
$0107	$0086			MOVWF	PORTB
;sd1602_4bit_mode.h,5 :: 		if (r == 1) /* 文字コードの場合 */
$0108	$082B			MOVF	FARG_SD1602_write+1, 0
$0109	$3A01			XORLW	1
$010A	$1D03			BTFSS	STATUS, Z
$010B	$290E			GOTO	L_SD1602_write_0
;sd1602_4bit_mode.h,7 :: 		PORTA |= 0x02; /* RSを1にする */
$010C	$1485			BSF	PORTA, 1
;sd1602_4bit_mode.h,8 :: 		}
$010D	$2910			GOTO	L_SD1602_write_1
$010E	$	L_SD1602_write_0:
;sd1602_4bit_mode.h,11 :: 		PORTA &= 0xFD; /* RSを0にする */
$010E	$30FD			MOVLW	253
$010F	$0585			ANDWF	PORTA, 1
;sd1602_4bit_mode.h,12 :: 		}
$0110	$	L_SD1602_write_1:
;sd1602_4bit_mode.h,14 :: 		PORTA &= 0xFE; /* Eを0にする */
$0110	$30FE			MOVLW	254
$0111	$0585			ANDWF	PORTA, 1
;sd1602_4bit_mode.h,15 :: 		Delay_us(1); /* 1us（40ns以上）の時間待ち */
$0112	$3001			MOVLW	1
$0113	$00CA			MOVWF	STACK_10
$0114	$0BCA			DECFSZ	STACK_10, F
$0115	$2914			GOTO	$-1
$0116	$0000			NOP
;sd1602_4bit_mode.h,16 :: 		PORTA |= 0x01; /* Eを1にする */
$0117	$1405			BSF	PORTA, 0
;sd1602_4bit_mode.h,17 :: 		Delay_us(1);  /* 1us（230ns以上）の時間待ち */
$0118	$3001			MOVLW	1
$0119	$00CA			MOVWF	STACK_10
$011A	$0BCA			DECFSZ	STACK_10, F
$011B	$291A			GOTO	$-1
$011C	$0000			NOP
;sd1602_4bit_mode.h,18 :: 		PORTA &= 0xFE; /* Eを0にする */
$011D	$30FE			MOVLW	254
$011E	$0585			ANDWF	PORTA, 1
;sd1602_4bit_mode.h,19 :: 		}
$011F	$0008			RETURN
$0153	$	_SD1602_control:
;sd1602_4bit_mode.h,28 :: 		void SD1602_control(char c)
;sd1602_4bit_mode.h,30 :: 		SD1602_write(c, 0); /* 制御コードの上位4bitを渡す */
$0153	$1303			BCF	STATUS, RP1
$0154	$1283			BCF	STATUS, RP0
$0155	$0829			MOVF	FARG_SD1602_control+0, 0
$0156	$00AA			MOVWF	FARG_SD1602_write+0
$0157	$01AB			CLRF	FARG_SD1602_write+1, 1
$0158	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,31 :: 		SD1602_write(c << 4, 0); /* 制御コードの下位4bitを渡す */
$0159	$0829			MOVF	FARG_SD1602_control+0, 0
$015A	$00AA			MOVWF	FARG_SD1602_write+0
$015B	$0DAA			RLF	FARG_SD1602_write+0, 1
$015C	$102A			BCF	FARG_SD1602_write+0, 0
$015D	$0DAA			RLF	FARG_SD1602_write+0, 1
$015E	$102A			BCF	FARG_SD1602_write+0, 0
$015F	$0DAA			RLF	FARG_SD1602_write+0, 1
$0160	$102A			BCF	FARG_SD1602_write+0, 0
$0161	$0DAA			RLF	FARG_SD1602_write+0, 1
$0162	$102A			BCF	FARG_SD1602_write+0, 0
$0163	$01AB			CLRF	FARG_SD1602_write+1, 1
$0164	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,32 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$0165	$3053			MOVLW	83
$0166	$00CA			MOVWF	STACK_10
$0167	$0BCA			DECFSZ	STACK_10, F
$0168	$2967			GOTO	$-1
;sd1602_4bit_mode.h,33 :: 		}
$0169	$0008			RETURN
$013A	$	_SD1602_display:
;sd1602_4bit_mode.h,21 :: 		void SD1602_display(char c)
;sd1602_4bit_mode.h,23 :: 		SD1602_write(c, 1); /* 文字コードの上位4bitを渡す */
$013A	$1303			BCF	STATUS, RP1
$013B	$1283			BCF	STATUS, RP0
$013C	$0829			MOVF	FARG_SD1602_display+0, 0
$013D	$00AA			MOVWF	FARG_SD1602_write+0
$013E	$3001			MOVLW	1
$013F	$00AB			MOVWF	FARG_SD1602_write+1
$0140	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,24 :: 		SD1602_write(c << 4, 1); /* 文字コードの下位4bitを渡す */
$0141	$0829			MOVF	FARG_SD1602_display+0, 0
$0142	$00AA			MOVWF	FARG_SD1602_write+0
$0143	$0DAA			RLF	FARG_SD1602_write+0, 1
$0144	$102A			BCF	FARG_SD1602_write+0, 0
$0145	$0DAA			RLF	FARG_SD1602_write+0, 1
$0146	$102A			BCF	FARG_SD1602_write+0, 0
$0147	$0DAA			RLF	FARG_SD1602_write+0, 1
$0148	$102A			BCF	FARG_SD1602_write+0, 0
$0149	$0DAA			RLF	FARG_SD1602_write+0, 1
$014A	$102A			BCF	FARG_SD1602_write+0, 0
$014B	$3001			MOVLW	1
$014C	$00AB			MOVWF	FARG_SD1602_write+1
$014D	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,25 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$014E	$3053			MOVLW	83
$014F	$00CA			MOVWF	STACK_10
$0150	$0BCA			DECFSZ	STACK_10, F
$0151	$2950			GOTO	$-1
;sd1602_4bit_mode.h,26 :: 		}
$0152	$0008			RETURN
$0095	$	_SD1602_init:
;sd1602_4bit_mode.h,42 :: 		void SD1602_init(void)
;sd1602_4bit_mode.h,44 :: 		Delay_ms(20); /* 20ms（15ms以上）の時間待ち */
$0095	$3082			MOVLW	130
$0096	$1303			BCF	STATUS, RP1
$0097	$1283			BCF	STATUS, RP0
$0098	$00CB			MOVWF	STACK_11
$0099	$30FF			MOVLW	255
$009A	$00CA			MOVWF	STACK_10
$009B	$0BCB			DECFSZ	STACK_11, F
$009C	$289E			GOTO	$+2
$009D	$28A1			GOTO	$+4
$009E	$0BCA			DECFSZ	STACK_10, F
$009F	$289E			GOTO	$-1
$00A0	$289B			GOTO	$-5
$00A1	$3087			MOVLW	135
$00A2	$00CA			MOVWF	STACK_10
$00A3	$0BCA			DECFSZ	STACK_10, F
$00A4	$28A3			GOTO	$-1
$00A5	$0000			NOP
;sd1602_4bit_mode.h,45 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$00A6	$3030			MOVLW	48
$00A7	$00AA			MOVWF	FARG_SD1602_write+0
$00A8	$01AB			CLRF	FARG_SD1602_write+1, 1
$00A9	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,46 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$00AA	$3021			MOVLW	33
$00AB	$00CB			MOVWF	STACK_11
$00AC	$30FF			MOVLW	255
$00AD	$00CA			MOVWF	STACK_10
$00AE	$0BCB			DECFSZ	STACK_11, F
$00AF	$28B1			GOTO	$+2
$00B0	$28B4			GOTO	$+4
$00B1	$0BCA			DECFSZ	STACK_10, F
$00B2	$28B1			GOTO	$-1
$00B3	$28AE			GOTO	$-5
$00B4	$3060			MOVLW	96
$00B5	$00CA			MOVWF	STACK_10
$00B6	$0BCA			DECFSZ	STACK_10, F
$00B7	$28B6			GOTO	$-1
$00B8	$0000			NOP
$00B9	$0000			NOP
;sd1602_4bit_mode.h,47 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$00BA	$3030			MOVLW	48
$00BB	$00AA			MOVWF	FARG_SD1602_write+0
$00BC	$01AB			CLRF	FARG_SD1602_write+1, 1
$00BD	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,48 :: 		Delay_ms(5); /* 5ms（100us以上）の時間待ち */
$00BE	$3021			MOVLW	33
$00BF	$00CB			MOVWF	STACK_11
$00C0	$30FF			MOVLW	255
$00C1	$00CA			MOVWF	STACK_10
$00C2	$0BCB			DECFSZ	STACK_11, F
$00C3	$28C5			GOTO	$+2
$00C4	$28C8			GOTO	$+4
$00C5	$0BCA			DECFSZ	STACK_10, F
$00C6	$28C5			GOTO	$-1
$00C7	$28C2			GOTO	$-5
$00C8	$3060			MOVLW	96
$00C9	$00CA			MOVWF	STACK_10
$00CA	$0BCA			DECFSZ	STACK_10, F
$00CB	$28CA			GOTO	$-1
$00CC	$0000			NOP
$00CD	$0000			NOP
;sd1602_4bit_mode.h,49 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$00CE	$3030			MOVLW	48
$00CF	$00AA			MOVWF	FARG_SD1602_write+0
$00D0	$01AB			CLRF	FARG_SD1602_write+1, 1
$00D1	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,50 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$00D2	$3021			MOVLW	33
$00D3	$00CB			MOVWF	STACK_11
$00D4	$30FF			MOVLW	255
$00D5	$00CA			MOVWF	STACK_10
$00D6	$0BCB			DECFSZ	STACK_11, F
$00D7	$28D9			GOTO	$+2
$00D8	$28DC			GOTO	$+4
$00D9	$0BCA			DECFSZ	STACK_10, F
$00DA	$28D9			GOTO	$-1
$00DB	$28D6			GOTO	$-5
$00DC	$3060			MOVLW	96
$00DD	$00CA			MOVWF	STACK_10
$00DE	$0BCA			DECFSZ	STACK_10, F
$00DF	$28DE			GOTO	$-1
$00E0	$0000			NOP
$00E1	$0000			NOP
;sd1602_4bit_mode.h,51 :: 		SD1602_write(0x20, 0); /* 4bitモード設定 */
$00E2	$3020			MOVLW	32
$00E3	$00AA			MOVWF	FARG_SD1602_write+0
$00E4	$01AB			CLRF	FARG_SD1602_write+1, 1
$00E5	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,52 :: 		Delay_ms(5); /* 5ms（40us以上）の時間待ち */
$00E6	$3021			MOVLW	33
$00E7	$00CB			MOVWF	STACK_11
$00E8	$30FF			MOVLW	255
$00E9	$00CA			MOVWF	STACK_10
$00EA	$0BCB			DECFSZ	STACK_11, F
$00EB	$28ED			GOTO	$+2
$00EC	$28F0			GOTO	$+4
$00ED	$0BCA			DECFSZ	STACK_10, F
$00EE	$28ED			GOTO	$-1
$00EF	$28EA			GOTO	$-5
$00F0	$3060			MOVLW	96
$00F1	$00CA			MOVWF	STACK_10
$00F2	$0BCA			DECFSZ	STACK_10, F
$00F3	$28F2			GOTO	$-1
$00F4	$0000			NOP
$00F5	$0000			NOP
;sd1602_4bit_mode.h,53 :: 		SD1602_control(0x28); /* 4bitモードで2行表示に設定する */
$00F6	$3028			MOVLW	40
$00F7	$00A9			MOVWF	FARG_SD1602_control+0
$00F8	$2153			CALL	_SD1602_control
;sd1602_4bit_mode.h,54 :: 		SD1602_control(0x08); /* テキスト表示をオフにする */
$00F9	$3008			MOVLW	8
$00FA	$00A9			MOVWF	FARG_SD1602_control+0
$00FB	$2153			CALL	_SD1602_control
;sd1602_4bit_mode.h,55 :: 		SD1602_control(0x0C); /* テキスト表示をオンにする */
$00FC	$300C			MOVLW	12
$00FD	$00A9			MOVWF	FARG_SD1602_control+0
$00FE	$2153			CALL	_SD1602_control
;sd1602_4bit_mode.h,56 :: 		SD1602_control(0x06); /* カーソル移動を右方向に設定する */
$00FF	$3006			MOVLW	6
$0100	$00A9			MOVWF	FARG_SD1602_control+0
$0101	$2153			CALL	_SD1602_control
;sd1602_4bit_mode.h,57 :: 		}
$0102	$0008			RETURN
$0120	$	_SD1602_clear:
;sd1602_4bit_mode.h,35 :: 		void SD1602_clear(void)
;sd1602_4bit_mode.h,37 :: 		SD1602_write(0x01, 0); /* 制御コードの上位4bitを渡す */
$0120	$3001			MOVLW	1
$0121	$1303			BCF	STATUS, RP1
$0122	$1283			BCF	STATUS, RP0
$0123	$00AA			MOVWF	FARG_SD1602_write+0
$0124	$01AB			CLRF	FARG_SD1602_write+1, 1
$0125	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,38 :: 		SD1602_write(0x01 << 4, 0); /* 制御コードの下位4bitを渡す */
$0126	$3010			MOVLW	16
$0127	$00AA			MOVWF	FARG_SD1602_write+0
$0128	$01AB			CLRF	FARG_SD1602_write+1, 1
$0129	$2103			CALL	_SD1602_write
;sd1602_4bit_mode.h,39 :: 		Delay_ms(2); /* 2ms（1.64ms以上）の時間待ち */
$012A	$300D			MOVLW	13
$012B	$00CB			MOVWF	STACK_11
$012C	$30FF			MOVLW	255
$012D	$00CA			MOVWF	STACK_10
$012E	$0BCB			DECFSZ	STACK_11, F
$012F	$2931			GOTO	$+2
$0130	$2934			GOTO	$+4
$0131	$0BCA			DECFSZ	STACK_10, F
$0132	$2931			GOTO	$-1
$0133	$292E			GOTO	$-5
$0134	$30F3			MOVLW	243
$0135	$00CA			MOVWF	STACK_10
$0136	$0BCA			DECFSZ	STACK_10, F
$0137	$2936			GOTO	$-1
$0138	$0000			NOP
;sd1602_4bit_mode.h,40 :: 		}
$0139	$0008			RETURN
$016A	$	_SD1602_print:
;sd1602_4bit_mode.h,59 :: 		void SD1602_print(char *s)
;sd1602_4bit_mode.h,61 :: 		while (*s != 0x00) /* ナル文字（0x00）があらわれるまで */
$016A	$	L_SD1602_print_2:
$016A	$1303			BCF	STATUS, RP1
$016B	$1283			BCF	STATUS, RP0
$016C	$0828			MOVF	FARG_SD1602_print+0, 0
$016D	$0084			MOVWF	FSR
$016E	$0800			MOVF	INDF, 0
$016F	$00C1			MOVWF	STACK_1
$0170	$0841			MOVF	STACK_1, 0
$0171	$3A00			XORLW	0
$0172	$1903			BTFSC	STATUS, Z
$0173	$297B			GOTO	L_SD1602_print_3
;sd1602_4bit_mode.h,63 :: 		SD1602_display(*s); /* テキストデータを表示する */
$0174	$0828			MOVF	FARG_SD1602_print+0, 0
$0175	$0084			MOVWF	FSR
$0176	$0800			MOVF	INDF, 0
$0177	$00A9			MOVWF	FARG_SD1602_display+0
$0178	$213A			CALL	_SD1602_display
;sd1602_4bit_mode.h,64 :: 		s++;
$0179	$0AA8			INCF	FARG_SD1602_print+0, 1
;sd1602_4bit_mode.h,65 :: 		}
$017A	$296A			GOTO	L_SD1602_print_2
$017B	$	L_SD1602_print_3:
;sd1602_4bit_mode.h,66 :: 		}
$017B	$0008			RETURN
$0004	$	_main:
$0004	$3048			MOVLW	72
$0005	$1303			BCF	STATUS, RP1
$0006	$1283			BCF	STATUS, RP0
$0007	$008C			MOVWF	main_s1_L0+0
$0008	$3065			MOVLW	101
$0009	$008D			MOVWF	main_s1_L0+1
$000A	$306C			MOVLW	108
$000B	$008E			MOVWF	main_s1_L0+2
$000C	$306C			MOVLW	108
$000D	$008F			MOVWF	main_s1_L0+3
$000E	$306F			MOVLW	111
$000F	$0090			MOVWF	main_s1_L0+4
$0010	$3021			MOVLW	33
$0011	$0091			MOVWF	main_s1_L0+5
$0012	$3020			MOVLW	32
$0013	$0092			MOVWF	main_s1_L0+6
$0014	$3077			MOVLW	119
$0015	$0093			MOVWF	main_s1_L0+7
$0016	$306F			MOVLW	111
$0017	$0094			MOVWF	main_s1_L0+8
$0018	$3072			MOVLW	114
$0019	$0095			MOVWF	main_s1_L0+9
$001A	$306C			MOVLW	108
$001B	$0096			MOVWF	main_s1_L0+10
$001C	$3064			MOVLW	100
$001D	$0097			MOVWF	main_s1_L0+11
$001E	$302E			MOVLW	46
$001F	$0098			MOVWF	main_s1_L0+12
$0020	$0199			CLRF	main_s1_L0+13
$0021	$3054			MOVLW	84
$0022	$009A			MOVWF	main_s2_L0+0
$0023	$3048			MOVLW	72
$0024	$009B			MOVWF	main_s2_L0+1
$0025	$3049			MOVLW	73
$0026	$009C			MOVWF	main_s2_L0+2
$0027	$3053			MOVLW	83
$0028	$009D			MOVWF	main_s2_L0+3
$0029	$3020			MOVLW	32
$002A	$009E			MOVWF	main_s2_L0+4
$002B	$3049			MOVLW	73
$002C	$009F			MOVWF	main_s2_L0+5
$002D	$3053			MOVLW	83
$002E	$00A0			MOVWF	main_s2_L0+6
$002F	$3020			MOVLW	32
$0030	$00A1			MOVWF	main_s2_L0+7
$0031	$3034			MOVLW	52
$0032	$00A2			MOVWF	main_s2_L0+8
$0033	$302D			MOVLW	45
$0034	$00A3			MOVWF	main_s2_L0+9
$0035	$3042			MOVLW	66
$0036	$00A4			MOVWF	main_s2_L0+10
$0037	$3049			MOVLW	73
$0038	$00A5			MOVWF	main_s2_L0+11
$0039	$3054			MOVLW	84
$003A	$00A6			MOVWF	main_s2_L0+12
$003B	$01A7			CLRF	main_s2_L0+13
;D_82_16F84A_SD1602_v_3_0.c,3 :: 		void main(void)
;D_82_16F84A_SD1602_v_3_0.c,8 :: 		TRISA     = 0x00;
$003C	$1683			BSF	STATUS, RP0
$003D	$0185			CLRF	TRISA, 1
;D_82_16F84A_SD1602_v_3_0.c,9 :: 		PORTA     = 0x00;
$003E	$1283			BCF	STATUS, RP0
$003F	$0185			CLRF	PORTA, 1
;D_82_16F84A_SD1602_v_3_0.c,10 :: 		TRISB     = 0x00;
$0040	$1683			BSF	STATUS, RP0
$0041	$0186			CLRF	TRISB, 1
;D_82_16F84A_SD1602_v_3_0.c,11 :: 		PORTB     = 0x00;
$0042	$1283			BCF	STATUS, RP0
$0043	$0186			CLRF	PORTB, 1
;D_82_16F84A_SD1602_v_3_0.c,14 :: 		SD1602_init();
$0044	$2095			CALL	_SD1602_init
;D_82_16F84A_SD1602_v_3_0.c,16 :: 		while(1)
$0045	$	L_main_4:
;D_82_16F84A_SD1602_v_3_0.c,19 :: 		SD1602_clear();
$0045	$2120			CALL	_SD1602_clear
;D_82_16F84A_SD1602_v_3_0.c,21 :: 		SD1602_control(0x80);
$0046	$3080			MOVLW	128
$0047	$00A9			MOVWF	FARG_SD1602_control+0
$0048	$2153			CALL	_SD1602_control
;D_82_16F84A_SD1602_v_3_0.c,23 :: 		SD1602_print(s1);
$0049	$300C			MOVLW	main_s1_L0
$004A	$00A8			MOVWF	FARG_SD1602_print+0
$004B	$216A			CALL	_SD1602_print
;D_82_16F84A_SD1602_v_3_0.c,25 :: 		Delay_ms(1000);
$004C	$301A			MOVLW	26
$004D	$00CC			MOVWF	STACK_12
$004E	$30FF			MOVLW	255
$004F	$00CB			MOVWF	STACK_11
$0050	$30FF			MOVLW	255
$0051	$00CA			MOVWF	STACK_10
$0052	$0BCC			DECFSZ	STACK_12, F
$0053	$2855			GOTO	$+2
$0054	$285C			GOTO	$+8
$0055	$0BCB			DECFSZ	STACK_11, F
$0056	$2858			GOTO	$+2
$0057	$285B			GOTO	$+4
$0058	$0BCA			DECFSZ	STACK_10, F
$0059	$2858			GOTO	$-1
$005A	$2855			GOTO	$-5
$005B	$2852			GOTO	$-9
$005C	$307F			MOVLW	127
$005D	$00CB			MOVWF	STACK_11
$005E	$30FF			MOVLW	255
$005F	$00CA			MOVWF	STACK_10
$0060	$0BCB			DECFSZ	STACK_11, F
$0061	$2863			GOTO	$+2
$0062	$2866			GOTO	$+4
$0063	$0BCA			DECFSZ	STACK_10, F
$0064	$2863			GOTO	$-1
$0065	$2860			GOTO	$-5
$0066	$3058			MOVLW	88
$0067	$00CA			MOVWF	STACK_10
$0068	$0BCA			DECFSZ	STACK_10, F
$0069	$2868			GOTO	$-1
$006A	$0000			NOP
$006B	$0000			NOP
;D_82_16F84A_SD1602_v_3_0.c,28 :: 		SD1602_clear();
$006C	$2120			CALL	_SD1602_clear
;D_82_16F84A_SD1602_v_3_0.c,30 :: 		SD1602_control(0xC0);
$006D	$30C0			MOVLW	192
$006E	$00A9			MOVWF	FARG_SD1602_control+0
$006F	$2153			CALL	_SD1602_control
;D_82_16F84A_SD1602_v_3_0.c,32 :: 		SD1602_print(s2);
$0070	$301A			MOVLW	main_s2_L0
$0071	$00A8			MOVWF	FARG_SD1602_print+0
$0072	$216A			CALL	_SD1602_print
;D_82_16F84A_SD1602_v_3_0.c,34 :: 		Delay_ms(1000);
$0073	$301A			MOVLW	26
$0074	$00CC			MOVWF	STACK_12
$0075	$30FF			MOVLW	255
$0076	$00CB			MOVWF	STACK_11
$0077	$30FF			MOVLW	255
$0078	$00CA			MOVWF	STACK_10
$0079	$0BCC			DECFSZ	STACK_12, F
$007A	$287C			GOTO	$+2
$007B	$2883			GOTO	$+8
$007C	$0BCB			DECFSZ	STACK_11, F
$007D	$287F			GOTO	$+2
$007E	$2882			GOTO	$+4
$007F	$0BCA			DECFSZ	STACK_10, F
$0080	$287F			GOTO	$-1
$0081	$287C			GOTO	$-5
$0082	$2879			GOTO	$-9
$0083	$307F			MOVLW	127
$0084	$00CB			MOVWF	STACK_11
$0085	$30FF			MOVLW	255
$0086	$00CA			MOVWF	STACK_10
$0087	$0BCB			DECFSZ	STACK_11, F
$0088	$288A			GOTO	$+2
$0089	$288D			GOTO	$+4
$008A	$0BCA			DECFSZ	STACK_10, F
$008B	$288A			GOTO	$-1
$008C	$2887			GOTO	$-5
$008D	$3058			MOVLW	88
$008E	$00CA			MOVWF	STACK_10
$008F	$0BCA			DECFSZ	STACK_10, F
$0090	$288F			GOTO	$-1
$0091	$0000			NOP
$0092	$0000			NOP
;D_82_16F84A_SD1602_v_3_0.c,36 :: 		}
$0093	$2845			GOTO	L_main_4
;D_82_16F84A_SD1602_v_3_0.c,38 :: 		}
$0094	$2894			GOTO	$
