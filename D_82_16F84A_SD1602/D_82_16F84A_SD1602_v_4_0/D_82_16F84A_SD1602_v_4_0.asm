;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/03/06 20:30:17
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$283A			GOTO	_main
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$0093			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$0092			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0094			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0095			MOVWF	STSAVED_0
;D_82_16F84A_SD1602_v_4_0.c,21 :: 		void interrupt(void)
;D_82_16F84A_SD1602_v_4_0.c,23 :: 		INTCON         &= 0x7F;
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D_82_16F84A_SD1602_v_4_0.c,24 :: 		INTCON         &= 0xEF;
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D_82_16F84A_SD1602_v_4_0.c,25 :: 		INTCON         &= 0xFD;
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D_82_16F84A_SD1602_v_4_0.c,27 :: 		Delay_ms(20);
$0015	$3082			MOVLW	130
$0016	$00CB			MOVWF	STACK_11
$0017	$30FF			MOVLW	255
$0018	$00CA			MOVWF	STACK_10
$0019	$0BCB			DECFSZ	STACK_11, F
$001A	$281C			GOTO	$+2
$001B	$281F			GOTO	$+4
$001C	$0BCA			DECFSZ	STACK_10, F
$001D	$281C			GOTO	$-1
$001E	$2819			GOTO	$-5
$001F	$3087			MOVLW	135
$0020	$00CA			MOVWF	STACK_10
$0021	$0BCA			DECFSZ	STACK_10, F
$0022	$2821			GOTO	$-1
$0023	$0000			NOP
;D_82_16F84A_SD1602_v_4_0.c,29 :: 		if((PORTB & 0x01) == 0)
$0024	$3001			MOVLW	1
$0025	$0506			ANDWF	PORTB, 0
$0026	$00C1			MOVWF	STACK_1
$0027	$0841			MOVF	STACK_1, 0
$0028	$3A00			XORLW	0
$0029	$1D03			BTFSS	STATUS, Z
$002A	$282D			GOTO	L_interrupt_2
;D_82_16F84A_SD1602_v_4_0.c,31 :: 		PORTA   ^= 0x03;
$002B	$3003			MOVLW	3
$002C	$0685			XORWF	PORTA, 1
;D_82_16F84A_SD1602_v_4_0.c,37 :: 		}
$002D	$	L_interrupt_2:
;D_82_16F84A_SD1602_v_4_0.c,39 :: 		INTCON         |= 0x10;
$002D	$160B			BSF	INTCON, 4
;D_82_16F84A_SD1602_v_4_0.c,40 :: 		INTCON         |= 0x80;
$002E	$178B			BSF	INTCON, 7
;D_82_16F84A_SD1602_v_4_0.c,42 :: 		}//void interrupt(void)
$002F	$	L_Interrupt_end:
$002F	$0815			MOVF	STSAVED_0, 0
$0030	$00C0			MOVWF	STACK_0
$0031	$0814			MOVF	?savePCLATH, 0
$0032	$008A			MOVWF	PCLATH
$0033	$0812			MOVF	?saveFSR, 0
$0034	$0084			MOVWF	FSR
$0035	$0E13			SWAPF	?saveSTATUS, 0
$0036	$0083			MOVWF	STATUS
$0037	$0ECF			SWAPF	STACK_15, 1
$0038	$0E4F			SWAPF	STACK_15, 0
$0039	$0009			RETFIE
$004F	$	table__lstr_1_D_82_16F84A_SD1602_v_4_0:
$004F	$3454			RETLW	84
$0050	$3448			RETLW	72
$0051	$3449			RETLW	73
$0052	$3453			RETLW	83
$0053	$3420			RETLW	32
$0054	$3449			RETLW	73
$0055	$3453			RETLW	83
$0056	$3420			RETLW	32
$0057	$3438			RETLW	56
$0058	$342D			RETLW	45
$0059	$3442			RETLW	66
$005A	$3449			RETLW	73
$005B	$3454			RETLW	84
$005C	$3400			RETLW	0
$005D	$0008			RETURN
$005E	$	table__lstr_2_D_82_16F84A_SD1602_v_4_0:
$005E	$3454			RETLW	84
$005F	$3448			RETLW	72
$0060	$3449			RETLW	73
$0061	$3453			RETLW	83
$0062	$3420			RETLW	32
$0063	$3449			RETLW	73
$0064	$3453			RETLW	83
$0065	$3420			RETLW	32
$0066	$3434			RETLW	52
$0067	$342D			RETLW	45
$0068	$3442			RETLW	66
$0069	$3449			RETLW	73
$006A	$3454			RETLW	84
$006B	$3400			RETLW	0
$006C	$0008			RETURN
$006D	$	GlobalIniD_82_16F84A_SD1602_v_4_0:
$006D	$304F			MOVLW	#lstr_1_D_82_16F84A_SD1602_v_4_0
$006E	$1303			BCF	STATUS, RP1
$006F	$1283			BCF	STATUS, RP0
$0070	$008C			MOVWF	_s1+0
$0071	$3000			MOVLW	@#lstr_1_D_82_16F84A_SD1602_v_4_0
$0072	$008D			MOVWF	_s1+1
$0073	$305E			MOVLW	#lstr_2_D_82_16F84A_SD1602_v_4_0
$0074	$008E			MOVWF	_s2+0
$0075	$3000			MOVLW	@#lstr_2_D_82_16F84A_SD1602_v_4_0
$0076	$008F			MOVWF	_s2+1
$0077	$3001			MOVLW	1
$0078	$0090			MOVWF	_flag+0
$0079	$3000			MOVLW	0
$007A	$0091			MOVWF	_flag+1
$007B	$0008			RETURN
$003A	$	_main:
;D_82_16F84A_SD1602_v_4_0.c,44 :: 		void main(void)
;D_82_16F84A_SD1602_v_4_0.c,47 :: 		TRISA     = 0x00;
$003A	$206D			CALL	GlobalIniD_82_16F84A_SD1602_v_4_0
$003B	$1683			BSF	STATUS, RP0
$003C	$0185			CLRF	TRISA, 1
;D_82_16F84A_SD1602_v_4_0.c,48 :: 		PORTA     = 0x02;
$003D	$3002			MOVLW	2
$003E	$1283			BCF	STATUS, RP0
$003F	$0085			MOVWF	PORTA
;D_82_16F84A_SD1602_v_4_0.c,49 :: 		TRISB     = 0xFF;
$0040	$30FF			MOVLW	255
$0041	$1683			BSF	STATUS, RP0
$0042	$0086			MOVWF	TRISB
;D_82_16F84A_SD1602_v_4_0.c,51 :: 		OPTION_REG &= 0x7F;
$0043	$307F			MOVLW	127
$0044	$0501			ANDWF	OPTION_REG, 0
$0045	$00C0			MOVWF	STACK_0
$0046	$0840			MOVF	STACK_0, 0
$0047	$0081			MOVWF	OPTION_REG
;D_82_16F84A_SD1602_v_4_0.c,52 :: 		OPTION_REG &= 0xBF;
$0048	$30BF			MOVLW	191
$0049	$0540			ANDWF	STACK_0, 0
$004A	$0081			MOVWF	OPTION_REG
;D_82_16F84A_SD1602_v_4_0.c,54 :: 		INTCON         |= 0x10;
$004B	$160B			BSF	INTCON, 4
;D_82_16F84A_SD1602_v_4_0.c,55 :: 		INTCON         |= 0x80;
$004C	$178B			BSF	INTCON, 7
;D_82_16F84A_SD1602_v_4_0.c,57 :: 		while(1)
$004D	$	L_main_3:
$004D	$284D			GOTO	L_main_3
;D_82_16F84A_SD1602_v_4_0.c,72 :: 		}//void main(void)
$004E	$284E			GOTO	$
