;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/07/26 16:27:29
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$291F			GOTO	_main
$0094	$	__pulse:
;D_85_Remote_v_5_3_2b_Rcv.c,35 :: 		void _pulse(int num)
;D_85_Remote_v_5_3_2b_Rcv.c,39 :: 		for(i = 0; i < num; i++)
$0094	$1303			BCF	STATUS, RP1
$0095	$1283			BCF	STATUS, RP0
$0096	$019A			CLRF	_pulse_i_L0
$0097	$019B			CLRF	_pulse_i_L0+1
$0098	$	L__pulse_0:
$0098	$3080			MOVLW	128
$0099	$061B			XORWF	_pulse_i_L0+1, 0
$009A	$00C0			MOVWF	STACK_0
$009B	$3080			MOVLW	128
$009C	$0619			XORWF	FARG__pulse+1, 0
$009D	$0240			SUBWF	STACK_0, 0
$009E	$1D03			BTFSS	STATUS, Z
$009F	$28A2			GOTO	L__pulse_37
$00A0	$0818			MOVF	FARG__pulse+0, 0
$00A1	$021A			SUBWF	_pulse_i_L0, 0
$00A2	$	L__pulse_37:
$00A2	$1803			BTFSC	STATUS, C
$00A3	$28CB			GOTO	L__pulse_1
;D_85_Remote_v_5_3_2b_Rcv.c,42 :: 		PORTA = 0x01; Delay_ms(1);
$00A4	$3001			MOVLW	1
$00A5	$0085			MOVWF	PORTA
$00A6	$3007			MOVLW	7
$00A7	$00CB			MOVWF	STACK_11
$00A8	$30FF			MOVLW	255
$00A9	$00CA			MOVWF	STACK_10
$00AA	$0BCB			DECFSZ	STACK_11, F
$00AB	$28AD			GOTO	$+2
$00AC	$28B0			GOTO	$+4
$00AD	$0BCA			DECFSZ	STACK_10, F
$00AE	$28AD			GOTO	$-1
$00AF	$28AA			GOTO	$-5
$00B0	$3078			MOVLW	120
$00B1	$00CA			MOVWF	STACK_10
$00B2	$0BCA			DECFSZ	STACK_10, F
$00B3	$28B2			GOTO	$-1
$00B4	$0000			NOP
$00B5	$0000			NOP
;D_85_Remote_v_5_3_2b_Rcv.c,44 :: 		PORTA = 0x00; Delay_ms(1);
$00B6	$0185			CLRF	PORTA, 1
$00B7	$3007			MOVLW	7
$00B8	$00CB			MOVWF	STACK_11
$00B9	$30FF			MOVLW	255
$00BA	$00CA			MOVWF	STACK_10
$00BB	$0BCB			DECFSZ	STACK_11, F
$00BC	$28BE			GOTO	$+2
$00BD	$28C1			GOTO	$+4
$00BE	$0BCA			DECFSZ	STACK_10, F
$00BF	$28BE			GOTO	$-1
$00C0	$28BB			GOTO	$-5
$00C1	$3078			MOVLW	120
$00C2	$00CA			MOVWF	STACK_10
$00C3	$0BCA			DECFSZ	STACK_10, F
$00C4	$28C3			GOTO	$-1
$00C5	$0000			NOP
$00C6	$0000			NOP
;D_85_Remote_v_5_3_2b_Rcv.c,46 :: 		}
$00C7	$	L__pulse_2:
;D_85_Remote_v_5_3_2b_Rcv.c,39 :: 		for(i = 0; i < num; i++)
$00C7	$0A9A			INCF	_pulse_i_L0, 1
$00C8	$1903			BTFSC	STATUS, Z
$00C9	$0A9B			INCF	_pulse_i_L0+1, 1
;D_85_Remote_v_5_3_2b_Rcv.c,46 :: 		}
$00CA	$2898			GOTO	L__pulse_0
$00CB	$	L__pulse_1:
;D_85_Remote_v_5_3_2b_Rcv.c,48 :: 		}
$00CB	$0008			RETURN
$00FD	$	__pulse_u_100:
;D_85_Remote_v_5_3_2b_Rcv.c,86 :: 		void _pulse_u_100(int num)
;D_85_Remote_v_5_3_2b_Rcv.c,90 :: 		for(i = 0; i < num; i++)
$00FD	$1303			BCF	STATUS, RP1
$00FE	$1283			BCF	STATUS, RP0
$00FF	$019A			CLRF	_pulse_u_100_i_L0
$0100	$019B			CLRF	_pulse_u_100_i_L0+1
$0101	$	L__pulse_u_100_9:
$0101	$3080			MOVLW	128
$0102	$061B			XORWF	_pulse_u_100_i_L0+1, 0
$0103	$00C0			MOVWF	STACK_0
$0104	$3080			MOVLW	128
$0105	$0619			XORWF	FARG__pulse_u_100+1, 0
$0106	$0240			SUBWF	STACK_0, 0
$0107	$1D03			BTFSS	STATUS, Z
$0108	$290B			GOTO	L__pulse_u_100_40
$0109	$0818			MOVF	FARG__pulse_u_100+0, 0
$010A	$021A			SUBWF	_pulse_u_100_i_L0, 0
$010B	$	L__pulse_u_100_40:
$010B	$1803			BTFSC	STATUS, C
$010C	$291E			GOTO	L__pulse_u_100_10
;D_85_Remote_v_5_3_2b_Rcv.c,93 :: 		PORTA = 0x01; Delay_us(100);
$010D	$3001			MOVLW	1
$010E	$0085			MOVWF	PORTA
$010F	$30A6			MOVLW	166
$0110	$00CA			MOVWF	STACK_10
$0111	$0BCA			DECFSZ	STACK_10, F
$0112	$2911			GOTO	$-1
$0113	$0000			NOP
;D_85_Remote_v_5_3_2b_Rcv.c,95 :: 		PORTA = 0x00; Delay_us(100);
$0114	$0185			CLRF	PORTA, 1
$0115	$30A6			MOVLW	166
$0116	$00CA			MOVWF	STACK_10
$0117	$0BCA			DECFSZ	STACK_10, F
$0118	$2917			GOTO	$-1
$0119	$0000			NOP
;D_85_Remote_v_5_3_2b_Rcv.c,97 :: 		}
$011A	$	L__pulse_u_100_11:
;D_85_Remote_v_5_3_2b_Rcv.c,90 :: 		for(i = 0; i < num; i++)
$011A	$0A9A			INCF	_pulse_u_100_i_L0, 1
$011B	$1903			BTFSC	STATUS, Z
$011C	$0A9B			INCF	_pulse_u_100_i_L0+1, 1
;D_85_Remote_v_5_3_2b_Rcv.c,97 :: 		}
$011D	$2901			GOTO	L__pulse_u_100_9
$011E	$	L__pulse_u_100_10:
;D_85_Remote_v_5_3_2b_Rcv.c,99 :: 		}
$011E	$0008			RETURN
$015B	$	__while_PORTB_0x01:
;D_85_Remote_v_5_3_2b_Rcv.c,101 :: 		void _while_PORTB_0x01(int num)
;D_85_Remote_v_5_3_2b_Rcv.c,104 :: 		while((PORTB & 0x01) == num) //---------------------
$015B	$	L__while_PORTB_0x01_12:
$015B	$3001			MOVLW	1
$015C	$1303			BCF	STATUS, RP1
$015D	$1283			BCF	STATUS, RP0
$015E	$0506			ANDWF	PORTB, 0
$015F	$00C1			MOVWF	STACK_1
$0160	$3000			MOVLW	0
$0161	$0615			XORWF	FARG__while_PORTB_0x01+1, 0
$0162	$1D03			BTFSS	STATUS, Z
$0163	$2966			GOTO	L__while_PORTB_0x01_41
$0164	$0814			MOVF	FARG__while_PORTB_0x01+0, 0
$0165	$0641			XORWF	STACK_1, 0
$0166	$	L__while_PORTB_0x01_41:
$0166	$1D03			BTFSS	STATUS, Z
$0167	$2973			GOTO	L__while_PORTB_0x01_13
;D_85_Remote_v_5_3_2b_Rcv.c,107 :: 		if(TMR0 == 255)
$0168	$0801			MOVF	TMR0, 0
$0169	$3AFF			XORLW	255
$016A	$1D03			BTFSS	STATUS, Z
$016B	$2972			GOTO	L__while_PORTB_0x01_14
;D_85_Remote_v_5_3_2b_Rcv.c,111 :: 		_pulse(3);
$016C	$3003			MOVLW	3
$016D	$0098			MOVWF	FARG__pulse+0
$016E	$3000			MOVLW	0
$016F	$0099			MOVWF	FARG__pulse+1
$0170	$2094			CALL	__pulse
;D_85_Remote_v_5_3_2b_Rcv.c,114 :: 		return;
$0171	$0008			RETURN
;D_85_Remote_v_5_3_2b_Rcv.c,116 :: 		}
$0172	$	L__while_PORTB_0x01_14:
;D_85_Remote_v_5_3_2b_Rcv.c,118 :: 		}//while((PORTB & 0x01) == 0)
$0172	$295B			GOTO	L__while_PORTB_0x01_12
$0173	$	L__while_PORTB_0x01_13:
;D_85_Remote_v_5_3_2b_Rcv.c,120 :: 		return;
;D_85_Remote_v_5_3_2b_Rcv.c,122 :: 		}
$0173	$0008			RETURN
$00CC	$	__judge_TMR_:
;D_85_Remote_v_5_3_2b_Rcv.c,128 :: 		int _judge_TMR_(int low, int high) {
;D_85_Remote_v_5_3_2b_Rcv.c,130 :: 		if(TMR0 < low) //---------------------
$00CC	$3080			MOVLW	128
$00CD	$1303			BCF	STATUS, RP1
$00CE	$1283			BCF	STATUS, RP0
$00CF	$00C0			MOVWF	STACK_0
$00D0	$3080			MOVLW	128
$00D1	$0615			XORWF	FARG__judge_TMR_+1, 0
$00D2	$0240			SUBWF	STACK_0, 0
$00D3	$1D03			BTFSS	STATUS, Z
$00D4	$28D7			GOTO	L__judge_TMR__42
$00D5	$0814			MOVF	FARG__judge_TMR_+0, 0
$00D6	$0201			SUBWF	TMR0, 0
$00D7	$	L__judge_TMR__42:
$00D7	$1803			BTFSC	STATUS, C
$00D8	$28E3			GOTO	L__judge_TMR__15
;D_85_Remote_v_5_3_2b_Rcv.c,133 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$00D9	$160B			BSF	INTCON, 4
;D_85_Remote_v_5_3_2b_Rcv.c,134 :: 		INTCON |= 0x80;        // interrupt => permitted
$00DA	$178B			BSF	INTCON, 7
;D_85_Remote_v_5_3_2b_Rcv.c,141 :: 		_pulse(1);
$00DB	$3001			MOVLW	1
$00DC	$0098			MOVWF	FARG__pulse+0
$00DD	$3000			MOVLW	0
$00DE	$0099			MOVWF	FARG__pulse+1
$00DF	$2094			CALL	__pulse
;D_85_Remote_v_5_3_2b_Rcv.c,143 :: 		return false;                // return
$00E0	$01C0			CLRF	STACK_0
$00E1	$01C1			CLRF	STACK_0+1
$00E2	$0008			RETURN
;D_85_Remote_v_5_3_2b_Rcv.c,154 :: 		} else if (TMR0 > high) {
$00E3	$	L__judge_TMR__15:
$00E3	$3080			MOVLW	128
$00E4	$0617			XORWF	FARG__judge_TMR_+3, 0
$00E5	$00C0			MOVWF	STACK_0
$00E6	$3080			MOVLW	128
$00E7	$0240			SUBWF	STACK_0, 0
$00E8	$1D03			BTFSS	STATUS, Z
$00E9	$28EC			GOTO	L__judge_TMR__43
$00EA	$0801			MOVF	TMR0, 0
$00EB	$0216			SUBWF	FARG__judge_TMR_+2, 0
$00EC	$	L__judge_TMR__43:
$00EC	$1803			BTFSC	STATUS, C
$00ED	$28F8			GOTO	L__judge_TMR__17
;D_85_Remote_v_5_3_2b_Rcv.c,156 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$00EE	$160B			BSF	INTCON, 4
;D_85_Remote_v_5_3_2b_Rcv.c,157 :: 		INTCON |= 0x80;        // interrupt => permitted
$00EF	$178B			BSF	INTCON, 7
;D_85_Remote_v_5_3_2b_Rcv.c,160 :: 		_pulse(2);
$00F0	$3002			MOVLW	2
$00F1	$0098			MOVWF	FARG__pulse+0
$00F2	$3000			MOVLW	0
$00F3	$0099			MOVWF	FARG__pulse+1
$00F4	$2094			CALL	__pulse
;D_85_Remote_v_5_3_2b_Rcv.c,162 :: 		return false;
$00F5	$01C0			CLRF	STACK_0
$00F6	$01C1			CLRF	STACK_0+1
$00F7	$0008			RETURN
;D_85_Remote_v_5_3_2b_Rcv.c,164 :: 		}
$00F8	$	L__judge_TMR__17:
$00F8	$	L__judge_TMR__16:
;D_85_Remote_v_5_3_2b_Rcv.c,166 :: 		return true;
$00F8	$3001			MOVLW	1
$00F9	$00C0			MOVWF	STACK_0
$00FA	$3000			MOVLW	0
$00FB	$00C1			MOVWF	STACK_0+1
;D_85_Remote_v_5_3_2b_Rcv.c,168 :: 		}//int _judge_TMR_(int low, int high)
$00FC	$0008			RETURN
$0050	$	__custom_lower:
;D_85_Remote_v_5_3_2b_Rcv.c,217 :: 		void _custom_lower(void)
;D_85_Remote_v_5_3_2b_Rcv.c,222 :: 		custom_code_a = 0x00;
$0050	$1303			BCF	STATUS, RP1
$0051	$1283			BCF	STATUS, RP0
$0052	$018C			CLRF	_custom_code_a, 1
;D_85_Remote_v_5_3_2b_Rcv.c,226 :: 		for(i = 0; i < bit_len; i++)
$0053	$018D			CLRF	_i, 1
$0054	$	L__custom_lower_22:
$0054	$080E			MOVF	_bit_len, 0
$0055	$020D			SUBWF	_i, 0
$0056	$1803			BTFSC	STATUS, C
$0057	$2893			GOTO	L__custom_lower_23
;D_85_Remote_v_5_3_2b_Rcv.c,228 :: 		RESET_TMR;
$0058	$0181			CLRF	TMR0, 1
;D_85_Remote_v_5_3_2b_Rcv.c,230 :: 		while((PORTB & 0x01) == 0)
$0059	$	L__custom_lower_25:
$0059	$3001			MOVLW	1
$005A	$0506			ANDWF	PORTB, 0
$005B	$00C1			MOVWF	STACK_1
$005C	$0841			MOVF	STACK_1, 0
$005D	$3A00			XORLW	0
$005E	$1D03			BTFSS	STATUS, Z
$005F	$2865			GOTO	L__custom_lower_26
;D_85_Remote_v_5_3_2b_Rcv.c,233 :: 		TIME_OUT;
$0060	$0801			MOVF	TMR0, 0
$0061	$3AFF			XORLW	255
$0062	$1903			BTFSC	STATUS, Z
$0063	$2865			GOTO	L__custom_lower_26
$0064	$	L__custom_lower_27:
;D_85_Remote_v_5_3_2b_Rcv.c,235 :: 		}
$0064	$2859			GOTO	L__custom_lower_25
$0065	$	L__custom_lower_26:
;D_85_Remote_v_5_3_2b_Rcv.c,237 :: 		while((PORTB & 0x01) == 1)
$0065	$	L__custom_lower_28:
$0065	$3001			MOVLW	1
$0066	$0506			ANDWF	PORTB, 0
$0067	$00C1			MOVWF	STACK_1
$0068	$0841			MOVF	STACK_1, 0
$0069	$3A01			XORLW	1
$006A	$1D03			BTFSS	STATUS, Z
$006B	$2871			GOTO	L__custom_lower_29
;D_85_Remote_v_5_3_2b_Rcv.c,240 :: 		TIME_OUT;
$006C	$0801			MOVF	TMR0, 0
$006D	$3AFF			XORLW	255
$006E	$1903			BTFSC	STATUS, Z
$006F	$2871			GOTO	L__custom_lower_29
$0070	$	L__custom_lower_30:
;D_85_Remote_v_5_3_2b_Rcv.c,242 :: 		}
$0070	$2865			GOTO	L__custom_lower_28
$0071	$	L__custom_lower_29:
;D_85_Remote_v_5_3_2b_Rcv.c,244 :: 		if (TMR0 < 33)
$0071	$3021			MOVLW	33
$0072	$0201			SUBWF	TMR0, 0
$0073	$1803			BTFSC	STATUS, C
$0074	$2884			GOTO	L__custom_lower_31
;D_85_Remote_v_5_3_2b_Rcv.c,247 :: 		custom_code_a &= ~(0x01 << i);
$0075	$080D			MOVF	_i, 0
$0076	$00C1			MOVWF	STACK_1
$0077	$3001			MOVLW	1
$0078	$00C0			MOVWF	STACK_0
$0079	$0841			MOVF	STACK_1, 0
$007A	$	L__custom_lower_44:
$007A	$1903			BTFSC	STATUS, Z
$007B	$2880			GOTO	L__custom_lower_45
$007C	$0DC0			RLF	STACK_0, 1
$007D	$1040			BCF	STACK_0, 0
$007E	$3FFF			ADDLW	255
$007F	$287A			GOTO	L__custom_lower_44
$0080	$	L__custom_lower_45:
$0080	$09C0			COMF	STACK_0, F
$0081	$0840			MOVF	STACK_0, 0
$0082	$058C			ANDWF	_custom_code_a, 1
;D_85_Remote_v_5_3_2b_Rcv.c,249 :: 		}
$0083	$2891			GOTO	L__custom_lower_32
$0084	$	L__custom_lower_31:
;D_85_Remote_v_5_3_2b_Rcv.c,253 :: 		custom_code_a |= (0x01 << i);
$0084	$080D			MOVF	_i, 0
$0085	$00C1			MOVWF	STACK_1
$0086	$3001			MOVLW	1
$0087	$00C0			MOVWF	STACK_0
$0088	$0841			MOVF	STACK_1, 0
$0089	$	L__custom_lower_46:
$0089	$1903			BTFSC	STATUS, Z
$008A	$288F			GOTO	L__custom_lower_47
$008B	$0DC0			RLF	STACK_0, 1
$008C	$1040			BCF	STACK_0, 0
$008D	$3FFF			ADDLW	255
$008E	$2889			GOTO	L__custom_lower_46
$008F	$	L__custom_lower_47:
$008F	$0840			MOVF	STACK_0, 0
$0090	$048C			IORWF	_custom_code_a, 1
;D_85_Remote_v_5_3_2b_Rcv.c,255 :: 		}//if (TMR0 < 33)
$0091	$	L__custom_lower_32:
;D_85_Remote_v_5_3_2b_Rcv.c,257 :: 		}//for(i = 0; i < bit_len; i++)
$0091	$	L__custom_lower_24:
;D_85_Remote_v_5_3_2b_Rcv.c,226 :: 		for(i = 0; i < bit_len; i++)
$0091	$0A8D			INCF	_i, 1
;D_85_Remote_v_5_3_2b_Rcv.c,257 :: 		}//for(i = 0; i < bit_len; i++)
$0092	$2854			GOTO	L__custom_lower_22
$0093	$	L__custom_lower_23:
;D_85_Remote_v_5_3_2b_Rcv.c,266 :: 		}//_custom_lower
$0093	$0008			RETURN
$013F	$	__response:
;D_85_Remote_v_5_3_2b_Rcv.c,170 :: 		void _response(void)
;D_85_Remote_v_5_3_2b_Rcv.c,178 :: 		if (custom_code_a == 0x0A) {
$013F	$1303			BCF	STATUS, RP1
$0140	$1283			BCF	STATUS, RP0
$0141	$080C			MOVF	_custom_code_a, 0
$0142	$3A0A			XORLW	10
$0143	$1D03			BTFSS	STATUS, Z
$0144	$294B			GOTO	L__response_18
;D_85_Remote_v_5_3_2b_Rcv.c,180 :: 		_pulse_u_100(1);
$0145	$3001			MOVLW	1
$0146	$0098			MOVWF	FARG__pulse_u_100+0
$0147	$3000			MOVLW	0
$0148	$0099			MOVWF	FARG__pulse_u_100+1
$0149	$20FD			CALL	__pulse_u_100
;D_85_Remote_v_5_3_2b_Rcv.c,184 :: 		} else if (custom_code_a == 0xFA) {
$014A	$295A			GOTO	L__response_19
$014B	$	L__response_18:
$014B	$080C			MOVF	_custom_code_a, 0
$014C	$3AFA			XORLW	250
$014D	$1D03			BTFSS	STATUS, Z
$014E	$2955			GOTO	L__response_20
;D_85_Remote_v_5_3_2b_Rcv.c,186 :: 		_pulse_u_100(2);
$014F	$3002			MOVLW	2
$0150	$0098			MOVWF	FARG__pulse_u_100+0
$0151	$3000			MOVLW	0
$0152	$0099			MOVWF	FARG__pulse_u_100+1
$0153	$20FD			CALL	__pulse_u_100
;D_85_Remote_v_5_3_2b_Rcv.c,190 :: 		} else {
$0154	$295A			GOTO	L__response_21
$0155	$	L__response_20:
;D_85_Remote_v_5_3_2b_Rcv.c,192 :: 		_pulse_u_100(3);
$0155	$3003			MOVLW	3
$0156	$0098			MOVWF	FARG__pulse_u_100+0
$0157	$3000			MOVLW	0
$0158	$0099			MOVWF	FARG__pulse_u_100+1
$0159	$20FD			CALL	__pulse_u_100
;D_85_Remote_v_5_3_2b_Rcv.c,196 :: 		}
$015A	$	L__response_21:
$015A	$	L__response_19:
;D_85_Remote_v_5_3_2b_Rcv.c,215 :: 		}
$015A	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$0092			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$0091			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0093			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$009C			MOVWF	STSAVED_0
;D_85_Remote_v_5_3_2b_Rcv.c,268 :: 		void interrupt(void)
;D_85_Remote_v_5_3_2b_Rcv.c,279 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D_85_Remote_v_5_3_2b_Rcv.c,280 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D_85_Remote_v_5_3_2b_Rcv.c,281 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D_85_Remote_v_5_3_2b_Rcv.c,294 :: 		TMR0 = 0;
$0015	$0181			CLRF	TMR0, 1
;D_85_Remote_v_5_3_2b_Rcv.c,304 :: 		_while_PORTB_0x01(0);
$0016	$0194			CLRF	FARG__while_PORTB_0x01+0
$0017	$0195			CLRF	FARG__while_PORTB_0x01+1
$0018	$215B			CALL	__while_PORTB_0x01
;D_85_Remote_v_5_3_2b_Rcv.c,315 :: 		result = _judge_TMR_(156, 196);
$0019	$309C			MOVLW	156
$001A	$1303			BCF	STATUS, RP1
$001B	$1283			BCF	STATUS, RP0
$001C	$0094			MOVWF	FARG__judge_TMR_+0
$001D	$0195			CLRF	FARG__judge_TMR_+1
$001E	$30C4			MOVLW	196
$001F	$0096			MOVWF	FARG__judge_TMR_+2
$0020	$0197			CLRF	FARG__judge_TMR_+3
$0021	$20CC			CALL	__judge_TMR_
$0022	$0840			MOVF	STACK_0, 0
$0023	$008F			MOVWF	_result
;D_85_Remote_v_5_3_2b_Rcv.c,317 :: 		if (result == false) {
$0024	$0840			MOVF	STACK_0, 0
$0025	$3A00			XORLW	0
$0026	$1D03			BTFSS	STATUS, Z
$0027	$2829			GOTO	L_interrupt_33
;D_85_Remote_v_5_3_2b_Rcv.c,321 :: 		return;
$0028	$2845			GOTO	L_Interrupt_end
;D_85_Remote_v_5_3_2b_Rcv.c,323 :: 		}
$0029	$	L_interrupt_33:
;D_85_Remote_v_5_3_2b_Rcv.c,335 :: 		TMR0 = 0;
$0029	$0181			CLRF	TMR0, 1
;D_85_Remote_v_5_3_2b_Rcv.c,342 :: 		_while_PORTB_0x01(1);
$002A	$3001			MOVLW	1
$002B	$0094			MOVWF	FARG__while_PORTB_0x01+0
$002C	$3000			MOVLW	0
$002D	$0095			MOVWF	FARG__while_PORTB_0x01+1
$002E	$215B			CALL	__while_PORTB_0x01
;D_85_Remote_v_5_3_2b_Rcv.c,349 :: 		result = _judge_TMR_(68, 108);
$002F	$3044			MOVLW	68
$0030	$1303			BCF	STATUS, RP1
$0031	$1283			BCF	STATUS, RP0
$0032	$0094			MOVWF	FARG__judge_TMR_+0
$0033	$3000			MOVLW	0
$0034	$0095			MOVWF	FARG__judge_TMR_+1
$0035	$306C			MOVLW	108
$0036	$0096			MOVWF	FARG__judge_TMR_+2
$0037	$3000			MOVLW	0
$0038	$0097			MOVWF	FARG__judge_TMR_+3
$0039	$20CC			CALL	__judge_TMR_
$003A	$0840			MOVF	STACK_0, 0
$003B	$008F			MOVWF	_result
;D_85_Remote_v_5_3_2b_Rcv.c,351 :: 		if (result == false) {
$003C	$0840			MOVF	STACK_0, 0
$003D	$3A00			XORLW	0
$003E	$1D03			BTFSS	STATUS, Z
$003F	$2841			GOTO	L_interrupt_34
;D_85_Remote_v_5_3_2b_Rcv.c,355 :: 		return;
$0040	$2845			GOTO	L_Interrupt_end
;D_85_Remote_v_5_3_2b_Rcv.c,357 :: 		}
$0041	$	L_interrupt_34:
;D_85_Remote_v_5_3_2b_Rcv.c,364 :: 		_custom_lower();
$0041	$2050			CALL	__custom_lower
;D_85_Remote_v_5_3_2b_Rcv.c,371 :: 		_response();
$0042	$213F			CALL	__response
;D_85_Remote_v_5_3_2b_Rcv.c,379 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0043	$160B			BSF	INTCON, 4
;D_85_Remote_v_5_3_2b_Rcv.c,380 :: 		INTCON |= 0x80;
$0044	$178B			BSF	INTCON, 7
;D_85_Remote_v_5_3_2b_Rcv.c,382 :: 		}//void interrupt(void)
$0045	$	L_Interrupt_end:
$0045	$081C			MOVF	STSAVED_0, 0
$0046	$00C0			MOVWF	STACK_0
$0047	$0813			MOVF	?savePCLATH, 0
$0048	$008A			MOVWF	PCLATH
$0049	$0811			MOVF	?saveFSR, 0
$004A	$0084			MOVWF	FSR
$004B	$0E12			SWAPF	?saveSTATUS, 0
$004C	$0083			MOVWF	STATUS
$004D	$0ECF			SWAPF	STACK_15, 1
$004E	$0E4F			SWAPF	STACK_15, 0
$004F	$0009			RETFIE
$0174	$	GlobalIniD_85_Remote_v_5_3_2b_Rcv:
$0174	$3001			MOVLW	1
$0175	$1303			BCF	STATUS, RP1
$0176	$1283			BCF	STATUS, RP0
$0177	$0090			MOVWF	_LED_FLAG+0
$0178	$3008			MOVLW	8
$0179	$008E			MOVWF	_bit_len+0
$017A	$0008			RETURN
$011F	$	_main:
;D_85_Remote_v_5_3_2b_Rcv.c,385 :: 		void main(void)
;D_85_Remote_v_5_3_2b_Rcv.c,389 :: 		TRISA     = 0x00;
$011F	$2174			CALL	GlobalIniD_85_Remote_v_5_3_2b_Rcv
$0120	$1683			BSF	STATUS, RP0
$0121	$0185			CLRF	TRISA, 1
;D_85_Remote_v_5_3_2b_Rcv.c,390 :: 		PORTA     = 0x00;		//0000 0010
$0122	$1283			BCF	STATUS, RP0
$0123	$0185			CLRF	PORTA, 1
;D_85_Remote_v_5_3_2b_Rcv.c,392 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$0124	$30FF			MOVLW	255
$0125	$1683			BSF	STATUS, RP0
$0126	$0086			MOVWF	TRISB
;D_85_Remote_v_5_3_2b_Rcv.c,394 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$0127	$307F			MOVLW	127
$0128	$0501			ANDWF	OPTION_REG, 0
$0129	$00C0			MOVWF	STACK_0
$012A	$0840			MOVF	STACK_0, 0
$012B	$0081			MOVWF	OPTION_REG
;D_85_Remote_v_5_3_2b_Rcv.c,395 :: 		OPTION_REG &= 0xBF;	// INT interrupt => by 5V ~> 0V
$012C	$30BF			MOVLW	191
$012D	$05C0			ANDWF	STACK_0, 1
$012E	$0840			MOVF	STACK_0, 0
$012F	$0081			MOVWF	OPTION_REG
;D_85_Remote_v_5_3_2b_Rcv.c,397 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$0130	$30DF			MOVLW	223
$0131	$05C0			ANDWF	STACK_0, 1
$0132	$0840			MOVF	STACK_0, 0
$0133	$0081			MOVWF	OPTION_REG
;D_85_Remote_v_5_3_2b_Rcv.c,398 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$0134	$30F0			MOVLW	240
$0135	$05C0			ANDWF	STACK_0, 1
$0136	$0840			MOVF	STACK_0, 0
$0137	$0081			MOVWF	OPTION_REG
;D_85_Remote_v_5_3_2b_Rcv.c,399 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$0138	$3007			MOVLW	7
$0139	$0440			IORWF	STACK_0, 0
$013A	$0081			MOVWF	OPTION_REG
;D_85_Remote_v_5_3_2b_Rcv.c,407 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$013B	$160B			BSF	INTCON, 4
;D_85_Remote_v_5_3_2b_Rcv.c,408 :: 		INTCON |= 0x80;
$013C	$178B			BSF	INTCON, 7
;D_85_Remote_v_5_3_2b_Rcv.c,410 :: 		while(1)
$013D	$	L_main_35:
$013D	$293D			GOTO	L_main_35
;D_85_Remote_v_5_3_2b_Rcv.c,418 :: 		}//void main(void)
$013E	$293E			GOTO	$
