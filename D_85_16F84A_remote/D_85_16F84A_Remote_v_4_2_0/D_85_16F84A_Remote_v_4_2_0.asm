;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/06/11 21:21:09
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2856			GOTO	_main
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008E			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008D			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$008F			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0090			MOVWF	STSAVED_0
;D_85_16F84A_Remote_v_4_2_0.c,15 :: 		void interrupt(void)
;D_85_16F84A_Remote_v_4_2_0.c,21 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D_85_16F84A_Remote_v_4_2_0.c,22 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D_85_16F84A_Remote_v_4_2_0.c,23 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D_85_16F84A_Remote_v_4_2_0.c,28 :: 		TMR0 = 0;
$0015	$0181			CLRF	TMR0, 1
;D_85_16F84A_Remote_v_4_2_0.c,34 :: 		while((PORTB & 0x01) == 0) //---------------------
$0016	$	L_interrupt_0:
$0016	$3001			MOVLW	1
$0017	$0506			ANDWF	PORTB, 0
$0018	$00C1			MOVWF	STACK_1
$0019	$0841			MOVF	STACK_1, 0
$001A	$3A00			XORLW	0
$001B	$1D03			BTFSS	STATUS, Z
$001C	$2823			GOTO	L_interrupt_1
;D_85_16F84A_Remote_v_4_2_0.c,37 :: 		if(TMR0 = 255)
$001D	$30FF			MOVLW	255
$001E	$0081			MOVWF	TMR0
$001F	$0801			MOVF	TMR0, 0
$0020	$1D03			BTFSS	STATUS, Z
$0021	$2823			GOTO	L_interrupt_1
;D_85_16F84A_Remote_v_4_2_0.c,41 :: 		}
$0022	$	L_interrupt_2:
;D_85_16F84A_Remote_v_4_2_0.c,43 :: 		}//while((PORTB & 0x01) == 0)
$0022	$2816			GOTO	L_interrupt_0
$0023	$	L_interrupt_1:
;D_85_16F84A_Remote_v_4_2_0.c,48 :: 		if(TMR0 < 156 || TMR0 > 196) //---------------------
$0023	$309C			MOVLW	156
$0024	$0201			SUBWF	TMR0, 0
$0025	$1C03			BTFSS	STATUS, C
$0026	$282B			GOTO	L27_ex_L_interrupt_5
$0027	$0801			MOVF	TMR0, 0
$0028	$3CC4			SUBLW	196
$0029	$1803			BTFSC	STATUS, C
$002A	$282E			GOTO	L_interrupt_5
$002B	$	L27_ex_L_interrupt_5:
;D_85_16F84A_Remote_v_4_2_0.c,51 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$002B	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_4_2_0.c,52 :: 		INTCON |= 0x80;        // interrupt => permitted
$002C	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_4_2_0.c,54 :: 		return;                // return
$002D	$284B			GOTO	L_Interrupt_end
;D_85_16F84A_Remote_v_4_2_0.c,55 :: 		}
$002E	$	L_interrupt_5:
;D_85_16F84A_Remote_v_4_2_0.c,58 :: 		TMR0 = 0;
$002E	$0181			CLRF	TMR0, 1
;D_85_16F84A_Remote_v_4_2_0.c,61 :: 		while((PORTB & 0x01) == 1) //---------------------
$002F	$	L_interrupt_6:
$002F	$3001			MOVLW	1
$0030	$0506			ANDWF	PORTB, 0
$0031	$00C1			MOVWF	STACK_1
$0032	$0841			MOVF	STACK_1, 0
$0033	$3A01			XORLW	1
$0034	$1D03			BTFSS	STATUS, Z
$0035	$283C			GOTO	L_interrupt_7
;D_85_16F84A_Remote_v_4_2_0.c,64 :: 		if(TMR0 = 255)
$0036	$30FF			MOVLW	255
$0037	$0081			MOVWF	TMR0
$0038	$0801			MOVF	TMR0, 0
$0039	$1D03			BTFSS	STATUS, Z
$003A	$283C			GOTO	L_interrupt_7
;D_85_16F84A_Remote_v_4_2_0.c,68 :: 		}
$003B	$	L_interrupt_8:
;D_85_16F84A_Remote_v_4_2_0.c,70 :: 		}//while((PORTB & 0x01) == 0)
$003B	$282F			GOTO	L_interrupt_6
$003C	$	L_interrupt_7:
;D_85_16F84A_Remote_v_4_2_0.c,76 :: 		if(TMR0 < 68 || TMR0 > 108) //---------------------
$003C	$3044			MOVLW	68
$003D	$0201			SUBWF	TMR0, 0
$003E	$1C03			BTFSS	STATUS, C
$003F	$2844			GOTO	L55_ex_L_interrupt_11
$0040	$0801			MOVF	TMR0, 0
$0041	$3C6C			SUBLW	108
$0042	$1803			BTFSC	STATUS, C
$0043	$2847			GOTO	L_interrupt_11
$0044	$	L55_ex_L_interrupt_11:
;D_85_16F84A_Remote_v_4_2_0.c,79 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0044	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_4_2_0.c,80 :: 		INTCON |= 0x80;        // interrupt => permitted
$0045	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_4_2_0.c,82 :: 		return;                // return
$0046	$284B			GOTO	L_Interrupt_end
;D_85_16F84A_Remote_v_4_2_0.c,83 :: 		}
$0047	$	L_interrupt_11:
;D_85_16F84A_Remote_v_4_2_0.c,85 :: 		PORTA = 0x01;
$0047	$3001			MOVLW	1
$0048	$0085			MOVWF	PORTA
;D_85_16F84A_Remote_v_4_2_0.c,105 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0049	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_4_2_0.c,106 :: 		INTCON |= 0x80;
$004A	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_4_2_0.c,108 :: 		}//void interrupt(void)
$004B	$	L_Interrupt_end:
$004B	$0810			MOVF	STSAVED_0, 0
$004C	$00C0			MOVWF	STACK_0
$004D	$080F			MOVF	?savePCLATH, 0
$004E	$008A			MOVWF	PCLATH
$004F	$080D			MOVF	?saveFSR, 0
$0050	$0084			MOVWF	FSR
$0051	$0E0E			SWAPF	?saveSTATUS, 0
$0052	$0083			MOVWF	STATUS
$0053	$0ECF			SWAPF	STACK_15, 1
$0054	$0E4F			SWAPF	STACK_15, 0
$0055	$0009			RETFIE
$0076	$	GlobalIniD_85_16F84A_Remote_v_4_2_0:
$0076	$3001			MOVLW	1
$0077	$1303			BCF	STATUS, RP1
$0078	$1283			BCF	STATUS, RP0
$0079	$008C			MOVWF	_LED_FLAG+0
$007A	$0008			RETURN
$0056	$	_main:
;D_85_16F84A_Remote_v_4_2_0.c,111 :: 		void main(void)
;D_85_16F84A_Remote_v_4_2_0.c,115 :: 		TRISA     = 0x00;
$0056	$2076			CALL	GlobalIniD_85_16F84A_Remote_v_4_2_0
$0057	$1683			BSF	STATUS, RP0
$0058	$0185			CLRF	TRISA, 1
;D_85_16F84A_Remote_v_4_2_0.c,116 :: 		PORTA     = 0x00;		//0000 0010
$0059	$1283			BCF	STATUS, RP0
$005A	$0185			CLRF	PORTA, 1
;D_85_16F84A_Remote_v_4_2_0.c,118 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$005B	$30FF			MOVLW	255
$005C	$1683			BSF	STATUS, RP0
$005D	$0086			MOVWF	TRISB
;D_85_16F84A_Remote_v_4_2_0.c,120 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$005E	$307F			MOVLW	127
$005F	$0501			ANDWF	OPTION_REG, 0
$0060	$00C0			MOVWF	STACK_0
$0061	$0840			MOVF	STACK_0, 0
$0062	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,121 :: 		OPTION_REG &= 0xBF;	// INT interrupt => by 5V ~> 0V
$0063	$30BF			MOVLW	191
$0064	$05C0			ANDWF	STACK_0, 1
$0065	$0840			MOVF	STACK_0, 0
$0066	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,122 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$0067	$30DF			MOVLW	223
$0068	$05C0			ANDWF	STACK_0, 1
$0069	$0840			MOVF	STACK_0, 0
$006A	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,124 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$006B	$30F0			MOVLW	240
$006C	$05C0			ANDWF	STACK_0, 1
$006D	$0840			MOVF	STACK_0, 0
$006E	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,125 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$006F	$3007			MOVLW	7
$0070	$0440			IORWF	STACK_0, 0
$0071	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,133 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0072	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_4_2_0.c,134 :: 		INTCON |= 0x80;
$0073	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_4_2_0.c,136 :: 		while(1)
$0074	$	L_main_12:
$0074	$2874			GOTO	L_main_12
;D_85_16F84A_Remote_v_4_2_0.c,141 :: 		}//void main(void)
$0075	$2875			GOTO	$
