;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/06/11 22:09:21
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$289D			GOTO	_main
$0054	$	__pulse_2:
;D_85_16F84A_Remote_v_4_2_0.c,182 :: 		void _pulse_2(void)
;D_85_16F84A_Remote_v_4_2_0.c,185 :: 		PORTA = 0x01;
$0054	$3001			MOVLW	1
$0055	$1303			BCF	STATUS, RP1
$0056	$1283			BCF	STATUS, RP0
$0057	$0085			MOVWF	PORTA
;D_85_16F84A_Remote_v_4_2_0.c,186 :: 		Delay_ms(1);
$0058	$3007			MOVLW	7
$0059	$00CB			MOVWF	STACK_11
$005A	$30FF			MOVLW	255
$005B	$00CA			MOVWF	STACK_10
$005C	$0BCB			DECFSZ	STACK_11, F
$005D	$285F			GOTO	$+2
$005E	$2862			GOTO	$+4
$005F	$0BCA			DECFSZ	STACK_10, F
$0060	$285F			GOTO	$-1
$0061	$285C			GOTO	$-5
$0062	$3078			MOVLW	120
$0063	$00CA			MOVWF	STACK_10
$0064	$0BCA			DECFSZ	STACK_10, F
$0065	$2864			GOTO	$-1
$0066	$0000			NOP
$0067	$0000			NOP
;D_85_16F84A_Remote_v_4_2_0.c,188 :: 		PORTA = 0x00;
$0068	$0185			CLRF	PORTA, 1
;D_85_16F84A_Remote_v_4_2_0.c,189 :: 		Delay_ms(1);
$0069	$3007			MOVLW	7
$006A	$00CB			MOVWF	STACK_11
$006B	$30FF			MOVLW	255
$006C	$00CA			MOVWF	STACK_10
$006D	$0BCB			DECFSZ	STACK_11, F
$006E	$2870			GOTO	$+2
$006F	$2873			GOTO	$+4
$0070	$0BCA			DECFSZ	STACK_10, F
$0071	$2870			GOTO	$-1
$0072	$286D			GOTO	$-5
$0073	$3078			MOVLW	120
$0074	$00CA			MOVWF	STACK_10
$0075	$0BCA			DECFSZ	STACK_10, F
$0076	$2875			GOTO	$-1
$0077	$0000			NOP
$0078	$0000			NOP
;D_85_16F84A_Remote_v_4_2_0.c,191 :: 		PORTA = 0x01;
$0079	$3001			MOVLW	1
$007A	$0085			MOVWF	PORTA
;D_85_16F84A_Remote_v_4_2_0.c,192 :: 		Delay_ms(1);
$007B	$3007			MOVLW	7
$007C	$00CB			MOVWF	STACK_11
$007D	$30FF			MOVLW	255
$007E	$00CA			MOVWF	STACK_10
$007F	$0BCB			DECFSZ	STACK_11, F
$0080	$2882			GOTO	$+2
$0081	$2885			GOTO	$+4
$0082	$0BCA			DECFSZ	STACK_10, F
$0083	$2882			GOTO	$-1
$0084	$287F			GOTO	$-5
$0085	$3078			MOVLW	120
$0086	$00CA			MOVWF	STACK_10
$0087	$0BCA			DECFSZ	STACK_10, F
$0088	$2887			GOTO	$-1
$0089	$0000			NOP
$008A	$0000			NOP
;D_85_16F84A_Remote_v_4_2_0.c,194 :: 		PORTA = 0x00;
$008B	$0185			CLRF	PORTA, 1
;D_85_16F84A_Remote_v_4_2_0.c,195 :: 		Delay_ms(1);
$008C	$3007			MOVLW	7
$008D	$00CB			MOVWF	STACK_11
$008E	$30FF			MOVLW	255
$008F	$00CA			MOVWF	STACK_10
$0090	$0BCB			DECFSZ	STACK_11, F
$0091	$2893			GOTO	$+2
$0092	$2896			GOTO	$+4
$0093	$0BCA			DECFSZ	STACK_10, F
$0094	$2893			GOTO	$-1
$0095	$2890			GOTO	$-5
$0096	$3078			MOVLW	120
$0097	$00CA			MOVWF	STACK_10
$0098	$0BCA			DECFSZ	STACK_10, F
$0099	$2898			GOTO	$-1
$009A	$0000			NOP
$009B	$0000			NOP
;D_85_16F84A_Remote_v_4_2_0.c,197 :: 		}
$009C	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008E			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008D			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$008F			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0090			MOVWF	STSAVED_0
;D_85_16F84A_Remote_v_4_2_0.c,17 :: 		void interrupt(void)
;D_85_16F84A_Remote_v_4_2_0.c,23 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D_85_16F84A_Remote_v_4_2_0.c,24 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D_85_16F84A_Remote_v_4_2_0.c,25 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D_85_16F84A_Remote_v_4_2_0.c,30 :: 		TMR0 = 0;
$0015	$0181			CLRF	TMR0, 1
;D_85_16F84A_Remote_v_4_2_0.c,36 :: 		while((PORTB & 0x01) == 0) //---------------------
$0016	$	L_interrupt_0:
$0016	$3001			MOVLW	1
$0017	$0506			ANDWF	PORTB, 0
$0018	$00C1			MOVWF	STACK_1
$0019	$0841			MOVF	STACK_1, 0
$001A	$3A00			XORLW	0
$001B	$1D03			BTFSS	STATUS, Z
$001C	$2823			GOTO	L_interrupt_1
;D_85_16F84A_Remote_v_4_2_0.c,39 :: 		if(TMR0 = 255)
$001D	$30FF			MOVLW	255
$001E	$0081			MOVWF	TMR0
$001F	$0801			MOVF	TMR0, 0
$0020	$1D03			BTFSS	STATUS, Z
$0021	$2823			GOTO	L_interrupt_1
;D_85_16F84A_Remote_v_4_2_0.c,43 :: 		}
$0022	$	L_interrupt_2:
;D_85_16F84A_Remote_v_4_2_0.c,45 :: 		}//while((PORTB & 0x01) == 0)
$0022	$2816			GOTO	L_interrupt_0
$0023	$	L_interrupt_1:
;D_85_16F84A_Remote_v_4_2_0.c,51 :: 		if(TMR0 < 156) //---------------------
$0023	$309C			MOVLW	156
$0024	$0201			SUBWF	TMR0, 0
$0025	$1803			BTFSC	STATUS, C
$0026	$283D			GOTO	L_interrupt_3
;D_85_16F84A_Remote_v_4_2_0.c,54 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0027	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_4_2_0.c,55 :: 		INTCON |= 0x80;        // interrupt => permitted
$0028	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_4_2_0.c,58 :: 		PORTA = 0x01;
$0029	$3001			MOVLW	1
$002A	$0085			MOVWF	PORTA
;D_85_16F84A_Remote_v_4_2_0.c,59 :: 		Delay_ms(1);
$002B	$3007			MOVLW	7
$002C	$00CB			MOVWF	STACK_11
$002D	$30FF			MOVLW	255
$002E	$00CA			MOVWF	STACK_10
$002F	$0BCB			DECFSZ	STACK_11, F
$0030	$2832			GOTO	$+2
$0031	$2835			GOTO	$+4
$0032	$0BCA			DECFSZ	STACK_10, F
$0033	$2832			GOTO	$-1
$0034	$282F			GOTO	$-5
$0035	$3078			MOVLW	120
$0036	$00CA			MOVWF	STACK_10
$0037	$0BCA			DECFSZ	STACK_10, F
$0038	$2837			GOTO	$-1
$0039	$0000			NOP
$003A	$0000			NOP
;D_85_16F84A_Remote_v_4_2_0.c,60 :: 		PORTA = 0x00;
$003B	$0185			CLRF	PORTA, 1
;D_85_16F84A_Remote_v_4_2_0.c,62 :: 		return;                // return
$003C	$2849			GOTO	L_Interrupt_end
;D_85_16F84A_Remote_v_4_2_0.c,64 :: 		} else if (TMR0 > 196) {
$003D	$	L_interrupt_3:
$003D	$0801			MOVF	TMR0, 0
$003E	$3CC4			SUBLW	196
$003F	$1803			BTFSC	STATUS, C
$0040	$2845			GOTO	L_interrupt_5
;D_85_16F84A_Remote_v_4_2_0.c,66 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0041	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_4_2_0.c,67 :: 		INTCON |= 0x80;        // interrupt => permitted
$0042	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_4_2_0.c,70 :: 		_pulse_2();
$0043	$2054			CALL	__pulse_2
;D_85_16F84A_Remote_v_4_2_0.c,72 :: 		return;                // return
$0044	$2849			GOTO	L_Interrupt_end
;D_85_16F84A_Remote_v_4_2_0.c,74 :: 		}
$0045	$	L_interrupt_5:
$0045	$	L_interrupt_4:
;D_85_16F84A_Remote_v_4_2_0.c,76 :: 		PORTA = 0x01;
$0045	$3001			MOVLW	1
$0046	$0085			MOVWF	PORTA
;D_85_16F84A_Remote_v_4_2_0.c,141 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0047	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_4_2_0.c,142 :: 		INTCON |= 0x80;
$0048	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_4_2_0.c,144 :: 		}//void interrupt(void)
$0049	$	L_Interrupt_end:
$0049	$0810			MOVF	STSAVED_0, 0
$004A	$00C0			MOVWF	STACK_0
$004B	$080F			MOVF	?savePCLATH, 0
$004C	$008A			MOVWF	PCLATH
$004D	$080D			MOVF	?saveFSR, 0
$004E	$0084			MOVWF	FSR
$004F	$0E0E			SWAPF	?saveSTATUS, 0
$0050	$0083			MOVWF	STATUS
$0051	$0ECF			SWAPF	STACK_15, 1
$0052	$0E4F			SWAPF	STACK_15, 0
$0053	$0009			RETFIE
$00BD	$	GlobalIniD_85_16F84A_Remote_v_4_2_0:
$00BD	$3001			MOVLW	1
$00BE	$1303			BCF	STATUS, RP1
$00BF	$1283			BCF	STATUS, RP0
$00C0	$008C			MOVWF	_LED_FLAG+0
$00C1	$0008			RETURN
$009D	$	_main:
;D_85_16F84A_Remote_v_4_2_0.c,147 :: 		void main(void)
;D_85_16F84A_Remote_v_4_2_0.c,151 :: 		TRISA     = 0x00;
$009D	$20BD			CALL	GlobalIniD_85_16F84A_Remote_v_4_2_0
$009E	$1683			BSF	STATUS, RP0
$009F	$0185			CLRF	TRISA, 1
;D_85_16F84A_Remote_v_4_2_0.c,152 :: 		PORTA     = 0x00;		//0000 0010
$00A0	$1283			BCF	STATUS, RP0
$00A1	$0185			CLRF	PORTA, 1
;D_85_16F84A_Remote_v_4_2_0.c,154 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$00A2	$30FF			MOVLW	255
$00A3	$1683			BSF	STATUS, RP0
$00A4	$0086			MOVWF	TRISB
;D_85_16F84A_Remote_v_4_2_0.c,156 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$00A5	$307F			MOVLW	127
$00A6	$0501			ANDWF	OPTION_REG, 0
$00A7	$00C0			MOVWF	STACK_0
$00A8	$0840			MOVF	STACK_0, 0
$00A9	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,157 :: 		OPTION_REG &= 0xBF;	// INT interrupt => by 5V ~> 0V
$00AA	$30BF			MOVLW	191
$00AB	$05C0			ANDWF	STACK_0, 1
$00AC	$0840			MOVF	STACK_0, 0
$00AD	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,159 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$00AE	$30DF			MOVLW	223
$00AF	$05C0			ANDWF	STACK_0, 1
$00B0	$0840			MOVF	STACK_0, 0
$00B1	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,160 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$00B2	$30F0			MOVLW	240
$00B3	$05C0			ANDWF	STACK_0, 1
$00B4	$0840			MOVF	STACK_0, 0
$00B5	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,161 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$00B6	$3007			MOVLW	7
$00B7	$0440			IORWF	STACK_0, 0
$00B8	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_4_2_0.c,169 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$00B9	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_4_2_0.c,170 :: 		INTCON |= 0x80;
$00BA	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_4_2_0.c,172 :: 		while(1)
$00BB	$	L_main_6:
$00BB	$28BB			GOTO	L_main_6
;D_85_16F84A_Remote_v_4_2_0.c,180 :: 		}//void main(void)
$00BC	$28BC			GOTO	$
