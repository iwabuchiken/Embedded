;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/07/13 16:20:57
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$289B			GOTO	_main
$0063	$	__pulse:
;D_85_16F84A_Remote_v_5_1.c,19 :: 		void _pulse(int num)
;D_85_16F84A_Remote_v_5_1.c,23 :: 		for(i = 0; i < num; i++)
$0063	$1303			BCF	STATUS, RP1
$0064	$1283			BCF	STATUS, RP0
$0065	$0194			CLRF	_pulse_i_L0
$0066	$0195			CLRF	_pulse_i_L0+1
$0067	$	L__pulse_0:
$0067	$3080			MOVLW	128
$0068	$0615			XORWF	_pulse_i_L0+1, 0
$0069	$00C0			MOVWF	STACK_0
$006A	$3080			MOVLW	128
$006B	$0613			XORWF	FARG__pulse+1, 0
$006C	$0240			SUBWF	STACK_0, 0
$006D	$1D03			BTFSS	STATUS, Z
$006E	$2871			GOTO	L__pulse_13
$006F	$0812			MOVF	FARG__pulse+0, 0
$0070	$0214			SUBWF	_pulse_i_L0, 0
$0071	$	L__pulse_13:
$0071	$1803			BTFSC	STATUS, C
$0072	$289A			GOTO	L__pulse_1
;D_85_16F84A_Remote_v_5_1.c,26 :: 		PORTA = 0x01; Delay_ms(1);
$0073	$3001			MOVLW	1
$0074	$0085			MOVWF	PORTA
$0075	$3007			MOVLW	7
$0076	$00CB			MOVWF	STACK_11
$0077	$30FF			MOVLW	255
$0078	$00CA			MOVWF	STACK_10
$0079	$0BCB			DECFSZ	STACK_11, F
$007A	$287C			GOTO	$+2
$007B	$287F			GOTO	$+4
$007C	$0BCA			DECFSZ	STACK_10, F
$007D	$287C			GOTO	$-1
$007E	$2879			GOTO	$-5
$007F	$3078			MOVLW	120
$0080	$00CA			MOVWF	STACK_10
$0081	$0BCA			DECFSZ	STACK_10, F
$0082	$2881			GOTO	$-1
$0083	$0000			NOP
$0084	$0000			NOP
;D_85_16F84A_Remote_v_5_1.c,28 :: 		PORTA = 0x00; Delay_ms(1);
$0085	$0185			CLRF	PORTA, 1
$0086	$3007			MOVLW	7
$0087	$00CB			MOVWF	STACK_11
$0088	$30FF			MOVLW	255
$0089	$00CA			MOVWF	STACK_10
$008A	$0BCB			DECFSZ	STACK_11, F
$008B	$288D			GOTO	$+2
$008C	$2890			GOTO	$+4
$008D	$0BCA			DECFSZ	STACK_10, F
$008E	$288D			GOTO	$-1
$008F	$288A			GOTO	$-5
$0090	$3078			MOVLW	120
$0091	$00CA			MOVWF	STACK_10
$0092	$0BCA			DECFSZ	STACK_10, F
$0093	$2892			GOTO	$-1
$0094	$0000			NOP
$0095	$0000			NOP
;D_85_16F84A_Remote_v_5_1.c,30 :: 		}
$0096	$	L__pulse_2:
;D_85_16F84A_Remote_v_5_1.c,23 :: 		for(i = 0; i < num; i++)
$0096	$0A94			INCF	_pulse_i_L0, 1
$0097	$1903			BTFSC	STATUS, Z
$0098	$0A95			INCF	_pulse_i_L0+1, 1
;D_85_16F84A_Remote_v_5_1.c,30 :: 		}
$0099	$2867			GOTO	L__pulse_0
$009A	$	L__pulse_1:
;D_85_16F84A_Remote_v_5_1.c,32 :: 		}
$009A	$0008			RETURN
$00BB	$	__while_PORTB_0x01:
;D_85_16F84A_Remote_v_5_1.c,34 :: 		void _while_PORTB_0x01(int num)
;D_85_16F84A_Remote_v_5_1.c,37 :: 		while((PORTB & 0x01) == num) //---------------------
$00BB	$	L__while_PORTB_0x01_3:
$00BB	$3001			MOVLW	1
$00BC	$1303			BCF	STATUS, RP1
$00BD	$1283			BCF	STATUS, RP0
$00BE	$0506			ANDWF	PORTB, 0
$00BF	$00C1			MOVWF	STACK_1
$00C0	$3000			MOVLW	0
$00C1	$0611			XORWF	FARG__while_PORTB_0x01+1, 0
$00C2	$1D03			BTFSS	STATUS, Z
$00C3	$28C6			GOTO	L__while_PORTB_0x01_14
$00C4	$0810			MOVF	FARG__while_PORTB_0x01+0, 0
$00C5	$0641			XORWF	STACK_1, 0
$00C6	$	L__while_PORTB_0x01_14:
$00C6	$1D03			BTFSS	STATUS, Z
$00C7	$28D3			GOTO	L__while_PORTB_0x01_4
;D_85_16F84A_Remote_v_5_1.c,40 :: 		if(TMR0 == 255)
$00C8	$0801			MOVF	TMR0, 0
$00C9	$3AFF			XORLW	255
$00CA	$1D03			BTFSS	STATUS, Z
$00CB	$28D2			GOTO	L__while_PORTB_0x01_5
;D_85_16F84A_Remote_v_5_1.c,44 :: 		_pulse(3);
$00CC	$3003			MOVLW	3
$00CD	$0092			MOVWF	FARG__pulse+0
$00CE	$3000			MOVLW	0
$00CF	$0093			MOVWF	FARG__pulse+1
$00D0	$2063			CALL	__pulse
;D_85_16F84A_Remote_v_5_1.c,47 :: 		return;
$00D1	$0008			RETURN
;D_85_16F84A_Remote_v_5_1.c,49 :: 		}
$00D2	$	L__while_PORTB_0x01_5:
;D_85_16F84A_Remote_v_5_1.c,51 :: 		}//while((PORTB & 0x01) == 0)
$00D2	$28BB			GOTO	L__while_PORTB_0x01_3
$00D3	$	L__while_PORTB_0x01_4:
;D_85_16F84A_Remote_v_5_1.c,53 :: 		return;
;D_85_16F84A_Remote_v_5_1.c,55 :: 		}
$00D3	$0008			RETURN
$00D4	$	_Mul_8x8_U:
$00D4	$1303			BCF	STATUS, RP1
$00D5	$1283			BCF	STATUS, RP0
$00D6	$0840			MOVF	STACK_0, W
$00D7	$00C1			MOVWF	STACK_1
$00D8	$01C0			CLRF	STACK_0
$00D9	$3008			MOVLW	8
$00DA	$00CC			MOVWF	STACK_12
$00DB	$0841			MOVF	STACK_1, W
$00DC	$0CC4			RRF	STACK_4, F
$00DD	$1803			BTFSC	STATUS, C
$00DE	$28E3			GOTO	$+5
$00DF	$0BCC			DECFSZ	STACK_12, F
$00E0	$28DC			GOTO	$-4
$00E1	$01C1			CLRF	STACK_1, F
$00E2	$3400			RETLW	0
$00E3	$1003			BCF	STATUS, C
$00E4	$28E8			GOTO	$+4
$00E5	$0CC4			RRF	STACK_4, F
$00E6	$1803			BTFSC	STATUS, C
$00E7	$07C1			ADDWF	STACK_1, F
$00E8	$0CC1			RRF	STACK_1, F
$00E9	$0CC0			RRF	STACK_0, F
$00EA	$0BCC			DECFSZ	STACK_12, F
$00EB	$28E5			GOTO	$-6
$00EC	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008E			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008D			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$008F			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0096			MOVWF	STSAVED_0
;D_85_16F84A_Remote_v_5_1.c,57 :: 		void interrupt(void)
;D_85_16F84A_Remote_v_5_1.c,68 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D_85_16F84A_Remote_v_5_1.c,69 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D_85_16F84A_Remote_v_5_1.c,70 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D_85_16F84A_Remote_v_5_1.c,75 :: 		TMR0 = 0;
$0015	$0181			CLRF	TMR0, 1
;D_85_16F84A_Remote_v_5_1.c,82 :: 		_while_PORTB_0x01(0);
$0016	$0190			CLRF	FARG__while_PORTB_0x01+0
$0017	$0191			CLRF	FARG__while_PORTB_0x01+1
$0018	$20BB			CALL	__while_PORTB_0x01
;D_85_16F84A_Remote_v_5_1.c,110 :: 		if(TMR0 < 156) //---------------------
$0019	$309C			MOVLW	156
$001A	$1303			BCF	STATUS, RP1
$001B	$1283			BCF	STATUS, RP0
$001C	$0201			SUBWF	TMR0, 0
$001D	$1803			BTFSC	STATUS, C
$001E	$2835			GOTO	L_interrupt_6
;D_85_16F84A_Remote_v_5_1.c,113 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$001F	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_5_1.c,114 :: 		INTCON |= 0x80;        // interrupt => permitted
$0020	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_5_1.c,117 :: 		PORTA = 0x01;
$0021	$3001			MOVLW	1
$0022	$0085			MOVWF	PORTA
;D_85_16F84A_Remote_v_5_1.c,118 :: 		Delay_ms(1);
$0023	$3007			MOVLW	7
$0024	$00CB			MOVWF	STACK_11
$0025	$30FF			MOVLW	255
$0026	$00CA			MOVWF	STACK_10
$0027	$0BCB			DECFSZ	STACK_11, F
$0028	$282A			GOTO	$+2
$0029	$282D			GOTO	$+4
$002A	$0BCA			DECFSZ	STACK_10, F
$002B	$282A			GOTO	$-1
$002C	$2827			GOTO	$-5
$002D	$3078			MOVLW	120
$002E	$00CA			MOVWF	STACK_10
$002F	$0BCA			DECFSZ	STACK_10, F
$0030	$282F			GOTO	$-1
$0031	$0000			NOP
$0032	$0000			NOP
;D_85_16F84A_Remote_v_5_1.c,119 :: 		PORTA = 0x00;
$0033	$0185			CLRF	PORTA, 1
;D_85_16F84A_Remote_v_5_1.c,121 :: 		return;                // return
$0034	$2858			GOTO	L_Interrupt_end
;D_85_16F84A_Remote_v_5_1.c,132 :: 		} else if (TMR0 > 196) {
$0035	$	L_interrupt_6:
$0035	$0801			MOVF	TMR0, 0
$0036	$3CC4			SUBLW	196
$0037	$1803			BTFSC	STATUS, C
$0038	$2840			GOTO	L_interrupt_8
;D_85_16F84A_Remote_v_5_1.c,134 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0039	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_5_1.c,135 :: 		INTCON |= 0x80;        // interrupt => permitted
$003A	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_5_1.c,138 :: 		_pulse(2);
$003B	$3002			MOVLW	2
$003C	$0092			MOVWF	FARG__pulse+0
$003D	$3000			MOVLW	0
$003E	$0093			MOVWF	FARG__pulse+1
$003F	$2063			CALL	__pulse
;D_85_16F84A_Remote_v_5_1.c,140 :: 		}
$0040	$	L_interrupt_8:
$0040	$	L_interrupt_7:
;D_85_16F84A_Remote_v_5_1.c,144 :: 		if(LED_FLAG == 1)
$0040	$080C			MOVF	_LED_FLAG, 0
$0041	$3A01			XORLW	1
$0042	$1D03			BTFSS	STATUS, Z
$0043	$284E			GOTO	L_interrupt_9
;D_85_16F84A_Remote_v_5_1.c,147 :: 		PORTA = 0x01;
$0044	$3001			MOVLW	1
$0045	$0085			MOVWF	PORTA
;D_85_16F84A_Remote_v_5_1.c,149 :: 		LED_FLAG *= -1;
$0046	$080C			MOVF	_LED_FLAG, 0
$0047	$00C0			MOVWF	STACK_0
$0048	$30FF			MOVLW	255
$0049	$00C4			MOVWF	STACK_4
$004A	$20D4			CALL	_mul_8x8_u
$004B	$0840			MOVF	STACK_0, 0
$004C	$008C			MOVWF	_LED_FLAG
;D_85_16F84A_Remote_v_5_1.c,151 :: 		} else {
$004D	$2856			GOTO	L_interrupt_10
$004E	$	L_interrupt_9:
;D_85_16F84A_Remote_v_5_1.c,154 :: 		PORTA = 0x00;
$004E	$0185			CLRF	PORTA, 1
;D_85_16F84A_Remote_v_5_1.c,156 :: 		LED_FLAG *= -1;
$004F	$080C			MOVF	_LED_FLAG, 0
$0050	$00C0			MOVWF	STACK_0
$0051	$30FF			MOVLW	255
$0052	$00C4			MOVWF	STACK_4
$0053	$20D4			CALL	_mul_8x8_u
$0054	$0840			MOVF	STACK_0, 0
$0055	$008C			MOVWF	_LED_FLAG
;D_85_16F84A_Remote_v_5_1.c,158 :: 		}//if(LED_FLAG == 1)
$0056	$	L_interrupt_10:
;D_85_16F84A_Remote_v_5_1.c,227 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0056	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_5_1.c,228 :: 		INTCON |= 0x80;
$0057	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_5_1.c,230 :: 		}//void interrupt(void)
$0058	$	L_Interrupt_end:
$0058	$0816			MOVF	STSAVED_0, 0
$0059	$00C0			MOVWF	STACK_0
$005A	$080F			MOVF	?savePCLATH, 0
$005B	$008A			MOVWF	PCLATH
$005C	$080D			MOVF	?saveFSR, 0
$005D	$0084			MOVWF	FSR
$005E	$0E0E			SWAPF	?saveSTATUS, 0
$005F	$0083			MOVWF	STATUS
$0060	$0ECF			SWAPF	STACK_15, 1
$0061	$0E4F			SWAPF	STACK_15, 0
$0062	$0009			RETFIE
$00ED	$	GlobalIniD_85_16F84A_Remote_v_5_1:
$00ED	$3001			MOVLW	1
$00EE	$1303			BCF	STATUS, RP1
$00EF	$1283			BCF	STATUS, RP0
$00F0	$008C			MOVWF	_LED_FLAG+0
$00F1	$0008			RETURN
$009B	$	_main:
;D_85_16F84A_Remote_v_5_1.c,233 :: 		void main(void)
;D_85_16F84A_Remote_v_5_1.c,237 :: 		TRISA     = 0x00;
$009B	$20ED			CALL	GlobalIniD_85_16F84A_Remote_v_5_1
$009C	$1683			BSF	STATUS, RP0
$009D	$0185			CLRF	TRISA, 1
;D_85_16F84A_Remote_v_5_1.c,238 :: 		PORTA     = 0x00;		//0000 0010
$009E	$1283			BCF	STATUS, RP0
$009F	$0185			CLRF	PORTA, 1
;D_85_16F84A_Remote_v_5_1.c,240 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$00A0	$30FF			MOVLW	255
$00A1	$1683			BSF	STATUS, RP0
$00A2	$0086			MOVWF	TRISB
;D_85_16F84A_Remote_v_5_1.c,242 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$00A3	$307F			MOVLW	127
$00A4	$0501			ANDWF	OPTION_REG, 0
$00A5	$00C0			MOVWF	STACK_0
$00A6	$0840			MOVF	STACK_0, 0
$00A7	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_5_1.c,243 :: 		OPTION_REG &= 0xBF;	// INT interrupt => by 5V ~> 0V
$00A8	$30BF			MOVLW	191
$00A9	$05C0			ANDWF	STACK_0, 1
$00AA	$0840			MOVF	STACK_0, 0
$00AB	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_5_1.c,245 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$00AC	$30DF			MOVLW	223
$00AD	$05C0			ANDWF	STACK_0, 1
$00AE	$0840			MOVF	STACK_0, 0
$00AF	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_5_1.c,246 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$00B0	$30F0			MOVLW	240
$00B1	$05C0			ANDWF	STACK_0, 1
$00B2	$0840			MOVF	STACK_0, 0
$00B3	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_5_1.c,247 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$00B4	$3007			MOVLW	7
$00B5	$0440			IORWF	STACK_0, 0
$00B6	$0081			MOVWF	OPTION_REG
;D_85_16F84A_Remote_v_5_1.c,255 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$00B7	$160B			BSF	INTCON, 4
;D_85_16F84A_Remote_v_5_1.c,256 :: 		INTCON |= 0x80;
$00B8	$178B			BSF	INTCON, 7
;D_85_16F84A_Remote_v_5_1.c,258 :: 		while(1)
$00B9	$	L_main_11:
$00B9	$28B9			GOTO	L_main_11
;D_85_16F84A_Remote_v_5_1.c,266 :: 		}//void main(void)
$00BA	$28BA			GOTO	$
