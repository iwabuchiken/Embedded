;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/03/19 15:11:54
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2846			GOTO	_main
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$0090			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008F			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0091			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0092			MOVWF	STSAVED_0
;D_84_16F84A_Flasher_v_1_0.c,5 :: 		void interrupt(void)
;D_84_16F84A_Flasher_v_1_0.c,7 :: 		INTCON         &= 0x7F;
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D_84_16F84A_Flasher_v_1_0.c,8 :: 		INTCON         &= 0xDF;
$0011	$30DF			MOVLW	223
$0012	$058B			ANDWF	INTCON, 1
;D_84_16F84A_Flasher_v_1_0.c,9 :: 		INTCON         &= 0xFB;
$0013	$30FB			MOVLW	251
$0014	$058B			ANDWF	INTCON, 1
;D_84_16F84A_Flasher_v_1_0.c,11 :: 		count++;
$0015	$0A8C			INCF	_count, 1
;D_84_16F84A_Flasher_v_1_0.c,14 :: 		if(count == 300)
$0016	$3000			MOVLW	0
$0017	$3A01			XORLW	1
$0018	$1D03			BTFSS	STATUS, Z
$0019	$281C			GOTO	L_interrupt_4
$001A	$302C			MOVLW	44
$001B	$060C			XORWF	_count, 0
$001C	$	L_interrupt_4:
$001C	$1D03			BTFSS	STATUS, Z
$001D	$2839			GOTO	L_interrupt_0
;D_84_16F84A_Flasher_v_1_0.c,16 :: 		p <<= 1;
$001E	$080D			MOVF	_p, 0
$001F	$00C1			MOVWF	STACK_1
$0020	$080E			MOVF	_p+1, 0
$0021	$00C2			MOVWF	STACK_1+1
$0022	$0DC1			RLF	STACK_1, 1
$0023	$0DC2			RLF	STACK_1+1, 1
$0024	$1041			BCF	STACK_1, 0
$0025	$0841			MOVF	STACK_1, 0
$0026	$008D			MOVWF	_p
$0027	$0842			MOVF	STACK_1+1, 0
$0028	$008E			MOVWF	_p+1
;D_84_16F84A_Flasher_v_1_0.c,18 :: 		if(p == 0x0100)
$0029	$0842			MOVF	STACK_1+1, 0
$002A	$3A01			XORLW	1
$002B	$1D03			BTFSS	STATUS, Z
$002C	$282F			GOTO	L_interrupt_5
$002D	$3000			MOVLW	0
$002E	$0641			XORWF	STACK_1, 0
$002F	$	L_interrupt_5:
$002F	$1D03			BTFSS	STATUS, Z
$0030	$2835			GOTO	L_interrupt_1
;D_84_16F84A_Flasher_v_1_0.c,20 :: 		p = 0x0001;
$0031	$3001			MOVLW	1
$0032	$008D			MOVWF	_p
$0033	$3000			MOVLW	0
$0034	$008E			MOVWF	_p+1
;D_84_16F84A_Flasher_v_1_0.c,21 :: 		}
$0035	$	L_interrupt_1:
;D_84_16F84A_Flasher_v_1_0.c,23 :: 		PORTB  = p & 0xFF;
$0035	$30FF			MOVLW	255
$0036	$050D			ANDWF	_p, 0
$0037	$0086			MOVWF	PORTB
;D_84_16F84A_Flasher_v_1_0.c,25 :: 		count  = 0;
$0038	$018C			CLRF	_count, 1
;D_84_16F84A_Flasher_v_1_0.c,28 :: 		}
$0039	$	L_interrupt_0:
;D_84_16F84A_Flasher_v_1_0.c,30 :: 		INTCON         |= 0x20;
$0039	$168B			BSF	INTCON, 5
;D_84_16F84A_Flasher_v_1_0.c,31 :: 		INTCON         |= 0x80;
$003A	$178B			BSF	INTCON, 7
;D_84_16F84A_Flasher_v_1_0.c,33 :: 		}//void interrupt(void)
$003B	$	L_Interrupt_end:
$003B	$0812			MOVF	STSAVED_0, 0
$003C	$00C0			MOVWF	STACK_0
$003D	$0811			MOVF	?savePCLATH, 0
$003E	$008A			MOVWF	PCLATH
$003F	$080F			MOVF	?saveFSR, 0
$0040	$0084			MOVWF	FSR
$0041	$0E10			SWAPF	?saveSTATUS, 0
$0042	$0083			MOVWF	STATUS
$0043	$0ECF			SWAPF	STACK_15, 1
$0044	$0E4F			SWAPF	STACK_15, 0
$0045	$0009			RETFIE
$0046	$	_main:
;D_84_16F84A_Flasher_v_1_0.c,35 :: 		void main(void)
;D_84_16F84A_Flasher_v_1_0.c,38 :: 		TRISA     = 0x00;
$0046	$1303			BCF	STATUS, RP1
$0047	$1683			BSF	STATUS, RP0
$0048	$0185			CLRF	TRISA, 1
;D_84_16F84A_Flasher_v_1_0.c,39 :: 		PORTA     = 0x00; //0000 0010
$0049	$1283			BCF	STATUS, RP0
$004A	$0185			CLRF	PORTA, 1
;D_84_16F84A_Flasher_v_1_0.c,41 :: 		TRISB     = 0x00;
$004B	$1683			BSF	STATUS, RP0
$004C	$0186			CLRF	TRISB, 1
;D_84_16F84A_Flasher_v_1_0.c,42 :: 		PORTB     = 0x00;
$004D	$1283			BCF	STATUS, RP0
$004E	$0186			CLRF	PORTB, 1
;D_84_16F84A_Flasher_v_1_0.c,44 :: 		OPTION_REG &= 0xDF;
$004F	$30DF			MOVLW	223
$0050	$1683			BSF	STATUS, RP0
$0051	$0501			ANDWF	OPTION_REG, 0
$0052	$00C0			MOVWF	STACK_0
$0053	$0840			MOVF	STACK_0, 0
$0054	$0081			MOVWF	OPTION_REG
;D_84_16F84A_Flasher_v_1_0.c,45 :: 		OPTION_REG &= 0xF0;
$0055	$30F0			MOVLW	240
$0056	$05C0			ANDWF	STACK_0, 1
$0057	$0840			MOVF	STACK_0, 0
$0058	$0081			MOVWF	OPTION_REG
;D_84_16F84A_Flasher_v_1_0.c,46 :: 		OPTION_REG &= 0x07;
$0059	$3007			MOVLW	7
$005A	$0540			ANDWF	STACK_0, 0
$005B	$0081			MOVWF	OPTION_REG
;D_84_16F84A_Flasher_v_1_0.c,48 :: 		p = 0x0001;
$005C	$3001			MOVLW	1
$005D	$008D			MOVWF	_p
$005E	$3000			MOVLW	0
$005F	$008E			MOVWF	_p+1
;D_84_16F84A_Flasher_v_1_0.c,49 :: 		PORTB = p & 0xFF;
$0060	$3001			MOVLW	1
$0061	$1283			BCF	STATUS, RP0
$0062	$0086			MOVWF	PORTB
;D_84_16F84A_Flasher_v_1_0.c,51 :: 		count = 0;
$0063	$018C			CLRF	_count, 1
;D_84_16F84A_Flasher_v_1_0.c,52 :: 		TMR0  = 0;
$0064	$0181			CLRF	TMR0, 1
;D_84_16F84A_Flasher_v_1_0.c,54 :: 		INTCON         |= 0x20;
$0065	$168B			BSF	INTCON, 5
;D_84_16F84A_Flasher_v_1_0.c,55 :: 		INTCON         |= 0x80;
$0066	$178B			BSF	INTCON, 7
;D_84_16F84A_Flasher_v_1_0.c,57 :: 		while(1)
$0067	$	L_main_2:
$0067	$2867			GOTO	L_main_2
;D_84_16F84A_Flasher_v_1_0.c,62 :: 		}//void main(void)
$0068	$2868			GOTO	$
