;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/03/23 16:40:49
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2831			GOTO	_main
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$0091			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$0090			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0092			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0094			MOVWF	STSAVED_0
;D_84_16F84A_Flasher_v_3_1.c,6 :: 		void interrupt(void)
;D_84_16F84A_Flasher_v_3_1.c,8 :: 		INTCON         &= 0x7F;
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D_84_16F84A_Flasher_v_3_1.c,9 :: 		INTCON         &= 0xDF;
$0011	$30DF			MOVLW	223
$0012	$058B			ANDWF	INTCON, 1
;D_84_16F84A_Flasher_v_3_1.c,10 :: 		INTCON         &= 0xFB;
$0013	$30FB			MOVLW	251
$0014	$058B			ANDWF	INTCON, 1
;D_84_16F84A_Flasher_v_3_1.c,12 :: 		if(count < duty)
$0015	$080D			MOVF	_duty, 0
$0016	$020C			SUBWF	_count, 0
$0017	$1803			BTFSC	STATUS, C
$0018	$281D			GOTO	L_interrupt_0
;D_84_16F84A_Flasher_v_3_1.c,16 :: 		PORTA = led_pattern & 0xFF;
$0019	$30FF			MOVLW	255
$001A	$050E			ANDWF	_led_pattern, 0
$001B	$0085			MOVWF	PORTA
;D_84_16F84A_Flasher_v_3_1.c,17 :: 		}
$001C	$281E			GOTO	L_interrupt_1
$001D	$	L_interrupt_0:
;D_84_16F84A_Flasher_v_3_1.c,20 :: 		PORTA = 0x00;
$001D	$0185			CLRF	PORTA, 1
;D_84_16F84A_Flasher_v_3_1.c,21 :: 		}
$001E	$	L_interrupt_1:
;D_84_16F84A_Flasher_v_3_1.c,23 :: 		count++;
$001E	$0A8C			INCF	_count, 1
;D_84_16F84A_Flasher_v_3_1.c,25 :: 		if(count == 100)
$001F	$080C			MOVF	_count, 0
$0020	$3A64			XORLW	100
$0021	$1D03			BTFSS	STATUS, Z
$0022	$2824			GOTO	L_interrupt_2
;D_84_16F84A_Flasher_v_3_1.c,27 :: 		count = 0;
$0023	$018C			CLRF	_count, 1
;D_84_16F84A_Flasher_v_3_1.c,28 :: 		}
$0024	$	L_interrupt_2:
;D_84_16F84A_Flasher_v_3_1.c,30 :: 		INTCON         |= 0x20;
$0024	$168B			BSF	INTCON, 5
;D_84_16F84A_Flasher_v_3_1.c,31 :: 		INTCON         |= 0x80;
$0025	$178B			BSF	INTCON, 7
;D_84_16F84A_Flasher_v_3_1.c,33 :: 		}//void interrupt(void)
$0026	$	L_Interrupt_end:
$0026	$0814			MOVF	STSAVED_0, 0
$0027	$00C0			MOVWF	STACK_0
$0028	$0812			MOVF	?savePCLATH, 0
$0029	$008A			MOVWF	PCLATH
$002A	$0810			MOVF	?saveFSR, 0
$002B	$0084			MOVWF	FSR
$002C	$0E11			SWAPF	?saveSTATUS, 0
$002D	$0083			MOVWF	STATUS
$002E	$0ECF			SWAPF	STACK_15, 1
$002F	$0E4F			SWAPF	STACK_15, 0
$0030	$0009			RETFIE
$0031	$	_main:
;D_84_16F84A_Flasher_v_3_1.c,35 :: 		void main(void)
;D_84_16F84A_Flasher_v_3_1.c,40 :: 		TRISA     = 0x00;
$0031	$1303			BCF	STATUS, RP1
$0032	$1683			BSF	STATUS, RP0
$0033	$0185			CLRF	TRISA, 1
;D_84_16F84A_Flasher_v_3_1.c,41 :: 		PORTA     = 0x00; //0000 0010
$0034	$1283			BCF	STATUS, RP0
$0035	$0185			CLRF	PORTA, 1
;D_84_16F84A_Flasher_v_3_1.c,42 :: 		TRISB     = 0x00;
$0036	$1683			BSF	STATUS, RP0
$0037	$0186			CLRF	TRISB, 1
;D_84_16F84A_Flasher_v_3_1.c,43 :: 		PORTB     = 0x00;
$0038	$1283			BCF	STATUS, RP0
$0039	$0186			CLRF	PORTB, 1
;D_84_16F84A_Flasher_v_3_1.c,45 :: 		OPTION_REG &= 0xDF;
$003A	$30DF			MOVLW	223
$003B	$1683			BSF	STATUS, RP0
$003C	$0581			ANDWF	OPTION_REG, 1
;D_84_16F84A_Flasher_v_3_1.c,49 :: 		count	= 0;
$003D	$018C			CLRF	_count, 1
;D_84_16F84A_Flasher_v_3_1.c,50 :: 		duty   = 0;
$003E	$018D			CLRF	_duty, 1
;D_84_16F84A_Flasher_v_3_1.c,52 :: 		TMR0  = 0;
$003F	$1283			BCF	STATUS, RP0
$0040	$0181			CLRF	TMR0, 1
;D_84_16F84A_Flasher_v_3_1.c,56 :: 		led_pattern = 0x0001;
$0041	$3001			MOVLW	1
$0042	$008E			MOVWF	_led_pattern
$0043	$3000			MOVLW	0
$0044	$008F			MOVWF	_led_pattern+1
;D_84_16F84A_Flasher_v_3_1.c,59 :: 		INTCON         |= 0x20;
$0045	$168B			BSF	INTCON, 5
;D_84_16F84A_Flasher_v_3_1.c,60 :: 		INTCON         |= 0x80;
$0046	$178B			BSF	INTCON, 7
;D_84_16F84A_Flasher_v_3_1.c,62 :: 		while(1)
$0047	$	L_main_3:
;D_84_16F84A_Flasher_v_3_1.c,64 :: 		for(i = 0; i < 100; i++)
$0047	$0193			CLRF	main_i_L0, 1
$0048	$	L_main_5:
$0048	$3064			MOVLW	100
$0049	$0213			SUBWF	main_i_L0, 0
$004A	$1803			BTFSC	STATUS, C
$004B	$285F			GOTO	L_main_6
;D_84_16F84A_Flasher_v_3_1.c,66 :: 		duty = i;
$004C	$0813			MOVF	main_i_L0, 0
$004D	$008D			MOVWF	_duty
;D_84_16F84A_Flasher_v_3_1.c,67 :: 		Delay_ms(10);
$004E	$3041			MOVLW	65
$004F	$00CB			MOVWF	STACK_11
$0050	$30FF			MOVLW	255
$0051	$00CA			MOVWF	STACK_10
$0052	$0BCB			DECFSZ	STACK_11, F
$0053	$2855			GOTO	$+2
$0054	$2858			GOTO	$+4
$0055	$0BCA			DECFSZ	STACK_10, F
$0056	$2855			GOTO	$-1
$0057	$2852			GOTO	$-5
$0058	$30C3			MOVLW	195
$0059	$00CA			MOVWF	STACK_10
$005A	$0BCA			DECFSZ	STACK_10, F
$005B	$285A			GOTO	$-1
$005C	$0000			NOP
;D_84_16F84A_Flasher_v_3_1.c,68 :: 		}
$005D	$	L_main_7:
;D_84_16F84A_Flasher_v_3_1.c,64 :: 		for(i = 0; i < 100; i++)
$005D	$0A93			INCF	main_i_L0, 1
;D_84_16F84A_Flasher_v_3_1.c,68 :: 		}
$005E	$2848			GOTO	L_main_5
$005F	$	L_main_6:
;D_84_16F84A_Flasher_v_3_1.c,70 :: 		for(i = 0; i < 100; i++)
$005F	$0193			CLRF	main_i_L0, 1
$0060	$	L_main_8:
$0060	$3064			MOVLW	100
$0061	$0213			SUBWF	main_i_L0, 0
$0062	$1803			BTFSC	STATUS, C
$0063	$2878			GOTO	L_main_9
;D_84_16F84A_Flasher_v_3_1.c,72 :: 		duty = 99 - i;
$0064	$0813			MOVF	main_i_L0, 0
$0065	$3C63			SUBLW	99
$0066	$008D			MOVWF	_duty
;D_84_16F84A_Flasher_v_3_1.c,73 :: 		Delay_ms(10);
$0067	$3041			MOVLW	65
$0068	$00CB			MOVWF	STACK_11
$0069	$30FF			MOVLW	255
$006A	$00CA			MOVWF	STACK_10
$006B	$0BCB			DECFSZ	STACK_11, F
$006C	$286E			GOTO	$+2
$006D	$2871			GOTO	$+4
$006E	$0BCA			DECFSZ	STACK_10, F
$006F	$286E			GOTO	$-1
$0070	$286B			GOTO	$-5
$0071	$30C3			MOVLW	195
$0072	$00CA			MOVWF	STACK_10
$0073	$0BCA			DECFSZ	STACK_10, F
$0074	$2873			GOTO	$-1
$0075	$0000			NOP
;D_84_16F84A_Flasher_v_3_1.c,74 :: 		}
$0076	$	L_main_10:
;D_84_16F84A_Flasher_v_3_1.c,70 :: 		for(i = 0; i < 100; i++)
$0076	$0A93			INCF	main_i_L0, 1
;D_84_16F84A_Flasher_v_3_1.c,74 :: 		}
$0077	$2860			GOTO	L_main_8
$0078	$	L_main_9:
;D_84_16F84A_Flasher_v_3_1.c,76 :: 		if(led_pattern == 0x08) // 0000 1000
$0078	$3000			MOVLW	0
$0079	$060F			XORWF	_led_pattern+1, 0
$007A	$1D03			BTFSS	STATUS, Z
$007B	$287E			GOTO	L_main_13
$007C	$3008			MOVLW	8
$007D	$060E			XORWF	_led_pattern, 0
$007E	$	L_main_13:
$007E	$1D03			BTFSS	STATUS, Z
$007F	$2885			GOTO	L_main_11
;D_84_16F84A_Flasher_v_3_1.c,78 :: 		led_pattern = 0x0001;
$0080	$3001			MOVLW	1
$0081	$008E			MOVWF	_led_pattern
$0082	$3000			MOVLW	0
$0083	$008F			MOVWF	_led_pattern+1
;D_84_16F84A_Flasher_v_3_1.c,79 :: 		}
$0084	$2888			GOTO	L_main_12
$0085	$	L_main_11:
;D_84_16F84A_Flasher_v_3_1.c,82 :: 		led_pattern <<= 1;
$0085	$0D8E			RLF	_led_pattern, 1
$0086	$0D8F			RLF	_led_pattern+1, 1
$0087	$100E			BCF	_led_pattern, 0
;D_84_16F84A_Flasher_v_3_1.c,83 :: 		}
$0088	$	L_main_12:
;D_84_16F84A_Flasher_v_3_1.c,98 :: 		}//while(1)
$0088	$2847			GOTO	L_main_3
;D_84_16F84A_Flasher_v_3_1.c,100 :: 		}//void main(void)
$0089	$2889			GOTO	$
