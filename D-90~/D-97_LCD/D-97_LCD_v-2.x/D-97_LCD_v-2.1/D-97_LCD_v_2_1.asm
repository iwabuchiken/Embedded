;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/11/16 10:56:05
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2872			GOTO	_main
$0125	$	_SD1602_write:
;sd1602_4bit_mode.h,1 :: 		void SD1602_write(char c, char r)
;sd1602_4bit_mode.h,3 :: 		PORTB = c & 0xF0; /* RB4〜RB7にデータの上位4bitをセットする */
$0125	$30F0			MOVLW	240
$0126	$1303			BCF	STATUS, RP1
$0127	$1283			BCF	STATUS, RP0
$0128	$0528			ANDWF	FARG_SD1602_write+0, 0
$0129	$0086			MOVWF	PORTB
;sd1602_4bit_mode.h,5 :: 		if (r == 1) /* 文字コードの場合 */
$012A	$0829			MOVF	FARG_SD1602_write+1, 0
$012B	$3A01			XORLW	1
$012C	$1D03			BTFSS	STATUS, Z
$012D	$2930			GOTO	L_SD1602_write_0
;sd1602_4bit_mode.h,7 :: 		PORTA |= 0x02; /* RSを1にする */
$012E	$1485			BSF	PORTA, 1
;sd1602_4bit_mode.h,8 :: 		}
$012F	$2932			GOTO	L_SD1602_write_1
$0130	$	L_SD1602_write_0:
;sd1602_4bit_mode.h,11 :: 		PORTA &= 0xFD; /* RSを0にする */
$0130	$30FD			MOVLW	253
$0131	$0585			ANDWF	PORTA, 1
;sd1602_4bit_mode.h,12 :: 		}
$0132	$	L_SD1602_write_1:
;sd1602_4bit_mode.h,14 :: 		PORTA &= 0xFE; /* Eを0にする */
$0132	$30FE			MOVLW	254
$0133	$0585			ANDWF	PORTA, 1
;sd1602_4bit_mode.h,15 :: 		Delay_us(1); /* 1us（40ns以上）の時間待ち */
$0134	$3001			MOVLW	1
$0135	$00FA			MOVWF	STACK_10
$0136	$0BFA			DECFSZ	STACK_10, F
$0137	$2936			GOTO	$-1
$0138	$0000			NOP
;sd1602_4bit_mode.h,16 :: 		PORTA |= 0x01; /* Eを1にする */
$0139	$1405			BSF	PORTA, 0
;sd1602_4bit_mode.h,17 :: 		Delay_us(1);  /* 1us（230ns以上）の時間待ち */
$013A	$3001			MOVLW	1
$013B	$00FA			MOVWF	STACK_10
$013C	$0BFA			DECFSZ	STACK_10, F
$013D	$293C			GOTO	$-1
$013E	$0000			NOP
;sd1602_4bit_mode.h,18 :: 		PORTA &= 0xFE; /* Eを0にする */
$013F	$30FE			MOVLW	254
$0140	$0585			ANDWF	PORTA, 1
;sd1602_4bit_mode.h,19 :: 		}
$0141	$0008			RETURN
$010E	$	_SD1602_control:
;sd1602_4bit_mode.h,28 :: 		void SD1602_control(char c)
;sd1602_4bit_mode.h,30 :: 		SD1602_write(c, 0); /* 制御コードの上位4bitを渡す */
$010E	$1303			BCF	STATUS, RP1
$010F	$1283			BCF	STATUS, RP0
$0110	$0827			MOVF	FARG_SD1602_control+0, 0
$0111	$00A8			MOVWF	FARG_SD1602_write+0
$0112	$01A9			CLRF	FARG_SD1602_write+1, 1
$0113	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,31 :: 		SD1602_write(c << 4, 0); /* 制御コードの下位4bitを渡す */
$0114	$0827			MOVF	FARG_SD1602_control+0, 0
$0115	$00A8			MOVWF	FARG_SD1602_write+0
$0116	$0DA8			RLF	FARG_SD1602_write+0, 1
$0117	$1028			BCF	FARG_SD1602_write+0, 0
$0118	$0DA8			RLF	FARG_SD1602_write+0, 1
$0119	$1028			BCF	FARG_SD1602_write+0, 0
$011A	$0DA8			RLF	FARG_SD1602_write+0, 1
$011B	$1028			BCF	FARG_SD1602_write+0, 0
$011C	$0DA8			RLF	FARG_SD1602_write+0, 1
$011D	$1028			BCF	FARG_SD1602_write+0, 0
$011E	$01A9			CLRF	FARG_SD1602_write+1, 1
$011F	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,32 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$0120	$3053			MOVLW	83
$0121	$00FA			MOVWF	STACK_10
$0122	$0BFA			DECFSZ	STACK_10, F
$0123	$2922			GOTO	$-1
;sd1602_4bit_mode.h,33 :: 		}
$0124	$0008			RETURN
$00F5	$	_SD1602_display:
;sd1602_4bit_mode.h,21 :: 		void SD1602_display(char c)
;sd1602_4bit_mode.h,23 :: 		SD1602_write(c, 1); /* 文字コードの上位4bitを渡す */
$00F5	$1303			BCF	STATUS, RP1
$00F6	$1283			BCF	STATUS, RP0
$00F7	$0827			MOVF	FARG_SD1602_display+0, 0
$00F8	$00A8			MOVWF	FARG_SD1602_write+0
$00F9	$3001			MOVLW	1
$00FA	$00A9			MOVWF	FARG_SD1602_write+1
$00FB	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,24 :: 		SD1602_write(c << 4, 1); /* 文字コードの下位4bitを渡す */
$00FC	$0827			MOVF	FARG_SD1602_display+0, 0
$00FD	$00A8			MOVWF	FARG_SD1602_write+0
$00FE	$0DA8			RLF	FARG_SD1602_write+0, 1
$00FF	$1028			BCF	FARG_SD1602_write+0, 0
$0100	$0DA8			RLF	FARG_SD1602_write+0, 1
$0101	$1028			BCF	FARG_SD1602_write+0, 0
$0102	$0DA8			RLF	FARG_SD1602_write+0, 1
$0103	$1028			BCF	FARG_SD1602_write+0, 0
$0104	$0DA8			RLF	FARG_SD1602_write+0, 1
$0105	$1028			BCF	FARG_SD1602_write+0, 0
$0106	$3001			MOVLW	1
$0107	$00A9			MOVWF	FARG_SD1602_write+1
$0108	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,25 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$0109	$3053			MOVLW	83
$010A	$00FA			MOVWF	STACK_10
$010B	$0BFA			DECFSZ	STACK_10, F
$010C	$290B			GOTO	$-1
;sd1602_4bit_mode.h,26 :: 		}
$010D	$0008			RETURN
$0004	$	_SD1602_init:
;sd1602_4bit_mode.h,42 :: 		void SD1602_init(void)
;sd1602_4bit_mode.h,44 :: 		Delay_ms(20); /* 20ms（15ms以上）の時間待ち */
$0004	$3082			MOVLW	130
$0005	$1303			BCF	STATUS, RP1
$0006	$1283			BCF	STATUS, RP0
$0007	$00FB			MOVWF	STACK_11
$0008	$30FF			MOVLW	255
$0009	$00FA			MOVWF	STACK_10
$000A	$0BFB			DECFSZ	STACK_11, F
$000B	$280D			GOTO	$+2
$000C	$2810			GOTO	$+4
$000D	$0BFA			DECFSZ	STACK_10, F
$000E	$280D			GOTO	$-1
$000F	$280A			GOTO	$-5
$0010	$3087			MOVLW	135
$0011	$00FA			MOVWF	STACK_10
$0012	$0BFA			DECFSZ	STACK_10, F
$0013	$2812			GOTO	$-1
$0014	$0000			NOP
;sd1602_4bit_mode.h,45 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$0015	$3030			MOVLW	48
$0016	$00A8			MOVWF	FARG_SD1602_write+0
$0017	$01A9			CLRF	FARG_SD1602_write+1, 1
$0018	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,46 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$0019	$3021			MOVLW	33
$001A	$00FB			MOVWF	STACK_11
$001B	$30FF			MOVLW	255
$001C	$00FA			MOVWF	STACK_10
$001D	$0BFB			DECFSZ	STACK_11, F
$001E	$2820			GOTO	$+2
$001F	$2823			GOTO	$+4
$0020	$0BFA			DECFSZ	STACK_10, F
$0021	$2820			GOTO	$-1
$0022	$281D			GOTO	$-5
$0023	$3060			MOVLW	96
$0024	$00FA			MOVWF	STACK_10
$0025	$0BFA			DECFSZ	STACK_10, F
$0026	$2825			GOTO	$-1
$0027	$0000			NOP
$0028	$0000			NOP
;sd1602_4bit_mode.h,47 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$0029	$3030			MOVLW	48
$002A	$00A8			MOVWF	FARG_SD1602_write+0
$002B	$01A9			CLRF	FARG_SD1602_write+1, 1
$002C	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,48 :: 		Delay_ms(5); /* 5ms（100us以上）の時間待ち */
$002D	$3021			MOVLW	33
$002E	$00FB			MOVWF	STACK_11
$002F	$30FF			MOVLW	255
$0030	$00FA			MOVWF	STACK_10
$0031	$0BFB			DECFSZ	STACK_11, F
$0032	$2834			GOTO	$+2
$0033	$2837			GOTO	$+4
$0034	$0BFA			DECFSZ	STACK_10, F
$0035	$2834			GOTO	$-1
$0036	$2831			GOTO	$-5
$0037	$3060			MOVLW	96
$0038	$00FA			MOVWF	STACK_10
$0039	$0BFA			DECFSZ	STACK_10, F
$003A	$2839			GOTO	$-1
$003B	$0000			NOP
$003C	$0000			NOP
;sd1602_4bit_mode.h,49 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$003D	$3030			MOVLW	48
$003E	$00A8			MOVWF	FARG_SD1602_write+0
$003F	$01A9			CLRF	FARG_SD1602_write+1, 1
$0040	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,50 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$0041	$3021			MOVLW	33
$0042	$00FB			MOVWF	STACK_11
$0043	$30FF			MOVLW	255
$0044	$00FA			MOVWF	STACK_10
$0045	$0BFB			DECFSZ	STACK_11, F
$0046	$2848			GOTO	$+2
$0047	$284B			GOTO	$+4
$0048	$0BFA			DECFSZ	STACK_10, F
$0049	$2848			GOTO	$-1
$004A	$2845			GOTO	$-5
$004B	$3060			MOVLW	96
$004C	$00FA			MOVWF	STACK_10
$004D	$0BFA			DECFSZ	STACK_10, F
$004E	$284D			GOTO	$-1
$004F	$0000			NOP
$0050	$0000			NOP
;sd1602_4bit_mode.h,51 :: 		SD1602_write(0x20, 0); /* 4bitモード設定 */
$0051	$3020			MOVLW	32
$0052	$00A8			MOVWF	FARG_SD1602_write+0
$0053	$01A9			CLRF	FARG_SD1602_write+1, 1
$0054	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,52 :: 		Delay_ms(5); /* 5ms（40us以上）の時間待ち */
$0055	$3021			MOVLW	33
$0056	$00FB			MOVWF	STACK_11
$0057	$30FF			MOVLW	255
$0058	$00FA			MOVWF	STACK_10
$0059	$0BFB			DECFSZ	STACK_11, F
$005A	$285C			GOTO	$+2
$005B	$285F			GOTO	$+4
$005C	$0BFA			DECFSZ	STACK_10, F
$005D	$285C			GOTO	$-1
$005E	$2859			GOTO	$-5
$005F	$3060			MOVLW	96
$0060	$00FA			MOVWF	STACK_10
$0061	$0BFA			DECFSZ	STACK_10, F
$0062	$2861			GOTO	$-1
$0063	$0000			NOP
$0064	$0000			NOP
;sd1602_4bit_mode.h,53 :: 		SD1602_control(0x28); /* 4bitモードで2行表示に設定する */
$0065	$3028			MOVLW	40
$0066	$00A7			MOVWF	FARG_SD1602_control+0
$0067	$210E			CALL	_SD1602_control
;sd1602_4bit_mode.h,54 :: 		SD1602_control(0x08); /* テキスト表示をオフにする */
$0068	$3008			MOVLW	8
$0069	$00A7			MOVWF	FARG_SD1602_control+0
$006A	$210E			CALL	_SD1602_control
;sd1602_4bit_mode.h,55 :: 		SD1602_control(0x0C); /* テキスト表示をオンにする */
$006B	$300C			MOVLW	12
$006C	$00A7			MOVWF	FARG_SD1602_control+0
$006D	$210E			CALL	_SD1602_control
;sd1602_4bit_mode.h,56 :: 		SD1602_control(0x06); /* カーソル移動を右方向に設定する */
$006E	$3006			MOVLW	6
$006F	$00A7			MOVWF	FARG_SD1602_control+0
$0070	$210E			CALL	_SD1602_control
;sd1602_4bit_mode.h,57 :: 		}
$0071	$0008			RETURN
$00DB	$	_SD1602_clear:
;sd1602_4bit_mode.h,35 :: 		void SD1602_clear(void)
;sd1602_4bit_mode.h,37 :: 		SD1602_write(0x01, 0); /* 制御コードの上位4bitを渡す */
$00DB	$3001			MOVLW	1
$00DC	$1303			BCF	STATUS, RP1
$00DD	$1283			BCF	STATUS, RP0
$00DE	$00A8			MOVWF	FARG_SD1602_write+0
$00DF	$01A9			CLRF	FARG_SD1602_write+1, 1
$00E0	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,38 :: 		SD1602_write(0x01 << 4, 0); /* 制御コードの下位4bitを渡す */
$00E1	$3010			MOVLW	16
$00E2	$00A8			MOVWF	FARG_SD1602_write+0
$00E3	$01A9			CLRF	FARG_SD1602_write+1, 1
$00E4	$2125			CALL	_SD1602_write
;sd1602_4bit_mode.h,39 :: 		Delay_ms(2); /* 2ms（1.64ms以上）の時間待ち */
$00E5	$300D			MOVLW	13
$00E6	$00FB			MOVWF	STACK_11
$00E7	$30FF			MOVLW	255
$00E8	$00FA			MOVWF	STACK_10
$00E9	$0BFB			DECFSZ	STACK_11, F
$00EA	$28EC			GOTO	$+2
$00EB	$28EF			GOTO	$+4
$00EC	$0BFA			DECFSZ	STACK_10, F
$00ED	$28EC			GOTO	$-1
$00EE	$28E9			GOTO	$-5
$00EF	$30F3			MOVLW	243
$00F0	$00FA			MOVWF	STACK_10
$00F1	$0BFA			DECFSZ	STACK_10, F
$00F2	$28F1			GOTO	$-1
$00F3	$0000			NOP
;sd1602_4bit_mode.h,40 :: 		}
$00F4	$0008			RETURN
$0142	$	_SD1602_print:
;sd1602_4bit_mode.h,59 :: 		void SD1602_print(char *s)
;sd1602_4bit_mode.h,61 :: 		while (*s != 0x00) /* ナル文字（0x00）があらわれるまで */
$0142	$	L_SD1602_print_2:
$0142	$1303			BCF	STATUS, RP1
$0143	$1283			BCF	STATUS, RP0
$0144	$0826			MOVF	FARG_SD1602_print+0, 0
$0145	$0084			MOVWF	FSR
$0146	$0800			MOVF	INDF, 0
$0147	$00F1			MOVWF	STACK_1
$0148	$0871			MOVF	STACK_1, 0
$0149	$3A00			XORLW	0
$014A	$1903			BTFSC	STATUS, Z
$014B	$2953			GOTO	L_SD1602_print_3
;sd1602_4bit_mode.h,63 :: 		SD1602_display(*s); /* テキストデータを表示する */
$014C	$0826			MOVF	FARG_SD1602_print+0, 0
$014D	$0084			MOVWF	FSR
$014E	$0800			MOVF	INDF, 0
$014F	$00A7			MOVWF	FARG_SD1602_display+0
$0150	$20F5			CALL	_SD1602_display
;sd1602_4bit_mode.h,64 :: 		s++;
$0151	$0AA6			INCF	FARG_SD1602_print+0, 1
;sd1602_4bit_mode.h,65 :: 		}
$0152	$2942			GOTO	L_SD1602_print_2
$0153	$	L_SD1602_print_3:
;sd1602_4bit_mode.h,66 :: 		}
$0153	$0008			RETURN
$0072	$	_main:
$0072	$3048			MOVLW	72
$0073	$1303			BCF	STATUS, RP1
$0074	$1283			BCF	STATUS, RP0
$0075	$00A0			MOVWF	main_s_L0+0
$0076	$3065			MOVLW	101
$0077	$00A1			MOVWF	main_s_L0+1
$0078	$306C			MOVLW	108
$0079	$00A2			MOVWF	main_s_L0+2
$007A	$306C			MOVLW	108
$007B	$00A3			MOVWF	main_s_L0+3
$007C	$306F			MOVLW	111
$007D	$00A4			MOVWF	main_s_L0+4
$007E	$01A5			CLRF	main_s_L0+5
;D-97_LCD_v_2_1.c,27 :: 		void main(void)
;D-97_LCD_v_2_1.c,34 :: 		TRISA = 0x00;
$007F	$1683			BSF	STATUS, RP0
$0080	$0185			CLRF	TRISA, 1
;D-97_LCD_v_2_1.c,35 :: 		PORTA = 0x00;
$0081	$1283			BCF	STATUS, RP0
$0082	$0185			CLRF	PORTA, 1
;D-97_LCD_v_2_1.c,37 :: 		TRISB = 0x00;
$0083	$1683			BSF	STATUS, RP0
$0084	$0186			CLRF	TRISB, 1
;D-97_LCD_v_2_1.c,38 :: 		PORTB = 0x00;
$0085	$1283			BCF	STATUS, RP0
$0086	$0186			CLRF	PORTB, 1
;D-97_LCD_v_2_1.c,45 :: 		ADCON0 = 0x00;
$0087	$019F			CLRF	ADCON0, 1
;D-97_LCD_v_2_1.c,47 :: 		ANSEL = 0;
$0088	$1683			BSF	STATUS, RP0
$0089	$019B			CLRF	ANSEL, 1
;D-97_LCD_v_2_1.c,50 :: 		SD1602_init();
$008A	$2004			CALL	_SD1602_init
;D-97_LCD_v_2_1.c,52 :: 		while(1)
$008B	$	L_main_4:
;D-97_LCD_v_2_1.c,54 :: 		SD1602_clear();
$008B	$20DB			CALL	_SD1602_clear
;D-97_LCD_v_2_1.c,55 :: 		SD1602_control(0x80);
$008C	$3080			MOVLW	128
$008D	$00A7			MOVWF	FARG_SD1602_control+0
$008E	$210E			CALL	_SD1602_control
;D-97_LCD_v_2_1.c,57 :: 		SD1602_print(s);
$008F	$3020			MOVLW	main_s_L0
$0090	$00A6			MOVWF	FARG_SD1602_print+0
$0091	$2142			CALL	_SD1602_print
;D-97_LCD_v_2_1.c,59 :: 		Delay_ms(1000);
$0092	$301A			MOVLW	26
$0093	$00FC			MOVWF	STACK_12
$0094	$30FF			MOVLW	255
$0095	$00FB			MOVWF	STACK_11
$0096	$30FF			MOVLW	255
$0097	$00FA			MOVWF	STACK_10
$0098	$0BFC			DECFSZ	STACK_12, F
$0099	$289B			GOTO	$+2
$009A	$28A2			GOTO	$+8
$009B	$0BFB			DECFSZ	STACK_11, F
$009C	$289E			GOTO	$+2
$009D	$28A1			GOTO	$+4
$009E	$0BFA			DECFSZ	STACK_10, F
$009F	$289E			GOTO	$-1
$00A0	$289B			GOTO	$-5
$00A1	$2898			GOTO	$-9
$00A2	$307F			MOVLW	127
$00A3	$00FB			MOVWF	STACK_11
$00A4	$30FF			MOVLW	255
$00A5	$00FA			MOVWF	STACK_10
$00A6	$0BFB			DECFSZ	STACK_11, F
$00A7	$28A9			GOTO	$+2
$00A8	$28AC			GOTO	$+4
$00A9	$0BFA			DECFSZ	STACK_10, F
$00AA	$28A9			GOTO	$-1
$00AB	$28A6			GOTO	$-5
$00AC	$3058			MOVLW	88
$00AD	$00FA			MOVWF	STACK_10
$00AE	$0BFA			DECFSZ	STACK_10, F
$00AF	$28AE			GOTO	$-1
$00B0	$0000			NOP
$00B1	$0000			NOP
;D-97_LCD_v_2_1.c,61 :: 		SD1602_clear();
$00B2	$20DB			CALL	_SD1602_clear
;D-97_LCD_v_2_1.c,62 :: 		SD1602_control(0xC0);
$00B3	$30C0			MOVLW	192
$00B4	$00A7			MOVWF	FARG_SD1602_control+0
$00B5	$210E			CALL	_SD1602_control
;D-97_LCD_v_2_1.c,64 :: 		SD1602_print(s);
$00B6	$3020			MOVLW	main_s_L0
$00B7	$00A6			MOVWF	FARG_SD1602_print+0
$00B8	$2142			CALL	_SD1602_print
;D-97_LCD_v_2_1.c,66 :: 		Delay_ms(1000);
$00B9	$301A			MOVLW	26
$00BA	$00FC			MOVWF	STACK_12
$00BB	$30FF			MOVLW	255
$00BC	$00FB			MOVWF	STACK_11
$00BD	$30FF			MOVLW	255
$00BE	$00FA			MOVWF	STACK_10
$00BF	$0BFC			DECFSZ	STACK_12, F
$00C0	$28C2			GOTO	$+2
$00C1	$28C9			GOTO	$+8
$00C2	$0BFB			DECFSZ	STACK_11, F
$00C3	$28C5			GOTO	$+2
$00C4	$28C8			GOTO	$+4
$00C5	$0BFA			DECFSZ	STACK_10, F
$00C6	$28C5			GOTO	$-1
$00C7	$28C2			GOTO	$-5
$00C8	$28BF			GOTO	$-9
$00C9	$307F			MOVLW	127
$00CA	$00FB			MOVWF	STACK_11
$00CB	$30FF			MOVLW	255
$00CC	$00FA			MOVWF	STACK_10
$00CD	$0BFB			DECFSZ	STACK_11, F
$00CE	$28D0			GOTO	$+2
$00CF	$28D3			GOTO	$+4
$00D0	$0BFA			DECFSZ	STACK_10, F
$00D1	$28D0			GOTO	$-1
$00D2	$28CD			GOTO	$-5
$00D3	$3058			MOVLW	88
$00D4	$00FA			MOVWF	STACK_10
$00D5	$0BFA			DECFSZ	STACK_10, F
$00D6	$28D5			GOTO	$-1
$00D7	$0000			NOP
$00D8	$0000			NOP
;D-97_LCD_v_2_1.c,69 :: 		}//while(1)
$00D9	$288B			GOTO	L_main_4
;D-97_LCD_v_2_1.c,71 :: 		}//void main(void)
$00DA	$28DA			GOTO	$
