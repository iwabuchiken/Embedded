;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/09/05 23:00:47
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2928			GOTO	_main
$0030	$	__pulse:
;D-91_PIC16_color_changer_v-4.1.c,47 :: 		void _pulse(int num)
;D-91_PIC16_color_changer_v-4.1.c,51 :: 		for(i = 0; i < num; i++)
$0030	$1303			BCF	STATUS, RP1
$0031	$1283			BCF	STATUS, RP0
$0032	$019C			CLRF	_pulse_i_L0
$0033	$019D			CLRF	_pulse_i_L0+1
$0034	$	L__pulse_0:
$0034	$3080			MOVLW	128
$0035	$061D			XORWF	_pulse_i_L0+1, 0
$0036	$00C0			MOVWF	STACK_0
$0037	$3080			MOVLW	128
$0038	$061B			XORWF	FARG__pulse+1, 0
$0039	$0240			SUBWF	STACK_0, 0
$003A	$1D03			BTFSS	STATUS, Z
$003B	$283E			GOTO	L__pulse_34
$003C	$081A			MOVF	FARG__pulse+0, 0
$003D	$021C			SUBWF	_pulse_i_L0, 0
$003E	$	L__pulse_34:
$003E	$1803			BTFSC	STATUS, C
$003F	$2867			GOTO	L__pulse_1
;D-91_PIC16_color_changer_v-4.1.c,54 :: 		PORTA = 0x01; Delay_ms(1);
$0040	$3001			MOVLW	1
$0041	$0085			MOVWF	PORTA
$0042	$3007			MOVLW	7
$0043	$00CB			MOVWF	STACK_11
$0044	$30FF			MOVLW	255
$0045	$00CA			MOVWF	STACK_10
$0046	$0BCB			DECFSZ	STACK_11, F
$0047	$2849			GOTO	$+2
$0048	$284C			GOTO	$+4
$0049	$0BCA			DECFSZ	STACK_10, F
$004A	$2849			GOTO	$-1
$004B	$2846			GOTO	$-5
$004C	$3078			MOVLW	120
$004D	$00CA			MOVWF	STACK_10
$004E	$0BCA			DECFSZ	STACK_10, F
$004F	$284E			GOTO	$-1
$0050	$0000			NOP
$0051	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,56 :: 		PORTA = 0x00; Delay_ms(1);
$0052	$0185			CLRF	PORTA, 1
$0053	$3007			MOVLW	7
$0054	$00CB			MOVWF	STACK_11
$0055	$30FF			MOVLW	255
$0056	$00CA			MOVWF	STACK_10
$0057	$0BCB			DECFSZ	STACK_11, F
$0058	$285A			GOTO	$+2
$0059	$285D			GOTO	$+4
$005A	$0BCA			DECFSZ	STACK_10, F
$005B	$285A			GOTO	$-1
$005C	$2857			GOTO	$-5
$005D	$3078			MOVLW	120
$005E	$00CA			MOVWF	STACK_10
$005F	$0BCA			DECFSZ	STACK_10, F
$0060	$285F			GOTO	$-1
$0061	$0000			NOP
$0062	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,58 :: 		}
$0063	$	L__pulse_2:
;D-91_PIC16_color_changer_v-4.1.c,51 :: 		for(i = 0; i < num; i++)
$0063	$0A9C			INCF	_pulse_i_L0, 1
$0064	$1903			BTFSC	STATUS, Z
$0065	$0A9D			INCF	_pulse_i_L0+1, 1
;D-91_PIC16_color_changer_v-4.1.c,58 :: 		}
$0066	$2834			GOTO	L__pulse_0
$0067	$	L__pulse_1:
;D-91_PIC16_color_changer_v-4.1.c,60 :: 		}
$0067	$0008			RETURN
$0148	$	__while_PORTB_0x01:
;D-91_PIC16_color_changer_v-4.1.c,113 :: 		void _while_PORTB_0x01(int num)
;D-91_PIC16_color_changer_v-4.1.c,116 :: 		while((PORTB & 0x01) == num) //---------------------
$0148	$	L__while_PORTB_0x01_12:
$0148	$3001			MOVLW	1
$0149	$1303			BCF	STATUS, RP1
$014A	$1283			BCF	STATUS, RP0
$014B	$0506			ANDWF	PORTB, 0
$014C	$00C1			MOVWF	STACK_1
$014D	$3000			MOVLW	0
$014E	$0617			XORWF	FARG__while_PORTB_0x01+1, 0
$014F	$1D03			BTFSS	STATUS, Z
$0150	$2953			GOTO	L__while_PORTB_0x01_38
$0151	$0816			MOVF	FARG__while_PORTB_0x01+0, 0
$0152	$0641			XORWF	STACK_1, 0
$0153	$	L__while_PORTB_0x01_38:
$0153	$1D03			BTFSS	STATUS, Z
$0154	$2960			GOTO	L__while_PORTB_0x01_13
;D-91_PIC16_color_changer_v-4.1.c,119 :: 		if(TMR0 == 255)
$0155	$0801			MOVF	TMR0, 0
$0156	$3AFF			XORLW	255
$0157	$1D03			BTFSS	STATUS, Z
$0158	$295F			GOTO	L__while_PORTB_0x01_14
;D-91_PIC16_color_changer_v-4.1.c,123 :: 		_pulse(3);
$0159	$3003			MOVLW	3
$015A	$009A			MOVWF	FARG__pulse+0
$015B	$3000			MOVLW	0
$015C	$009B			MOVWF	FARG__pulse+1
$015D	$2030			CALL	__pulse
;D-91_PIC16_color_changer_v-4.1.c,126 :: 		return;
$015E	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,128 :: 		}
$015F	$	L__while_PORTB_0x01_14:
;D-91_PIC16_color_changer_v-4.1.c,130 :: 		}//while((PORTB & 0x01) == 0)
$015F	$2948			GOTO	L__while_PORTB_0x01_12
$0160	$	L__while_PORTB_0x01_13:
;D-91_PIC16_color_changer_v-4.1.c,132 :: 		return;
;D-91_PIC16_color_changer_v-4.1.c,134 :: 		}
$0160	$0008			RETURN
$00D5	$	__judge_TMR_:
;D-91_PIC16_color_changer_v-4.1.c,140 :: 		int _judge_TMR_(int low, int high) {
;D-91_PIC16_color_changer_v-4.1.c,142 :: 		if(TMR0 < low) //---------------------
$00D5	$3080			MOVLW	128
$00D6	$1303			BCF	STATUS, RP1
$00D7	$1283			BCF	STATUS, RP0
$00D8	$00C0			MOVWF	STACK_0
$00D9	$3080			MOVLW	128
$00DA	$0617			XORWF	FARG__judge_TMR_+1, 0
$00DB	$0240			SUBWF	STACK_0, 0
$00DC	$1D03			BTFSS	STATUS, Z
$00DD	$28E0			GOTO	L__judge_TMR__39
$00DE	$0816			MOVF	FARG__judge_TMR_+0, 0
$00DF	$0201			SUBWF	TMR0, 0
$00E0	$	L__judge_TMR__39:
$00E0	$1803			BTFSC	STATUS, C
$00E1	$28EC			GOTO	L__judge_TMR__15
;D-91_PIC16_color_changer_v-4.1.c,145 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$00E2	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-4.1.c,146 :: 		INTCON |= 0x80;        // interrupt => permitted
$00E3	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-4.1.c,153 :: 		_pulse(1);
$00E4	$3001			MOVLW	1
$00E5	$009A			MOVWF	FARG__pulse+0
$00E6	$3000			MOVLW	0
$00E7	$009B			MOVWF	FARG__pulse+1
$00E8	$2030			CALL	__pulse
;D-91_PIC16_color_changer_v-4.1.c,155 :: 		return false;                // return
$00E9	$01C0			CLRF	STACK_0
$00EA	$01C1			CLRF	STACK_0+1
$00EB	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,166 :: 		} else if (TMR0 > high) {
$00EC	$	L__judge_TMR__15:
$00EC	$3080			MOVLW	128
$00ED	$0619			XORWF	FARG__judge_TMR_+3, 0
$00EE	$00C0			MOVWF	STACK_0
$00EF	$3080			MOVLW	128
$00F0	$0240			SUBWF	STACK_0, 0
$00F1	$1D03			BTFSS	STATUS, Z
$00F2	$28F5			GOTO	L__judge_TMR__40
$00F3	$0801			MOVF	TMR0, 0
$00F4	$0218			SUBWF	FARG__judge_TMR_+2, 0
$00F5	$	L__judge_TMR__40:
$00F5	$1803			BTFSC	STATUS, C
$00F6	$2901			GOTO	L__judge_TMR__17
;D-91_PIC16_color_changer_v-4.1.c,168 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$00F7	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-4.1.c,169 :: 		INTCON |= 0x80;        // interrupt => permitted
$00F8	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-4.1.c,172 :: 		_pulse(2);
$00F9	$3002			MOVLW	2
$00FA	$009A			MOVWF	FARG__pulse+0
$00FB	$3000			MOVLW	0
$00FC	$009B			MOVWF	FARG__pulse+1
$00FD	$2030			CALL	__pulse
;D-91_PIC16_color_changer_v-4.1.c,174 :: 		return false;
$00FE	$01C0			CLRF	STACK_0
$00FF	$01C1			CLRF	STACK_0+1
$0100	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,176 :: 		}
$0101	$	L__judge_TMR__17:
$0101	$	L__judge_TMR__16:
;D-91_PIC16_color_changer_v-4.1.c,178 :: 		return true;
$0101	$3001			MOVLW	1
$0102	$00C0			MOVWF	STACK_0
$0103	$3000			MOVLW	0
$0104	$00C1			MOVWF	STACK_0+1
;D-91_PIC16_color_changer_v-4.1.c,180 :: 		}//int _judge_TMR_(int low, int high)
$0105	$0008			RETURN
$0106	$	__pulse_u_100:
;D-91_PIC16_color_changer_v-4.1.c,98 :: 		void _pulse_u_100(int num)
;D-91_PIC16_color_changer_v-4.1.c,102 :: 		for(i = 0; i < num; i++)
$0106	$1303			BCF	STATUS, RP1
$0107	$1283			BCF	STATUS, RP0
$0108	$0198			CLRF	_pulse_u_100_i_L0
$0109	$0199			CLRF	_pulse_u_100_i_L0+1
$010A	$	L__pulse_u_100_9:
$010A	$3080			MOVLW	128
$010B	$0619			XORWF	_pulse_u_100_i_L0+1, 0
$010C	$00C0			MOVWF	STACK_0
$010D	$3080			MOVLW	128
$010E	$0617			XORWF	FARG__pulse_u_100+1, 0
$010F	$0240			SUBWF	STACK_0, 0
$0110	$1D03			BTFSS	STATUS, Z
$0111	$2914			GOTO	L__pulse_u_100_37
$0112	$0816			MOVF	FARG__pulse_u_100+0, 0
$0113	$0218			SUBWF	_pulse_u_100_i_L0, 0
$0114	$	L__pulse_u_100_37:
$0114	$1803			BTFSC	STATUS, C
$0115	$2927			GOTO	L__pulse_u_100_10
;D-91_PIC16_color_changer_v-4.1.c,105 :: 		PORTA = 0x01; Delay_us(100);
$0116	$3001			MOVLW	1
$0117	$0085			MOVWF	PORTA
$0118	$30A6			MOVLW	166
$0119	$00CA			MOVWF	STACK_10
$011A	$0BCA			DECFSZ	STACK_10, F
$011B	$291A			GOTO	$-1
$011C	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,107 :: 		PORTA = 0x00; Delay_us(100);
$011D	$0185			CLRF	PORTA, 1
$011E	$30A6			MOVLW	166
$011F	$00CA			MOVWF	STACK_10
$0120	$0BCA			DECFSZ	STACK_10, F
$0121	$2920			GOTO	$-1
$0122	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,109 :: 		}
$0123	$	L__pulse_u_100_11:
;D-91_PIC16_color_changer_v-4.1.c,102 :: 		for(i = 0; i < num; i++)
$0123	$0A98			INCF	_pulse_u_100_i_L0, 1
$0124	$1903			BTFSC	STATUS, Z
$0125	$0A99			INCF	_pulse_u_100_i_L0+1, 1
;D-91_PIC16_color_changer_v-4.1.c,109 :: 		}
$0126	$290A			GOTO	L__pulse_u_100_9
$0127	$	L__pulse_u_100_10:
;D-91_PIC16_color_changer_v-4.1.c,111 :: 		}
$0127	$0008			RETURN
$0068	$	__read_Reader:
;D-91_PIC16_color_changer_v-4.1.c,372 :: 		_read_Reader() {
;D-91_PIC16_color_changer_v-4.1.c,379 :: 		RESET_TMR;
$0068	$1303			BCF	STATUS, RP1
$0069	$1283			BCF	STATUS, RP0
$006A	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-4.1.c,389 :: 		_while_PORTB_0x01(0);
$006B	$0196			CLRF	FARG__while_PORTB_0x01+0
$006C	$0197			CLRF	FARG__while_PORTB_0x01+1
$006D	$2148			CALL	__while_PORTB_0x01
;D-91_PIC16_color_changer_v-4.1.c,400 :: 		result = _judge_TMR_(156, 196);
$006E	$309C			MOVLW	156
$006F	$1303			BCF	STATUS, RP1
$0070	$1283			BCF	STATUS, RP0
$0071	$0096			MOVWF	FARG__judge_TMR_+0
$0072	$0197			CLRF	FARG__judge_TMR_+1
$0073	$30C4			MOVLW	196
$0074	$0098			MOVWF	FARG__judge_TMR_+2
$0075	$0199			CLRF	FARG__judge_TMR_+3
$0076	$20D5			CALL	__judge_TMR_
$0077	$0840			MOVF	STACK_0, 0
$0078	$008C			MOVWF	_result
;D-91_PIC16_color_changer_v-4.1.c,402 :: 		if (result == false) {
$0079	$0840			MOVF	STACK_0, 0
$007A	$3A00			XORLW	0
$007B	$1D03			BTFSS	STATUS, Z
$007C	$2880			GOTO	L__read_Reader_32
;D-91_PIC16_color_changer_v-4.1.c,406 :: 		return false;
$007D	$01C0			CLRF	STACK_0
$007E	$01C1			CLRF	STACK_0+1
$007F	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,408 :: 		}
$0080	$	L__read_Reader_32:
;D-91_PIC16_color_changer_v-4.1.c,420 :: 		RESET_TMR;
$0080	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-4.1.c,427 :: 		_while_PORTB_0x01(1);
$0081	$3001			MOVLW	1
$0082	$0096			MOVWF	FARG__while_PORTB_0x01+0
$0083	$3000			MOVLW	0
$0084	$0097			MOVWF	FARG__while_PORTB_0x01+1
$0085	$2148			CALL	__while_PORTB_0x01
;D-91_PIC16_color_changer_v-4.1.c,434 :: 		result = _judge_TMR_(68, 108);
$0086	$3044			MOVLW	68
$0087	$1303			BCF	STATUS, RP1
$0088	$1283			BCF	STATUS, RP0
$0089	$0096			MOVWF	FARG__judge_TMR_+0
$008A	$3000			MOVLW	0
$008B	$0097			MOVWF	FARG__judge_TMR_+1
$008C	$306C			MOVLW	108
$008D	$0098			MOVWF	FARG__judge_TMR_+2
$008E	$3000			MOVLW	0
$008F	$0099			MOVWF	FARG__judge_TMR_+3
$0090	$20D5			CALL	__judge_TMR_
$0091	$0840			MOVF	STACK_0, 0
$0092	$008C			MOVWF	_result
;D-91_PIC16_color_changer_v-4.1.c,436 :: 		if (result == false) {
$0093	$0840			MOVF	STACK_0, 0
$0094	$3A00			XORLW	0
$0095	$1D03			BTFSS	STATUS, Z
$0096	$289A			GOTO	L__read_Reader_33
;D-91_PIC16_color_changer_v-4.1.c,440 :: 		return false;
$0097	$01C0			CLRF	STACK_0
$0098	$01C1			CLRF	STACK_0+1
$0099	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,442 :: 		}
$009A	$	L__read_Reader_33:
;D-91_PIC16_color_changer_v-4.1.c,449 :: 		return true;
$009A	$3001			MOVLW	1
$009B	$00C0			MOVWF	STACK_0
$009C	$3000			MOVLW	0
$009D	$00C1			MOVWF	STACK_0+1
;D-91_PIC16_color_changer_v-4.1.c,451 :: 		}//_read_Reader
$009E	$0008			RETURN
$009F	$	__pulse_500u:
;D-91_PIC16_color_changer_v-4.1.c,62 :: 		void _pulse_500u(int num)
;D-91_PIC16_color_changer_v-4.1.c,66 :: 		for(i = 0; i < num; i++)
$009F	$1303			BCF	STATUS, RP1
$00A0	$1283			BCF	STATUS, RP0
$00A1	$0194			CLRF	_pulse_500u_i_L0
$00A2	$0195			CLRF	_pulse_500u_i_L0+1
$00A3	$	L__pulse_500u_3:
$00A3	$3080			MOVLW	128
$00A4	$0615			XORWF	_pulse_500u_i_L0+1, 0
$00A5	$00C0			MOVWF	STACK_0
$00A6	$3080			MOVLW	128
$00A7	$0613			XORWF	FARG__pulse_500u+1, 0
$00A8	$0240			SUBWF	STACK_0, 0
$00A9	$1D03			BTFSS	STATUS, Z
$00AA	$28AD			GOTO	L__pulse_500u_35
$00AB	$0812			MOVF	FARG__pulse_500u+0, 0
$00AC	$0214			SUBWF	_pulse_500u_i_L0, 0
$00AD	$	L__pulse_500u_35:
$00AD	$1803			BTFSC	STATUS, C
$00AE	$28D4			GOTO	L__pulse_500u_4
;D-91_PIC16_color_changer_v-4.1.c,69 :: 		PORTA = 0x01; Delay_us(500);
$00AF	$3001			MOVLW	1
$00B0	$0085			MOVWF	PORTA
$00B1	$3004			MOVLW	4
$00B2	$00CB			MOVWF	STACK_11
$00B3	$30FF			MOVLW	255
$00B4	$00CA			MOVWF	STACK_10
$00B5	$0BCB			DECFSZ	STACK_11, F
$00B6	$28B8			GOTO	$+2
$00B7	$28BB			GOTO	$+4
$00B8	$0BCA			DECFSZ	STACK_10, F
$00B9	$28B8			GOTO	$-1
$00BA	$28B5			GOTO	$-5
$00BB	$303B			MOVLW	59
$00BC	$00CA			MOVWF	STACK_10
$00BD	$0BCA			DECFSZ	STACK_10, F
$00BE	$28BD			GOTO	$-1
$00BF	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,71 :: 		PORTA = 0x00; Delay_us(500);
$00C0	$0185			CLRF	PORTA, 1
$00C1	$3004			MOVLW	4
$00C2	$00CB			MOVWF	STACK_11
$00C3	$30FF			MOVLW	255
$00C4	$00CA			MOVWF	STACK_10
$00C5	$0BCB			DECFSZ	STACK_11, F
$00C6	$28C8			GOTO	$+2
$00C7	$28CB			GOTO	$+4
$00C8	$0BCA			DECFSZ	STACK_10, F
$00C9	$28C8			GOTO	$-1
$00CA	$28C5			GOTO	$-5
$00CB	$303B			MOVLW	59
$00CC	$00CA			MOVWF	STACK_10
$00CD	$0BCA			DECFSZ	STACK_10, F
$00CE	$28CD			GOTO	$-1
$00CF	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,73 :: 		}
$00D0	$	L__pulse_500u_5:
;D-91_PIC16_color_changer_v-4.1.c,66 :: 		for(i = 0; i < num; i++)
$00D0	$0A94			INCF	_pulse_500u_i_L0, 1
$00D1	$1903			BTFSC	STATUS, Z
$00D2	$0A95			INCF	_pulse_500u_i_L0+1, 1
;D-91_PIC16_color_changer_v-4.1.c,73 :: 		}
$00D3	$28A3			GOTO	L__pulse_500u_3
$00D4	$	L__pulse_500u_4:
;D-91_PIC16_color_changer_v-4.1.c,75 :: 		}
$00D4	$0008			RETURN
$0161	$	__response:
;D-91_PIC16_color_changer_v-4.1.c,182 :: 		void _response(void)
;D-91_PIC16_color_changer_v-4.1.c,185 :: 		_pulse_u_100(5);
$0161	$3005			MOVLW	5
$0162	$1303			BCF	STATUS, RP1
$0163	$1283			BCF	STATUS, RP0
$0164	$0096			MOVWF	FARG__pulse_u_100+0
$0165	$3000			MOVLW	0
$0166	$0097			MOVWF	FARG__pulse_u_100+1
$0167	$2106			CALL	__pulse_u_100
;D-91_PIC16_color_changer_v-4.1.c,229 :: 		}
$0168	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$0090			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008F			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0091			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$009E			MOVWF	STSAVED_0
;D-91_PIC16_color_changer_v-4.1.c,282 :: 		void interrupt(void)
;D-91_PIC16_color_changer_v-4.1.c,293 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-4.1.c,294 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-4.1.c,295 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-4.1.c,302 :: 		result = _read_Reader();
$0015	$2068			CALL	__read_Reader
$0016	$0840			MOVF	STACK_0, 0
$0017	$008C			MOVWF	_result
;D-91_PIC16_color_changer_v-4.1.c,309 :: 		if (result == false) {
$0018	$0840			MOVF	STACK_0, 0
$0019	$3A00			XORLW	0
$001A	$1D03			BTFSS	STATUS, Z
$001B	$2822			GOTO	L_interrupt_29
;D-91_PIC16_color_changer_v-4.1.c,311 :: 		_pulse_500u(3);
$001C	$3003			MOVLW	3
$001D	$0092			MOVWF	FARG__pulse_500u+0
$001E	$3000			MOVLW	0
$001F	$0093			MOVWF	FARG__pulse_500u+1
$0020	$209F			CALL	__pulse_500u
;D-91_PIC16_color_changer_v-4.1.c,313 :: 		return;
$0021	$2825			GOTO	L_Interrupt_end
;D-91_PIC16_color_changer_v-4.1.c,315 :: 		}
$0022	$	L_interrupt_29:
;D-91_PIC16_color_changer_v-4.1.c,322 :: 		_response();
$0022	$2161			CALL	__response
;D-91_PIC16_color_changer_v-4.1.c,330 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0023	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-4.1.c,331 :: 		INTCON |= 0x80;
$0024	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-4.1.c,333 :: 		}//void interrupt(void)
$0025	$	L_Interrupt_end:
$0025	$081E			MOVF	STSAVED_0, 0
$0026	$00C0			MOVWF	STACK_0
$0027	$0811			MOVF	?savePCLATH, 0
$0028	$008A			MOVWF	PCLATH
$0029	$080F			MOVF	?saveFSR, 0
$002A	$0084			MOVWF	FSR
$002B	$0E10			SWAPF	?saveSTATUS, 0
$002C	$0083			MOVWF	STATUS
$002D	$0ECF			SWAPF	STACK_15, 1
$002E	$0E4F			SWAPF	STACK_15, 0
$002F	$0009			RETFIE
$0169	$	GlobalIniD-91_PIC16_color_changer_v-4:
$0169	$3001			MOVLW	1
$016A	$1303			BCF	STATUS, RP1
$016B	$1283			BCF	STATUS, RP0
$016C	$008D			MOVWF	_LED_FLAG+0
$016D	$3008			MOVLW	8
$016E	$008E			MOVWF	_bit_len+0
$016F	$0008			RETURN
$0128	$	_main:
;D-91_PIC16_color_changer_v-4.1.c,336 :: 		void main(void)
;D-91_PIC16_color_changer_v-4.1.c,340 :: 		TRISA     = 0x00;
$0128	$1303			BCF	STATUS, RP1
$0129	$1683			BSF	STATUS, RP0
$012A	$0185			CLRF	TRISA, 1
;D-91_PIC16_color_changer_v-4.1.c,341 :: 		PORTA     = 0x00;		//0000 0010
$012B	$1283			BCF	STATUS, RP0
$012C	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-4.1.c,343 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$012D	$30FF			MOVLW	255
$012E	$1683			BSF	STATUS, RP0
$012F	$0086			MOVWF	TRISB
;D-91_PIC16_color_changer_v-4.1.c,345 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$0130	$307F			MOVLW	127
$0131	$0501			ANDWF	OPTION_REG, 0
$0132	$00C0			MOVWF	STACK_0
$0133	$0840			MOVF	STACK_0, 0
$0134	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,346 :: 		OPTION_REG &= 0xBF;	// INT interrupt => by 5V ~> 0V
$0135	$30BF			MOVLW	191
$0136	$05C0			ANDWF	STACK_0, 1
$0137	$0840			MOVF	STACK_0, 0
$0138	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,348 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$0139	$30DF			MOVLW	223
$013A	$05C0			ANDWF	STACK_0, 1
$013B	$0840			MOVF	STACK_0, 0
$013C	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,349 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$013D	$30F0			MOVLW	240
$013E	$05C0			ANDWF	STACK_0, 1
$013F	$0840			MOVF	STACK_0, 0
$0140	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,350 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$0141	$3007			MOVLW	7
$0142	$0440			IORWF	STACK_0, 0
$0143	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,358 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0144	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-4.1.c,359 :: 		INTCON |= 0x80;
$0145	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-4.1.c,361 :: 		while(1)
$0146	$	L_main_30:
$0146	$2946			GOTO	L_main_30
;D-91_PIC16_color_changer_v-4.1.c,369 :: 		}//void main(void)
$0147	$2947			GOTO	$
