;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/09/07 13:24:42
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$29A3			GOTO	_main
$0081	$	__pulse:
;D-91_PIC16_color_changer_v-4.1.c,59 :: 		void _pulse(int num)
;D-91_PIC16_color_changer_v-4.1.c,63 :: 		for(i = 0; i < num; i++)
$0081	$1303			BCF	STATUS, RP1
$0082	$1283			BCF	STATUS, RP0
$0083	$019A			CLRF	_pulse_i_L0
$0084	$019B			CLRF	_pulse_i_L0+1
$0085	$	L__pulse_0:
$0085	$3080			MOVLW	128
$0086	$061B			XORWF	_pulse_i_L0+1, 0
$0087	$00C0			MOVWF	STACK_0
$0088	$3080			MOVLW	128
$0089	$0619			XORWF	FARG__pulse+1, 0
$008A	$0240			SUBWF	STACK_0, 0
$008B	$1D03			BTFSS	STATUS, Z
$008C	$288F			GOTO	L__pulse_48
$008D	$0818			MOVF	FARG__pulse+0, 0
$008E	$021A			SUBWF	_pulse_i_L0, 0
$008F	$	L__pulse_48:
$008F	$1803			BTFSC	STATUS, C
$0090	$28B8			GOTO	L__pulse_1
;D-91_PIC16_color_changer_v-4.1.c,66 :: 		PORTA = 0x01; Delay_ms(1);
$0091	$3001			MOVLW	1
$0092	$0085			MOVWF	PORTA
$0093	$3007			MOVLW	7
$0094	$00CB			MOVWF	STACK_11
$0095	$30FF			MOVLW	255
$0096	$00CA			MOVWF	STACK_10
$0097	$0BCB			DECFSZ	STACK_11, F
$0098	$289A			GOTO	$+2
$0099	$289D			GOTO	$+4
$009A	$0BCA			DECFSZ	STACK_10, F
$009B	$289A			GOTO	$-1
$009C	$2897			GOTO	$-5
$009D	$3078			MOVLW	120
$009E	$00CA			MOVWF	STACK_10
$009F	$0BCA			DECFSZ	STACK_10, F
$00A0	$289F			GOTO	$-1
$00A1	$0000			NOP
$00A2	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,68 :: 		PORTA = 0x00; Delay_ms(1);
$00A3	$0185			CLRF	PORTA, 1
$00A4	$3007			MOVLW	7
$00A5	$00CB			MOVWF	STACK_11
$00A6	$30FF			MOVLW	255
$00A7	$00CA			MOVWF	STACK_10
$00A8	$0BCB			DECFSZ	STACK_11, F
$00A9	$28AB			GOTO	$+2
$00AA	$28AE			GOTO	$+4
$00AB	$0BCA			DECFSZ	STACK_10, F
$00AC	$28AB			GOTO	$-1
$00AD	$28A8			GOTO	$-5
$00AE	$3078			MOVLW	120
$00AF	$00CA			MOVWF	STACK_10
$00B0	$0BCA			DECFSZ	STACK_10, F
$00B1	$28B0			GOTO	$-1
$00B2	$0000			NOP
$00B3	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,70 :: 		}
$00B4	$	L__pulse_2:
;D-91_PIC16_color_changer_v-4.1.c,63 :: 		for(i = 0; i < num; i++)
$00B4	$0A9A			INCF	_pulse_i_L0, 1
$00B5	$1903			BTFSC	STATUS, Z
$00B6	$0A9B			INCF	_pulse_i_L0+1, 1
;D-91_PIC16_color_changer_v-4.1.c,70 :: 		}
$00B7	$2885			GOTO	L__pulse_0
$00B8	$	L__pulse_1:
;D-91_PIC16_color_changer_v-4.1.c,72 :: 		}
$00B8	$0008			RETURN
$0143	$	__pulse_u_50:
;D-91_PIC16_color_changer_v-4.1.c,126 :: 		_pulse_u_50(int num)
;D-91_PIC16_color_changer_v-4.1.c,130 :: 		for(i = 0; i < num; i++)
$0143	$1303			BCF	STATUS, RP1
$0144	$1283			BCF	STATUS, RP0
$0145	$019A			CLRF	_pulse_u_50_i_L0
$0146	$019B			CLRF	_pulse_u_50_i_L0+1
$0147	$	L__pulse_u_50_12:
$0147	$3080			MOVLW	128
$0148	$061B			XORWF	_pulse_u_50_i_L0+1, 0
$0149	$00C0			MOVWF	STACK_0
$014A	$3080			MOVLW	128
$014B	$0619			XORWF	FARG__pulse_u_50+1, 0
$014C	$0240			SUBWF	STACK_0, 0
$014D	$1D03			BTFSS	STATUS, Z
$014E	$2951			GOTO	L__pulse_u_50_52
$014F	$0818			MOVF	FARG__pulse_u_50+0, 0
$0150	$021A			SUBWF	_pulse_u_50_i_L0, 0
$0151	$	L__pulse_u_50_52:
$0151	$1803			BTFSC	STATUS, C
$0152	$2962			GOTO	L__pulse_u_50_13
;D-91_PIC16_color_changer_v-4.1.c,133 :: 		PORTA = 0x01; Delay_us(50);
$0153	$3001			MOVLW	1
$0154	$0085			MOVWF	PORTA
$0155	$3053			MOVLW	83
$0156	$00CA			MOVWF	STACK_10
$0157	$0BCA			DECFSZ	STACK_10, F
$0158	$2957			GOTO	$-1
;D-91_PIC16_color_changer_v-4.1.c,135 :: 		PORTA = 0x00; Delay_us(50);
$0159	$0185			CLRF	PORTA, 1
$015A	$3053			MOVLW	83
$015B	$00CA			MOVWF	STACK_10
$015C	$0BCA			DECFSZ	STACK_10, F
$015D	$295C			GOTO	$-1
;D-91_PIC16_color_changer_v-4.1.c,137 :: 		}
$015E	$	L__pulse_u_50_14:
;D-91_PIC16_color_changer_v-4.1.c,130 :: 		for(i = 0; i < num; i++)
$015E	$0A9A			INCF	_pulse_u_50_i_L0, 1
$015F	$1903			BTFSC	STATUS, Z
$0160	$0A9B			INCF	_pulse_u_50_i_L0+1, 1
;D-91_PIC16_color_changer_v-4.1.c,137 :: 		}
$0161	$2947			GOTO	L__pulse_u_50_12
$0162	$	L__pulse_u_50_13:
;D-91_PIC16_color_changer_v-4.1.c,139 :: 		}//_pulse_u_50
$0162	$0008			RETURN
$0182	$	__while_PORTB_0x01:
;D-91_PIC16_color_changer_v-4.1.c,141 :: 		void _while_PORTB_0x01(int num)
;D-91_PIC16_color_changer_v-4.1.c,144 :: 		while((PORTB & 0x01) == num) //---------------------
$0182	$	L__while_PORTB_0x01_15:
$0182	$3001			MOVLW	1
$0183	$1303			BCF	STATUS, RP1
$0184	$1283			BCF	STATUS, RP0
$0185	$0506			ANDWF	PORTB, 0
$0186	$00C1			MOVWF	STACK_1
$0187	$3000			MOVLW	0
$0188	$0615			XORWF	FARG__while_PORTB_0x01+1, 0
$0189	$1D03			BTFSS	STATUS, Z
$018A	$298D			GOTO	L__while_PORTB_0x01_53
$018B	$0814			MOVF	FARG__while_PORTB_0x01+0, 0
$018C	$0641			XORWF	STACK_1, 0
$018D	$	L__while_PORTB_0x01_53:
$018D	$1D03			BTFSS	STATUS, Z
$018E	$299A			GOTO	L__while_PORTB_0x01_16
;D-91_PIC16_color_changer_v-4.1.c,147 :: 		if(TMR0 == 255)
$018F	$0801			MOVF	TMR0, 0
$0190	$3AFF			XORLW	255
$0191	$1D03			BTFSS	STATUS, Z
$0192	$2999			GOTO	L__while_PORTB_0x01_17
;D-91_PIC16_color_changer_v-4.1.c,151 :: 		_pulse(3);
$0193	$3003			MOVLW	3
$0194	$0098			MOVWF	FARG__pulse+0
$0195	$3000			MOVLW	0
$0196	$0099			MOVWF	FARG__pulse+1
$0197	$2081			CALL	__pulse
;D-91_PIC16_color_changer_v-4.1.c,154 :: 		return;
$0198	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,156 :: 		}
$0199	$	L__while_PORTB_0x01_17:
;D-91_PIC16_color_changer_v-4.1.c,158 :: 		}//while((PORTB & 0x01) == 0)
$0199	$2982			GOTO	L__while_PORTB_0x01_15
$019A	$	L__while_PORTB_0x01_16:
;D-91_PIC16_color_changer_v-4.1.c,160 :: 		return;
;D-91_PIC16_color_changer_v-4.1.c,162 :: 		}
$019A	$0008			RETURN
$00F0	$	__judge_TMR_:
;D-91_PIC16_color_changer_v-4.1.c,168 :: 		int _judge_TMR_(int low, int high) {
;D-91_PIC16_color_changer_v-4.1.c,170 :: 		if(TMR0 < low) //---------------------
$00F0	$3080			MOVLW	128
$00F1	$1303			BCF	STATUS, RP1
$00F2	$1283			BCF	STATUS, RP0
$00F3	$00C0			MOVWF	STACK_0
$00F4	$3080			MOVLW	128
$00F5	$0615			XORWF	FARG__judge_TMR_+1, 0
$00F6	$0240			SUBWF	STACK_0, 0
$00F7	$1D03			BTFSS	STATUS, Z
$00F8	$28FB			GOTO	L__judge_TMR__54
$00F9	$0814			MOVF	FARG__judge_TMR_+0, 0
$00FA	$0201			SUBWF	TMR0, 0
$00FB	$	L__judge_TMR__54:
$00FB	$1803			BTFSC	STATUS, C
$00FC	$2907			GOTO	L__judge_TMR__18
;D-91_PIC16_color_changer_v-4.1.c,173 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$00FD	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-4.1.c,174 :: 		INTCON |= 0x80;        // interrupt => permitted
$00FE	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-4.1.c,181 :: 		_pulse_u_50(3);
$00FF	$3003			MOVLW	3
$0100	$0098			MOVWF	FARG__pulse_u_50+0
$0101	$3000			MOVLW	0
$0102	$0099			MOVWF	FARG__pulse_u_50+1
$0103	$2143			CALL	__pulse_u_50
;D-91_PIC16_color_changer_v-4.1.c,183 :: 		return false;                // return
$0104	$01C0			CLRF	STACK_0
$0105	$01C1			CLRF	STACK_0+1
$0106	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,194 :: 		} else if (TMR0 > high) {
$0107	$	L__judge_TMR__18:
$0107	$3080			MOVLW	128
$0108	$0617			XORWF	FARG__judge_TMR_+3, 0
$0109	$00C0			MOVWF	STACK_0
$010A	$3080			MOVLW	128
$010B	$0240			SUBWF	STACK_0, 0
$010C	$1D03			BTFSS	STATUS, Z
$010D	$2910			GOTO	L__judge_TMR__55
$010E	$0801			MOVF	TMR0, 0
$010F	$0216			SUBWF	FARG__judge_TMR_+2, 0
$0110	$	L__judge_TMR__55:
$0110	$1803			BTFSC	STATUS, C
$0111	$291C			GOTO	L__judge_TMR__20
;D-91_PIC16_color_changer_v-4.1.c,196 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0112	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-4.1.c,197 :: 		INTCON |= 0x80;        // interrupt => permitted
$0113	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-4.1.c,200 :: 		_pulse_u_50(2);
$0114	$3002			MOVLW	2
$0115	$0098			MOVWF	FARG__pulse_u_50+0
$0116	$3000			MOVLW	0
$0117	$0099			MOVWF	FARG__pulse_u_50+1
$0118	$2143			CALL	__pulse_u_50
;D-91_PIC16_color_changer_v-4.1.c,203 :: 		return false;
$0119	$01C0			CLRF	STACK_0
$011A	$01C1			CLRF	STACK_0+1
$011B	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,205 :: 		}
$011C	$	L__judge_TMR__20:
$011C	$	L__judge_TMR__19:
;D-91_PIC16_color_changer_v-4.1.c,207 :: 		return true;
$011C	$3001			MOVLW	1
$011D	$00C0			MOVWF	STACK_0
$011E	$3000			MOVLW	0
$011F	$00C1			MOVWF	STACK_0+1
;D-91_PIC16_color_changer_v-4.1.c,209 :: 		}//int _judge_TMR_(int low, int high)
$0120	$0008			RETURN
$0121	$	__pulse_u_100:
;D-91_PIC16_color_changer_v-4.1.c,110 :: 		void _pulse_u_100(int num)
;D-91_PIC16_color_changer_v-4.1.c,114 :: 		for(i = 0; i < num; i++)
$0121	$1303			BCF	STATUS, RP1
$0122	$1283			BCF	STATUS, RP0
$0123	$0196			CLRF	_pulse_u_100_i_L0
$0124	$0197			CLRF	_pulse_u_100_i_L0+1
$0125	$	L__pulse_u_100_9:
$0125	$3080			MOVLW	128
$0126	$0617			XORWF	_pulse_u_100_i_L0+1, 0
$0127	$00C0			MOVWF	STACK_0
$0128	$3080			MOVLW	128
$0129	$0615			XORWF	FARG__pulse_u_100+1, 0
$012A	$0240			SUBWF	STACK_0, 0
$012B	$1D03			BTFSS	STATUS, Z
$012C	$292F			GOTO	L__pulse_u_100_51
$012D	$0814			MOVF	FARG__pulse_u_100+0, 0
$012E	$0216			SUBWF	_pulse_u_100_i_L0, 0
$012F	$	L__pulse_u_100_51:
$012F	$1803			BTFSC	STATUS, C
$0130	$2942			GOTO	L__pulse_u_100_10
;D-91_PIC16_color_changer_v-4.1.c,117 :: 		PORTA = 0x01; Delay_us(100);
$0131	$3001			MOVLW	1
$0132	$0085			MOVWF	PORTA
$0133	$30A6			MOVLW	166
$0134	$00CA			MOVWF	STACK_10
$0135	$0BCA			DECFSZ	STACK_10, F
$0136	$2935			GOTO	$-1
$0137	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,119 :: 		PORTA = 0x00; Delay_us(100);
$0138	$0185			CLRF	PORTA, 1
$0139	$30A6			MOVLW	166
$013A	$00CA			MOVWF	STACK_10
$013B	$0BCA			DECFSZ	STACK_10, F
$013C	$293B			GOTO	$-1
$013D	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,121 :: 		}
$013E	$	L__pulse_u_100_11:
;D-91_PIC16_color_changer_v-4.1.c,114 :: 		for(i = 0; i < num; i++)
$013E	$0A96			INCF	_pulse_u_100_i_L0, 1
$013F	$1903			BTFSC	STATUS, Z
$0140	$0A97			INCF	_pulse_u_100_i_L0+1, 1
;D-91_PIC16_color_changer_v-4.1.c,121 :: 		}
$0141	$2925			GOTO	L__pulse_u_100_9
$0142	$	L__pulse_u_100_10:
;D-91_PIC16_color_changer_v-4.1.c,123 :: 		}
$0142	$0008			RETURN
$00B9	$	__read_Reader:
;D-91_PIC16_color_changer_v-4.1.c,435 :: 		_read_Reader() {
;D-91_PIC16_color_changer_v-4.1.c,442 :: 		RESET_TMR;
$00B9	$1303			BCF	STATUS, RP1
$00BA	$1283			BCF	STATUS, RP0
$00BB	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-4.1.c,452 :: 		_while_PORTB_0x01(0);
$00BC	$0194			CLRF	FARG__while_PORTB_0x01+0
$00BD	$0195			CLRF	FARG__while_PORTB_0x01+1
$00BE	$2182			CALL	__while_PORTB_0x01
;D-91_PIC16_color_changer_v-4.1.c,463 :: 		result = _judge_TMR_(156, 196);
$00BF	$309C			MOVLW	156
$00C0	$1303			BCF	STATUS, RP1
$00C1	$1283			BCF	STATUS, RP0
$00C2	$0094			MOVWF	FARG__judge_TMR_+0
$00C3	$0195			CLRF	FARG__judge_TMR_+1
$00C4	$30C4			MOVLW	196
$00C5	$0096			MOVWF	FARG__judge_TMR_+2
$00C6	$0197			CLRF	FARG__judge_TMR_+3
$00C7	$20F0			CALL	__judge_TMR_
$00C8	$0840			MOVF	STACK_0, 0
$00C9	$008C			MOVWF	_result
;D-91_PIC16_color_changer_v-4.1.c,465 :: 		if (result == false) {
$00CA	$0840			MOVF	STACK_0, 0
$00CB	$3A00			XORLW	0
$00CC	$1D03			BTFSS	STATUS, Z
$00CD	$28D1			GOTO	L__read_Reader_35
;D-91_PIC16_color_changer_v-4.1.c,469 :: 		return false;
$00CE	$01C0			CLRF	STACK_0
$00CF	$01C1			CLRF	STACK_0+1
$00D0	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,471 :: 		}
$00D1	$	L__read_Reader_35:
;D-91_PIC16_color_changer_v-4.1.c,483 :: 		RESET_TMR;
$00D1	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-4.1.c,490 :: 		_while_PORTB_0x01(1);
$00D2	$3001			MOVLW	1
$00D3	$0094			MOVWF	FARG__while_PORTB_0x01+0
$00D4	$3000			MOVLW	0
$00D5	$0095			MOVWF	FARG__while_PORTB_0x01+1
$00D6	$2182			CALL	__while_PORTB_0x01
;D-91_PIC16_color_changer_v-4.1.c,497 :: 		result = _judge_TMR_(68, 108);
$00D7	$3044			MOVLW	68
$00D8	$1303			BCF	STATUS, RP1
$00D9	$1283			BCF	STATUS, RP0
$00DA	$0094			MOVWF	FARG__judge_TMR_+0
$00DB	$3000			MOVLW	0
$00DC	$0095			MOVWF	FARG__judge_TMR_+1
$00DD	$306C			MOVLW	108
$00DE	$0096			MOVWF	FARG__judge_TMR_+2
$00DF	$3000			MOVLW	0
$00E0	$0097			MOVWF	FARG__judge_TMR_+3
$00E1	$20F0			CALL	__judge_TMR_
$00E2	$0840			MOVF	STACK_0, 0
$00E3	$008C			MOVWF	_result
;D-91_PIC16_color_changer_v-4.1.c,499 :: 		if (result == false) {
$00E4	$0840			MOVF	STACK_0, 0
$00E5	$3A00			XORLW	0
$00E6	$1D03			BTFSS	STATUS, Z
$00E7	$28EB			GOTO	L__read_Reader_36
;D-91_PIC16_color_changer_v-4.1.c,503 :: 		return false;
$00E8	$01C0			CLRF	STACK_0
$00E9	$01C1			CLRF	STACK_0+1
$00EA	$0008			RETURN
;D-91_PIC16_color_changer_v-4.1.c,505 :: 		}
$00EB	$	L__read_Reader_36:
;D-91_PIC16_color_changer_v-4.1.c,512 :: 		return true;
$00EB	$3001			MOVLW	1
$00EC	$00C0			MOVWF	STACK_0
$00ED	$3000			MOVLW	0
$00EE	$00C1			MOVWF	STACK_0+1
;D-91_PIC16_color_changer_v-4.1.c,514 :: 		}//_read_Reader
$00EF	$0008			RETURN
$003D	$	__read_Custom:
;D-91_PIC16_color_changer_v-4.1.c,517 :: 		_read_Custom() {
;D-91_PIC16_color_changer_v-4.1.c,519 :: 		custom_code_a = 0x00;
$003D	$1303			BCF	STATUS, RP1
$003E	$1283			BCF	STATUS, RP0
$003F	$018D			CLRF	_custom_code_a, 1
;D-91_PIC16_color_changer_v-4.1.c,523 :: 		for(i = 0; i < bit_len; i++)
$0040	$018E			CLRF	_i, 1
$0041	$	L__read_Custom_37:
$0041	$080F			MOVF	_bit_len, 0
$0042	$020E			SUBWF	_i, 0
$0043	$1803			BTFSC	STATUS, C
$0044	$2880			GOTO	L__read_Custom_38
;D-91_PIC16_color_changer_v-4.1.c,525 :: 		RESET_TMR;
$0045	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-4.1.c,527 :: 		while((PORTB & 0x01) == 0)
$0046	$	L__read_Custom_40:
$0046	$3001			MOVLW	1
$0047	$0506			ANDWF	PORTB, 0
$0048	$00C1			MOVWF	STACK_1
$0049	$0841			MOVF	STACK_1, 0
$004A	$3A00			XORLW	0
$004B	$1D03			BTFSS	STATUS, Z
$004C	$2852			GOTO	L__read_Custom_41
;D-91_PIC16_color_changer_v-4.1.c,530 :: 		TIME_OUT;
$004D	$0801			MOVF	TMR0, 0
$004E	$3AFF			XORLW	255
$004F	$1903			BTFSC	STATUS, Z
$0050	$2852			GOTO	L__read_Custom_41
$0051	$	L__read_Custom_42:
;D-91_PIC16_color_changer_v-4.1.c,532 :: 		}
$0051	$2846			GOTO	L__read_Custom_40
$0052	$	L__read_Custom_41:
;D-91_PIC16_color_changer_v-4.1.c,534 :: 		while((PORTB & 0x01) == 1)
$0052	$	L__read_Custom_43:
$0052	$3001			MOVLW	1
$0053	$0506			ANDWF	PORTB, 0
$0054	$00C1			MOVWF	STACK_1
$0055	$0841			MOVF	STACK_1, 0
$0056	$3A01			XORLW	1
$0057	$1D03			BTFSS	STATUS, Z
$0058	$285E			GOTO	L__read_Custom_44
;D-91_PIC16_color_changer_v-4.1.c,537 :: 		TIME_OUT;
$0059	$0801			MOVF	TMR0, 0
$005A	$3AFF			XORLW	255
$005B	$1903			BTFSC	STATUS, Z
$005C	$285E			GOTO	L__read_Custom_44
$005D	$	L__read_Custom_45:
;D-91_PIC16_color_changer_v-4.1.c,539 :: 		}
$005D	$2852			GOTO	L__read_Custom_43
$005E	$	L__read_Custom_44:
;D-91_PIC16_color_changer_v-4.1.c,541 :: 		if (TMR0 < 33)
$005E	$3021			MOVLW	33
$005F	$0201			SUBWF	TMR0, 0
$0060	$1803			BTFSC	STATUS, C
$0061	$2871			GOTO	L__read_Custom_46
;D-91_PIC16_color_changer_v-4.1.c,544 :: 		custom_code_a &= ~(0x01 << i);
$0062	$080E			MOVF	_i, 0
$0063	$00C1			MOVWF	STACK_1
$0064	$3001			MOVLW	1
$0065	$00C0			MOVWF	STACK_0
$0066	$0841			MOVF	STACK_1, 0
$0067	$	L__read_Custom_60:
$0067	$1903			BTFSC	STATUS, Z
$0068	$286D			GOTO	L__read_Custom_61
$0069	$0DC0			RLF	STACK_0, 1
$006A	$1040			BCF	STACK_0, 0
$006B	$3FFF			ADDLW	255
$006C	$2867			GOTO	L__read_Custom_60
$006D	$	L__read_Custom_61:
$006D	$09C0			COMF	STACK_0, F
$006E	$0840			MOVF	STACK_0, 0
$006F	$058D			ANDWF	_custom_code_a, 1
;D-91_PIC16_color_changer_v-4.1.c,546 :: 		}
$0070	$287E			GOTO	L__read_Custom_47
$0071	$	L__read_Custom_46:
;D-91_PIC16_color_changer_v-4.1.c,550 :: 		custom_code_a |= (0x01 << i);
$0071	$080E			MOVF	_i, 0
$0072	$00C1			MOVWF	STACK_1
$0073	$3001			MOVLW	1
$0074	$00C0			MOVWF	STACK_0
$0075	$0841			MOVF	STACK_1, 0
$0076	$	L__read_Custom_62:
$0076	$1903			BTFSC	STATUS, Z
$0077	$287C			GOTO	L__read_Custom_63
$0078	$0DC0			RLF	STACK_0, 1
$0079	$1040			BCF	STACK_0, 0
$007A	$3FFF			ADDLW	255
$007B	$2876			GOTO	L__read_Custom_62
$007C	$	L__read_Custom_63:
$007C	$0840			MOVF	STACK_0, 0
$007D	$048D			IORWF	_custom_code_a, 1
;D-91_PIC16_color_changer_v-4.1.c,552 :: 		}//if (TMR0 < 33)
$007E	$	L__read_Custom_47:
;D-91_PIC16_color_changer_v-4.1.c,554 :: 		}//for(i = 0; i < bit_len; i++)
$007E	$	L__read_Custom_39:
;D-91_PIC16_color_changer_v-4.1.c,523 :: 		for(i = 0; i < bit_len; i++)
$007E	$0A8E			INCF	_i, 1
;D-91_PIC16_color_changer_v-4.1.c,554 :: 		}//for(i = 0; i < bit_len; i++)
$007F	$2841			GOTO	L__read_Custom_37
$0080	$	L__read_Custom_38:
;D-91_PIC16_color_changer_v-4.1.c,557 :: 		}//_read_Custom
$0080	$0008			RETURN
$019B	$	__response:
;D-91_PIC16_color_changer_v-4.1.c,211 :: 		void _response(void)
;D-91_PIC16_color_changer_v-4.1.c,214 :: 		_pulse_u_100(5);
$019B	$3005			MOVLW	5
$019C	$1303			BCF	STATUS, RP1
$019D	$1283			BCF	STATUS, RP0
$019E	$0094			MOVWF	FARG__pulse_u_100+0
$019F	$3000			MOVLW	0
$01A0	$0095			MOVWF	FARG__pulse_u_100+1
$01A1	$2121			CALL	__pulse_u_100
;D-91_PIC16_color_changer_v-4.1.c,258 :: 		}
$01A2	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$0092			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$0091			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0093			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$009C			MOVWF	STSAVED_0
;D-91_PIC16_color_changer_v-4.1.c,311 :: 		void interrupt(void)
;D-91_PIC16_color_changer_v-4.1.c,322 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-4.1.c,323 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-4.1.c,324 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-4.1.c,331 :: 		PORTA = 0x00;
$0015	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-4.1.c,338 :: 		result = _read_Reader();
$0016	$20B9			CALL	__read_Reader
$0017	$0840			MOVF	STACK_0, 0
$0018	$008C			MOVWF	_result
;D-91_PIC16_color_changer_v-4.1.c,345 :: 		if (result == false) {
$0019	$0840			MOVF	STACK_0, 0
$001A	$3A00			XORLW	0
$001B	$1D03			BTFSS	STATUS, Z
$001C	$281E			GOTO	L_interrupt_32
;D-91_PIC16_color_changer_v-4.1.c,349 :: 		return;
$001D	$2832			GOTO	L_Interrupt_end
;D-91_PIC16_color_changer_v-4.1.c,351 :: 		}
$001E	$	L_interrupt_32:
;D-91_PIC16_color_changer_v-4.1.c,358 :: 		_read_Custom();
$001E	$203D			CALL	__read_Custom
;D-91_PIC16_color_changer_v-4.1.c,375 :: 		_response();
$001F	$219B			CALL	__response
;D-91_PIC16_color_changer_v-4.1.c,382 :: 		Delay_ms(1);
$0020	$3007			MOVLW	7
$0021	$00CB			MOVWF	STACK_11
$0022	$30FF			MOVLW	255
$0023	$00CA			MOVWF	STACK_10
$0024	$0BCB			DECFSZ	STACK_11, F
$0025	$2827			GOTO	$+2
$0026	$282A			GOTO	$+4
$0027	$0BCA			DECFSZ	STACK_10, F
$0028	$2827			GOTO	$-1
$0029	$2824			GOTO	$-5
$002A	$3078			MOVLW	120
$002B	$00CA			MOVWF	STACK_10
$002C	$0BCA			DECFSZ	STACK_10, F
$002D	$282C			GOTO	$-1
$002E	$0000			NOP
$002F	$0000			NOP
;D-91_PIC16_color_changer_v-4.1.c,390 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0030	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-4.1.c,391 :: 		INTCON |= 0x80;
$0031	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-4.1.c,393 :: 		}//void interrupt(void)
$0032	$	L_Interrupt_end:
$0032	$081C			MOVF	STSAVED_0, 0
$0033	$00C0			MOVWF	STACK_0
$0034	$0813			MOVF	?savePCLATH, 0
$0035	$008A			MOVWF	PCLATH
$0036	$0811			MOVF	?saveFSR, 0
$0037	$0084			MOVWF	FSR
$0038	$0E12			SWAPF	?saveSTATUS, 0
$0039	$0083			MOVWF	STATUS
$003A	$0ECF			SWAPF	STACK_15, 1
$003B	$0E4F			SWAPF	STACK_15, 0
$003C	$0009			RETFIE
$0163	$	__main_Setup:
;D-91_PIC16_color_changer_v-4.1.c,560 :: 		_main_Setup() {
;D-91_PIC16_color_changer_v-4.1.c,563 :: 		TRISA     = 0x00;
$0163	$1303			BCF	STATUS, RP1
$0164	$1683			BSF	STATUS, RP0
$0165	$0185			CLRF	TRISA, 1
;D-91_PIC16_color_changer_v-4.1.c,564 :: 		PORTA     = 0x00;		//0000 0010
$0166	$1283			BCF	STATUS, RP0
$0167	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-4.1.c,566 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$0168	$30FF			MOVLW	255
$0169	$1683			BSF	STATUS, RP0
$016A	$0086			MOVWF	TRISB
;D-91_PIC16_color_changer_v-4.1.c,568 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$016B	$307F			MOVLW	127
$016C	$0501			ANDWF	OPTION_REG, 0
$016D	$00C0			MOVWF	STACK_0
$016E	$0840			MOVF	STACK_0, 0
$016F	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,570 :: 		OPTION_REG &= 0xBF;	// INT interrupt => by 5V ~> 0V
$0170	$30BF			MOVLW	191
$0171	$05C0			ANDWF	STACK_0, 1
$0172	$0840			MOVF	STACK_0, 0
$0173	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,572 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$0174	$30DF			MOVLW	223
$0175	$05C0			ANDWF	STACK_0, 1
$0176	$0840			MOVF	STACK_0, 0
$0177	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,573 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$0178	$30F0			MOVLW	240
$0179	$05C0			ANDWF	STACK_0, 1
$017A	$0840			MOVF	STACK_0, 0
$017B	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,574 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$017C	$3007			MOVLW	7
$017D	$0440			IORWF	STACK_0, 0
$017E	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-4.1.c,581 :: 		bit_len = 4;
$017F	$3004			MOVLW	4
$0180	$008F			MOVWF	_bit_len
;D-91_PIC16_color_changer_v-4.1.c,583 :: 		}//_main_Setup
$0181	$0008			RETURN
$01A8	$	GlobalIniD-91_PIC16_color_changer_v-4:
$01A8	$3001			MOVLW	1
$01A9	$1303			BCF	STATUS, RP1
$01AA	$1283			BCF	STATUS, RP0
$01AB	$0090			MOVWF	_LED_FLAG+0
$01AC	$0008			RETURN
$01A3	$	_main:
;D-91_PIC16_color_changer_v-4.1.c,396 :: 		void main(void)
;D-91_PIC16_color_changer_v-4.1.c,399 :: 		_main_Setup();
$01A3	$2163			CALL	__main_Setup
;D-91_PIC16_color_changer_v-4.1.c,421 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$01A4	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-4.1.c,422 :: 		INTCON |= 0x80;
$01A5	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-4.1.c,424 :: 		while(1)
$01A6	$	L_main_33:
$01A6	$29A6			GOTO	L_main_33
;D-91_PIC16_color_changer_v-4.1.c,432 :: 		}//void main(void)
$01A7	$29A7			GOTO	$
