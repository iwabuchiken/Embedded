;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/09/08 11:33:08
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$29ED			GOTO	_main
$00F5	$	__pulse:
;D-91_PIC16_color_changer_v-5.0_rcv.c,64 :: 		void _pulse(int num)
;D-91_PIC16_color_changer_v-5.0_rcv.c,68 :: 		for(i = 0; i < num; i++)
$00F5	$1303			BCF	STATUS, RP1
$00F6	$1283			BCF	STATUS, RP0
$00F7	$019A			CLRF	_pulse_i_L0
$00F8	$019B			CLRF	_pulse_i_L0+1
$00F9	$	L__pulse_0:
$00F9	$3080			MOVLW	128
$00FA	$061B			XORWF	_pulse_i_L0+1, 0
$00FB	$00C0			MOVWF	STACK_0
$00FC	$3080			MOVLW	128
$00FD	$0619			XORWF	FARG__pulse+1, 0
$00FE	$0240			SUBWF	STACK_0, 0
$00FF	$1D03			BTFSS	STATUS, Z
$0100	$2903			GOTO	L__pulse_67
$0101	$0818			MOVF	FARG__pulse+0, 0
$0102	$021A			SUBWF	_pulse_i_L0, 0
$0103	$	L__pulse_67:
$0103	$1803			BTFSC	STATUS, C
$0104	$292C			GOTO	L__pulse_1
;D-91_PIC16_color_changer_v-5.0_rcv.c,71 :: 		PORTA = 0x01; Delay_ms(1);
$0105	$3001			MOVLW	1
$0106	$0085			MOVWF	PORTA
$0107	$3007			MOVLW	7
$0108	$00CB			MOVWF	STACK_11
$0109	$30FF			MOVLW	255
$010A	$00CA			MOVWF	STACK_10
$010B	$0BCB			DECFSZ	STACK_11, F
$010C	$290E			GOTO	$+2
$010D	$2911			GOTO	$+4
$010E	$0BCA			DECFSZ	STACK_10, F
$010F	$290E			GOTO	$-1
$0110	$290B			GOTO	$-5
$0111	$3078			MOVLW	120
$0112	$00CA			MOVWF	STACK_10
$0113	$0BCA			DECFSZ	STACK_10, F
$0114	$2913			GOTO	$-1
$0115	$0000			NOP
$0116	$0000			NOP
;D-91_PIC16_color_changer_v-5.0_rcv.c,73 :: 		PORTA = 0x00; Delay_ms(1);
$0117	$0185			CLRF	PORTA, 1
$0118	$3007			MOVLW	7
$0119	$00CB			MOVWF	STACK_11
$011A	$30FF			MOVLW	255
$011B	$00CA			MOVWF	STACK_10
$011C	$0BCB			DECFSZ	STACK_11, F
$011D	$291F			GOTO	$+2
$011E	$2922			GOTO	$+4
$011F	$0BCA			DECFSZ	STACK_10, F
$0120	$291F			GOTO	$-1
$0121	$291C			GOTO	$-5
$0122	$3078			MOVLW	120
$0123	$00CA			MOVWF	STACK_10
$0124	$0BCA			DECFSZ	STACK_10, F
$0125	$2924			GOTO	$-1
$0126	$0000			NOP
$0127	$0000			NOP
;D-91_PIC16_color_changer_v-5.0_rcv.c,75 :: 		}
$0128	$	L__pulse_2:
;D-91_PIC16_color_changer_v-5.0_rcv.c,68 :: 		for(i = 0; i < num; i++)
$0128	$0A9A			INCF	_pulse_i_L0, 1
$0129	$1903			BTFSC	STATUS, Z
$012A	$0A9B			INCF	_pulse_i_L0+1, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,75 :: 		}
$012B	$28F9			GOTO	L__pulse_0
$012C	$	L__pulse_1:
;D-91_PIC16_color_changer_v-5.0_rcv.c,77 :: 		}
$012C	$0008			RETURN
$0195	$	__pulse_u_50:
;D-91_PIC16_color_changer_v-5.0_rcv.c,146 :: 		_pulse_u_50(int num)
;D-91_PIC16_color_changer_v-5.0_rcv.c,150 :: 		for(i = 0; i < num; i++)
$0195	$1303			BCF	STATUS, RP1
$0196	$1283			BCF	STATUS, RP0
$0197	$019A			CLRF	_pulse_u_50_i_L0
$0198	$019B			CLRF	_pulse_u_50_i_L0+1
$0199	$	L__pulse_u_50_15:
$0199	$3080			MOVLW	128
$019A	$061B			XORWF	_pulse_u_50_i_L0+1, 0
$019B	$00C0			MOVWF	STACK_0
$019C	$3080			MOVLW	128
$019D	$0619			XORWF	FARG__pulse_u_50+1, 0
$019E	$0240			SUBWF	STACK_0, 0
$019F	$1D03			BTFSS	STATUS, Z
$01A0	$29A3			GOTO	L__pulse_u_50_72
$01A1	$0818			MOVF	FARG__pulse_u_50+0, 0
$01A2	$021A			SUBWF	_pulse_u_50_i_L0, 0
$01A3	$	L__pulse_u_50_72:
$01A3	$1803			BTFSC	STATUS, C
$01A4	$29B4			GOTO	L__pulse_u_50_16
;D-91_PIC16_color_changer_v-5.0_rcv.c,153 :: 		PORTA = 0x01; Delay_us(50);
$01A5	$3001			MOVLW	1
$01A6	$0085			MOVWF	PORTA
$01A7	$3053			MOVLW	83
$01A8	$00CA			MOVWF	STACK_10
$01A9	$0BCA			DECFSZ	STACK_10, F
$01AA	$29A9			GOTO	$-1
;D-91_PIC16_color_changer_v-5.0_rcv.c,155 :: 		PORTA = 0x00; Delay_us(50);
$01AB	$0185			CLRF	PORTA, 1
$01AC	$3053			MOVLW	83
$01AD	$00CA			MOVWF	STACK_10
$01AE	$0BCA			DECFSZ	STACK_10, F
$01AF	$29AE			GOTO	$-1
;D-91_PIC16_color_changer_v-5.0_rcv.c,157 :: 		}
$01B0	$	L__pulse_u_50_17:
;D-91_PIC16_color_changer_v-5.0_rcv.c,150 :: 		for(i = 0; i < num; i++)
$01B0	$0A9A			INCF	_pulse_u_50_i_L0, 1
$01B1	$1903			BTFSC	STATUS, Z
$01B2	$0A9B			INCF	_pulse_u_50_i_L0+1, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,157 :: 		}
$01B3	$2999			GOTO	L__pulse_u_50_15
$01B4	$	L__pulse_u_50_16:
;D-91_PIC16_color_changer_v-5.0_rcv.c,159 :: 		}//_pulse_u_50
$01B4	$0008			RETURN
$01D4	$	__while_PORTB_0x01:
;D-91_PIC16_color_changer_v-5.0_rcv.c,161 :: 		void _while_PORTB_0x01(int num)
;D-91_PIC16_color_changer_v-5.0_rcv.c,164 :: 		while((PORTB & 0x01) == num) //---------------------
$01D4	$	L__while_PORTB_0x01_18:
$01D4	$3001			MOVLW	1
$01D5	$1303			BCF	STATUS, RP1
$01D6	$1283			BCF	STATUS, RP0
$01D7	$0506			ANDWF	PORTB, 0
$01D8	$00C1			MOVWF	STACK_1
$01D9	$3000			MOVLW	0
$01DA	$0615			XORWF	FARG__while_PORTB_0x01+1, 0
$01DB	$1D03			BTFSS	STATUS, Z
$01DC	$29DF			GOTO	L__while_PORTB_0x01_73
$01DD	$0814			MOVF	FARG__while_PORTB_0x01+0, 0
$01DE	$0641			XORWF	STACK_1, 0
$01DF	$	L__while_PORTB_0x01_73:
$01DF	$1D03			BTFSS	STATUS, Z
$01E0	$29EC			GOTO	L__while_PORTB_0x01_19
;D-91_PIC16_color_changer_v-5.0_rcv.c,167 :: 		if(TMR0 == 255)
$01E1	$0801			MOVF	TMR0, 0
$01E2	$3AFF			XORLW	255
$01E3	$1D03			BTFSS	STATUS, Z
$01E4	$29EB			GOTO	L__while_PORTB_0x01_20
;D-91_PIC16_color_changer_v-5.0_rcv.c,171 :: 		_pulse(3);
$01E5	$3003			MOVLW	3
$01E6	$0098			MOVWF	FARG__pulse+0
$01E7	$3000			MOVLW	0
$01E8	$0099			MOVWF	FARG__pulse+1
$01E9	$20F5			CALL	__pulse
;D-91_PIC16_color_changer_v-5.0_rcv.c,174 :: 		return;
$01EA	$0008			RETURN
;D-91_PIC16_color_changer_v-5.0_rcv.c,176 :: 		}
$01EB	$	L__while_PORTB_0x01_20:
;D-91_PIC16_color_changer_v-5.0_rcv.c,178 :: 		}//while((PORTB & 0x01) == 0)
$01EB	$29D4			GOTO	L__while_PORTB_0x01_18
$01EC	$	L__while_PORTB_0x01_19:
;D-91_PIC16_color_changer_v-5.0_rcv.c,180 :: 		return;
;D-91_PIC16_color_changer_v-5.0_rcv.c,182 :: 		}
$01EC	$0008			RETURN
$0164	$	__judge_TMR_:
;D-91_PIC16_color_changer_v-5.0_rcv.c,188 :: 		int _judge_TMR_(int low, int high) {
;D-91_PIC16_color_changer_v-5.0_rcv.c,190 :: 		if(TMR0 < low) //---------------------
$0164	$3080			MOVLW	128
$0165	$1303			BCF	STATUS, RP1
$0166	$1283			BCF	STATUS, RP0
$0167	$00C0			MOVWF	STACK_0
$0168	$3080			MOVLW	128
$0169	$0615			XORWF	FARG__judge_TMR_+1, 0
$016A	$0240			SUBWF	STACK_0, 0
$016B	$1D03			BTFSS	STATUS, Z
$016C	$296F			GOTO	L__judge_TMR__74
$016D	$0814			MOVF	FARG__judge_TMR_+0, 0
$016E	$0201			SUBWF	TMR0, 0
$016F	$	L__judge_TMR__74:
$016F	$1803			BTFSC	STATUS, C
$0170	$297B			GOTO	L__judge_TMR__21
;D-91_PIC16_color_changer_v-5.0_rcv.c,193 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0171	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-5.0_rcv.c,194 :: 		INTCON |= 0x80;        // interrupt => permitted
$0172	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-5.0_rcv.c,201 :: 		_pulse_u_50(3);
$0173	$3003			MOVLW	3
$0174	$0098			MOVWF	FARG__pulse_u_50+0
$0175	$3000			MOVLW	0
$0176	$0099			MOVWF	FARG__pulse_u_50+1
$0177	$2195			CALL	__pulse_u_50
;D-91_PIC16_color_changer_v-5.0_rcv.c,203 :: 		return false;                // return
$0178	$01C0			CLRF	STACK_0
$0179	$01C1			CLRF	STACK_0+1
$017A	$0008			RETURN
;D-91_PIC16_color_changer_v-5.0_rcv.c,214 :: 		} else if (TMR0 > high) {
$017B	$	L__judge_TMR__21:
$017B	$3080			MOVLW	128
$017C	$0617			XORWF	FARG__judge_TMR_+3, 0
$017D	$00C0			MOVWF	STACK_0
$017E	$3080			MOVLW	128
$017F	$0240			SUBWF	STACK_0, 0
$0180	$1D03			BTFSS	STATUS, Z
$0181	$2984			GOTO	L__judge_TMR__75
$0182	$0801			MOVF	TMR0, 0
$0183	$0216			SUBWF	FARG__judge_TMR_+2, 0
$0184	$	L__judge_TMR__75:
$0184	$1803			BTFSC	STATUS, C
$0185	$2990			GOTO	L__judge_TMR__23
;D-91_PIC16_color_changer_v-5.0_rcv.c,216 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0186	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-5.0_rcv.c,217 :: 		INTCON |= 0x80;        // interrupt => permitted
$0187	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-5.0_rcv.c,220 :: 		_pulse_u_50(2);
$0188	$3002			MOVLW	2
$0189	$0098			MOVWF	FARG__pulse_u_50+0
$018A	$3000			MOVLW	0
$018B	$0099			MOVWF	FARG__pulse_u_50+1
$018C	$2195			CALL	__pulse_u_50
;D-91_PIC16_color_changer_v-5.0_rcv.c,223 :: 		return false;
$018D	$01C0			CLRF	STACK_0
$018E	$01C1			CLRF	STACK_0+1
$018F	$0008			RETURN
;D-91_PIC16_color_changer_v-5.0_rcv.c,225 :: 		}
$0190	$	L__judge_TMR__23:
$0190	$	L__judge_TMR__22:
;D-91_PIC16_color_changer_v-5.0_rcv.c,227 :: 		return true;
$0190	$3001			MOVLW	1
$0191	$00C0			MOVWF	STACK_0
$0192	$3000			MOVLW	0
$0193	$00C1			MOVWF	STACK_0+1
;D-91_PIC16_color_changer_v-5.0_rcv.c,229 :: 		}//int _judge_TMR_(int low, int high)
$0194	$0008			RETURN
$012D	$	__read_Reader:
;D-91_PIC16_color_changer_v-5.0_rcv.c,467 :: 		_read_Reader() {
;D-91_PIC16_color_changer_v-5.0_rcv.c,474 :: 		RESET_TMR;
$012D	$1303			BCF	STATUS, RP1
$012E	$1283			BCF	STATUS, RP0
$012F	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,484 :: 		_while_PORTB_0x01(0);
$0130	$0194			CLRF	FARG__while_PORTB_0x01+0
$0131	$0195			CLRF	FARG__while_PORTB_0x01+1
$0132	$21D4			CALL	__while_PORTB_0x01
;D-91_PIC16_color_changer_v-5.0_rcv.c,495 :: 		result = _judge_TMR_(156, 196);
$0133	$309C			MOVLW	156
$0134	$1303			BCF	STATUS, RP1
$0135	$1283			BCF	STATUS, RP0
$0136	$0094			MOVWF	FARG__judge_TMR_+0
$0137	$0195			CLRF	FARG__judge_TMR_+1
$0138	$30C4			MOVLW	196
$0139	$0096			MOVWF	FARG__judge_TMR_+2
$013A	$0197			CLRF	FARG__judge_TMR_+3
$013B	$2164			CALL	__judge_TMR_
$013C	$0840			MOVF	STACK_0, 0
$013D	$008C			MOVWF	_result
;D-91_PIC16_color_changer_v-5.0_rcv.c,497 :: 		if (result == false) {
$013E	$0840			MOVF	STACK_0, 0
$013F	$3A00			XORLW	0
$0140	$1D03			BTFSS	STATUS, Z
$0141	$2945			GOTO	L__read_Reader_54
;D-91_PIC16_color_changer_v-5.0_rcv.c,501 :: 		return false;
$0142	$01C0			CLRF	STACK_0
$0143	$01C1			CLRF	STACK_0+1
$0144	$0008			RETURN
;D-91_PIC16_color_changer_v-5.0_rcv.c,503 :: 		}
$0145	$	L__read_Reader_54:
;D-91_PIC16_color_changer_v-5.0_rcv.c,515 :: 		RESET_TMR;
$0145	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,522 :: 		_while_PORTB_0x01(1);
$0146	$3001			MOVLW	1
$0147	$0094			MOVWF	FARG__while_PORTB_0x01+0
$0148	$3000			MOVLW	0
$0149	$0095			MOVWF	FARG__while_PORTB_0x01+1
$014A	$21D4			CALL	__while_PORTB_0x01
;D-91_PIC16_color_changer_v-5.0_rcv.c,529 :: 		result = _judge_TMR_(68, 108);
$014B	$3044			MOVLW	68
$014C	$1303			BCF	STATUS, RP1
$014D	$1283			BCF	STATUS, RP0
$014E	$0094			MOVWF	FARG__judge_TMR_+0
$014F	$3000			MOVLW	0
$0150	$0095			MOVWF	FARG__judge_TMR_+1
$0151	$306C			MOVLW	108
$0152	$0096			MOVWF	FARG__judge_TMR_+2
$0153	$3000			MOVLW	0
$0154	$0097			MOVWF	FARG__judge_TMR_+3
$0155	$2164			CALL	__judge_TMR_
$0156	$0840			MOVF	STACK_0, 0
$0157	$008C			MOVWF	_result
;D-91_PIC16_color_changer_v-5.0_rcv.c,531 :: 		if (result == false) {
$0158	$0840			MOVF	STACK_0, 0
$0159	$3A00			XORLW	0
$015A	$1D03			BTFSS	STATUS, Z
$015B	$295F			GOTO	L__read_Reader_55
;D-91_PIC16_color_changer_v-5.0_rcv.c,535 :: 		return false;
$015C	$01C0			CLRF	STACK_0
$015D	$01C1			CLRF	STACK_0+1
$015E	$0008			RETURN
;D-91_PIC16_color_changer_v-5.0_rcv.c,537 :: 		}
$015F	$	L__read_Reader_55:
;D-91_PIC16_color_changer_v-5.0_rcv.c,544 :: 		return true;
$015F	$3001			MOVLW	1
$0160	$00C0			MOVWF	STACK_0
$0161	$3000			MOVLW	0
$0162	$00C1			MOVWF	STACK_0+1
;D-91_PIC16_color_changer_v-5.0_rcv.c,546 :: 		}//_read_Reader
$0163	$0008			RETURN
$003B	$	__read_Custom:
;D-91_PIC16_color_changer_v-5.0_rcv.c,549 :: 		_read_Custom() {
;D-91_PIC16_color_changer_v-5.0_rcv.c,551 :: 		custom_code_a = 0x00;
$003B	$1303			BCF	STATUS, RP1
$003C	$1283			BCF	STATUS, RP0
$003D	$018D			CLRF	_custom_code_a, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,555 :: 		for(i = 0; i < bit_len; i++)
$003E	$018E			CLRF	_i, 1
$003F	$	L__read_Custom_56:
$003F	$080F			MOVF	_bit_len, 0
$0040	$020E			SUBWF	_i, 0
$0041	$1803			BTFSC	STATUS, C
$0042	$287E			GOTO	L__read_Custom_57
;D-91_PIC16_color_changer_v-5.0_rcv.c,557 :: 		RESET_TMR;
$0043	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,559 :: 		while((PORTB & 0x01) == 0)
$0044	$	L__read_Custom_59:
$0044	$3001			MOVLW	1
$0045	$0506			ANDWF	PORTB, 0
$0046	$00C1			MOVWF	STACK_1
$0047	$0841			MOVF	STACK_1, 0
$0048	$3A00			XORLW	0
$0049	$1D03			BTFSS	STATUS, Z
$004A	$2850			GOTO	L__read_Custom_60
;D-91_PIC16_color_changer_v-5.0_rcv.c,562 :: 		TIME_OUT;
$004B	$0801			MOVF	TMR0, 0
$004C	$3AFF			XORLW	255
$004D	$1903			BTFSC	STATUS, Z
$004E	$2850			GOTO	L__read_Custom_60
$004F	$	L__read_Custom_61:
;D-91_PIC16_color_changer_v-5.0_rcv.c,564 :: 		}
$004F	$2844			GOTO	L__read_Custom_59
$0050	$	L__read_Custom_60:
;D-91_PIC16_color_changer_v-5.0_rcv.c,566 :: 		while((PORTB & 0x01) == 1)
$0050	$	L__read_Custom_62:
$0050	$3001			MOVLW	1
$0051	$0506			ANDWF	PORTB, 0
$0052	$00C1			MOVWF	STACK_1
$0053	$0841			MOVF	STACK_1, 0
$0054	$3A01			XORLW	1
$0055	$1D03			BTFSS	STATUS, Z
$0056	$285C			GOTO	L__read_Custom_63
;D-91_PIC16_color_changer_v-5.0_rcv.c,569 :: 		TIME_OUT;
$0057	$0801			MOVF	TMR0, 0
$0058	$3AFF			XORLW	255
$0059	$1903			BTFSC	STATUS, Z
$005A	$285C			GOTO	L__read_Custom_63
$005B	$	L__read_Custom_64:
;D-91_PIC16_color_changer_v-5.0_rcv.c,571 :: 		}
$005B	$2850			GOTO	L__read_Custom_62
$005C	$	L__read_Custom_63:
;D-91_PIC16_color_changer_v-5.0_rcv.c,573 :: 		if (TMR0 < 33)
$005C	$3021			MOVLW	33
$005D	$0201			SUBWF	TMR0, 0
$005E	$1803			BTFSC	STATUS, C
$005F	$286F			GOTO	L__read_Custom_65
;D-91_PIC16_color_changer_v-5.0_rcv.c,576 :: 		custom_code_a &= ~(0x01 << i);
$0060	$080E			MOVF	_i, 0
$0061	$00C1			MOVWF	STACK_1
$0062	$3001			MOVLW	1
$0063	$00C0			MOVWF	STACK_0
$0064	$0841			MOVF	STACK_1, 0
$0065	$	L__read_Custom_80:
$0065	$1903			BTFSC	STATUS, Z
$0066	$286B			GOTO	L__read_Custom_81
$0067	$0DC0			RLF	STACK_0, 1
$0068	$1040			BCF	STACK_0, 0
$0069	$3FFF			ADDLW	255
$006A	$2865			GOTO	L__read_Custom_80
$006B	$	L__read_Custom_81:
$006B	$09C0			COMF	STACK_0, F
$006C	$0840			MOVF	STACK_0, 0
$006D	$058D			ANDWF	_custom_code_a, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,578 :: 		}
$006E	$287C			GOTO	L__read_Custom_66
$006F	$	L__read_Custom_65:
;D-91_PIC16_color_changer_v-5.0_rcv.c,582 :: 		custom_code_a |= (0x01 << i);
$006F	$080E			MOVF	_i, 0
$0070	$00C1			MOVWF	STACK_1
$0071	$3001			MOVLW	1
$0072	$00C0			MOVWF	STACK_0
$0073	$0841			MOVF	STACK_1, 0
$0074	$	L__read_Custom_82:
$0074	$1903			BTFSC	STATUS, Z
$0075	$287A			GOTO	L__read_Custom_83
$0076	$0DC0			RLF	STACK_0, 1
$0077	$1040			BCF	STACK_0, 0
$0078	$3FFF			ADDLW	255
$0079	$2874			GOTO	L__read_Custom_82
$007A	$	L__read_Custom_83:
$007A	$0840			MOVF	STACK_0, 0
$007B	$048D			IORWF	_custom_code_a, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,584 :: 		}//if (TMR0 < 33)
$007C	$	L__read_Custom_66:
;D-91_PIC16_color_changer_v-5.0_rcv.c,586 :: 		}//for(i = 0; i < bit_len; i++)
$007C	$	L__read_Custom_58:
;D-91_PIC16_color_changer_v-5.0_rcv.c,555 :: 		for(i = 0; i < bit_len; i++)
$007C	$0A8E			INCF	_i, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,586 :: 		}//for(i = 0; i < bit_len; i++)
$007D	$283F			GOTO	L__read_Custom_56
$007E	$	L__read_Custom_57:
;D-91_PIC16_color_changer_v-5.0_rcv.c,589 :: 		}//_read_Custom
$007E	$0008			RETURN
$007F	$	__response_2:
;D-91_PIC16_color_changer_v-5.0_rcv.c,280 :: 		_response_2(void) {
;D-91_PIC16_color_changer_v-5.0_rcv.c,282 :: 		switch(custom_code_a) {
$007F	$289D			GOTO	L__response_2_30
;D-91_PIC16_color_changer_v-5.0_rcv.c,284 :: 		case 1: PORTA = 1; break;
$0080	$	L__response_2_32:
$0080	$3001			MOVLW	1
$0081	$1303			BCF	STATUS, RP1
$0082	$1283			BCF	STATUS, RP0
$0083	$0085			MOVWF	PORTA
$0084	$28BC			GOTO	L__response_2_31
;D-91_PIC16_color_changer_v-5.0_rcv.c,285 :: 		case 2: PORTA = 2; break;
$0085	$	L__response_2_33:
$0085	$3002			MOVLW	2
$0086	$0085			MOVWF	PORTA
$0087	$28BC			GOTO	L__response_2_31
;D-91_PIC16_color_changer_v-5.0_rcv.c,286 :: 		case 3: PORTA = 3; break;
$0088	$	L__response_2_34:
$0088	$3003			MOVLW	3
$0089	$0085			MOVWF	PORTA
$008A	$28BC			GOTO	L__response_2_31
;D-91_PIC16_color_changer_v-5.0_rcv.c,287 :: 		case 4: PORTA = 4; break;
$008B	$	L__response_2_35:
$008B	$3004			MOVLW	4
$008C	$0085			MOVWF	PORTA
$008D	$28BC			GOTO	L__response_2_31
;D-91_PIC16_color_changer_v-5.0_rcv.c,288 :: 		case 5: PORTA = 5; break;
$008E	$	L__response_2_36:
$008E	$3005			MOVLW	5
$008F	$0085			MOVWF	PORTA
$0090	$28BC			GOTO	L__response_2_31
;D-91_PIC16_color_changer_v-5.0_rcv.c,289 :: 		case 6: PORTA = 6; break;
$0091	$	L__response_2_37:
$0091	$3006			MOVLW	6
$0092	$0085			MOVWF	PORTA
$0093	$28BC			GOTO	L__response_2_31
;D-91_PIC16_color_changer_v-5.0_rcv.c,290 :: 		case 7: PORTA = 7; break;
$0094	$	L__response_2_38:
$0094	$3007			MOVLW	7
$0095	$0085			MOVWF	PORTA
$0096	$28BC			GOTO	L__response_2_31
;D-91_PIC16_color_changer_v-5.0_rcv.c,292 :: 		default: _pulse(2); break;
$0097	$	L__response_2_39:
$0097	$3002			MOVLW	2
$0098	$0098			MOVWF	FARG__pulse+0
$0099	$3000			MOVLW	0
$009A	$0099			MOVWF	FARG__pulse+1
$009B	$20F5			CALL	__pulse
$009C	$28BC			GOTO	L__response_2_31
;D-91_PIC16_color_changer_v-5.0_rcv.c,294 :: 		}//switch(custom_code_a)
$009D	$	L__response_2_30:
$009D	$1303			BCF	STATUS, RP1
$009E	$1283			BCF	STATUS, RP0
$009F	$080D			MOVF	_custom_code_a, 0
$00A0	$3A01			XORLW	1
$00A1	$1903			BTFSC	STATUS, Z
$00A2	$2880			GOTO	L__response_2_32
$00A3	$080D			MOVF	_custom_code_a, 0
$00A4	$3A02			XORLW	2
$00A5	$1903			BTFSC	STATUS, Z
$00A6	$2885			GOTO	L__response_2_33
$00A7	$080D			MOVF	_custom_code_a, 0
$00A8	$3A03			XORLW	3
$00A9	$1903			BTFSC	STATUS, Z
$00AA	$2888			GOTO	L__response_2_34
$00AB	$080D			MOVF	_custom_code_a, 0
$00AC	$3A04			XORLW	4
$00AD	$1903			BTFSC	STATUS, Z
$00AE	$288B			GOTO	L__response_2_35
$00AF	$080D			MOVF	_custom_code_a, 0
$00B0	$3A05			XORLW	5
$00B1	$1903			BTFSC	STATUS, Z
$00B2	$288E			GOTO	L__response_2_36
$00B3	$080D			MOVF	_custom_code_a, 0
$00B4	$3A06			XORLW	6
$00B5	$1903			BTFSC	STATUS, Z
$00B6	$2891			GOTO	L__response_2_37
$00B7	$080D			MOVF	_custom_code_a, 0
$00B8	$3A07			XORLW	7
$00B9	$1903			BTFSC	STATUS, Z
$00BA	$2894			GOTO	L__response_2_38
$00BB	$2897			GOTO	L__response_2_39
$00BC	$	L__response_2_31:
;D-91_PIC16_color_changer_v-5.0_rcv.c,296 :: 		}//_response_2
$00BC	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$0092			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$0091			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0093			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$084B			MOVF	STACK_11, 0
$000E	$00A2			MOVWF	STSAVED_11
$000F	$084A			MOVF	STACK_10, 0
$0010	$00A1			MOVWF	STSAVED_10
$0011	$0840			MOVF	STACK_0, 0
$0012	$00A0			MOVWF	STSAVED_0
;D-91_PIC16_color_changer_v-5.0_rcv.c,349 :: 		void interrupt(void)
;D-91_PIC16_color_changer_v-5.0_rcv.c,360 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$0013	$307F			MOVLW	127
$0014	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,361 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0015	$30EF			MOVLW	239
$0016	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,362 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0017	$30FD			MOVLW	253
$0018	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,369 :: 		PORTA = 0x00;
$0019	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,376 :: 		result = _read_Reader();
$001A	$212D			CALL	__read_Reader
$001B	$0840			MOVF	STACK_0, 0
$001C	$008C			MOVWF	_result
;D-91_PIC16_color_changer_v-5.0_rcv.c,383 :: 		if (result == false) {
$001D	$0840			MOVF	STACK_0, 0
$001E	$3A00			XORLW	0
$001F	$1D03			BTFSS	STATUS, Z
$0020	$2822			GOTO	L_interrupt_51
;D-91_PIC16_color_changer_v-5.0_rcv.c,387 :: 		return;
$0021	$282C			GOTO	L_Interrupt_end
;D-91_PIC16_color_changer_v-5.0_rcv.c,389 :: 		}
$0022	$	L_interrupt_51:
;D-91_PIC16_color_changer_v-5.0_rcv.c,396 :: 		_read_Custom();
$0022	$203B			CALL	__read_Custom
;D-91_PIC16_color_changer_v-5.0_rcv.c,413 :: 		_response_2();
$0023	$207F			CALL	__response_2
;D-91_PIC16_color_changer_v-5.0_rcv.c,421 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$0024	$307F			MOVLW	127
$0025	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,422 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0026	$30EF			MOVLW	239
$0027	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,423 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0028	$30FD			MOVLW	253
$0029	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,439 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$002A	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-5.0_rcv.c,440 :: 		INTCON |= 0x80;
$002B	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-5.0_rcv.c,442 :: 		}//void interrupt(void)
$002C	$	L_Interrupt_end:
$002C	$0822			MOVF	STSAVED_11, 0
$002D	$00CB			MOVWF	STACK_11
$002E	$0821			MOVF	STSAVED_10, 0
$002F	$00CA			MOVWF	STACK_10
$0030	$0820			MOVF	STSAVED_0, 0
$0031	$00C0			MOVWF	STACK_0
$0032	$0813			MOVF	?savePCLATH, 0
$0033	$008A			MOVWF	PCLATH
$0034	$0811			MOVF	?saveFSR, 0
$0035	$0084			MOVWF	FSR
$0036	$0E12			SWAPF	?saveSTATUS, 0
$0037	$0083			MOVWF	STATUS
$0038	$0ECF			SWAPF	STACK_15, 1
$0039	$0E4F			SWAPF	STACK_15, 0
$003A	$0009			RETFIE
$01B5	$	__main_Setup:
;D-91_PIC16_color_changer_v-5.0_rcv.c,592 :: 		_main_Setup() {
;D-91_PIC16_color_changer_v-5.0_rcv.c,595 :: 		TRISA     = 0x00;
$01B5	$1303			BCF	STATUS, RP1
$01B6	$1683			BSF	STATUS, RP0
$01B7	$0185			CLRF	TRISA, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,596 :: 		PORTA     = 0x00;		//0000 0010
$01B8	$1283			BCF	STATUS, RP0
$01B9	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,598 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$01BA	$30FF			MOVLW	255
$01BB	$1683			BSF	STATUS, RP0
$01BC	$0086			MOVWF	TRISB
;D-91_PIC16_color_changer_v-5.0_rcv.c,600 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$01BD	$307F			MOVLW	127
$01BE	$0501			ANDWF	OPTION_REG, 0
$01BF	$00C0			MOVWF	STACK_0
$01C0	$0840			MOVF	STACK_0, 0
$01C1	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-5.0_rcv.c,602 :: 		OPTION_REG &= 0xBF;	// INT interrupt => by 5V ~> 0V
$01C2	$30BF			MOVLW	191
$01C3	$05C0			ANDWF	STACK_0, 1
$01C4	$0840			MOVF	STACK_0, 0
$01C5	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-5.0_rcv.c,604 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$01C6	$30DF			MOVLW	223
$01C7	$05C0			ANDWF	STACK_0, 1
$01C8	$0840			MOVF	STACK_0, 0
$01C9	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-5.0_rcv.c,605 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$01CA	$30F0			MOVLW	240
$01CB	$05C0			ANDWF	STACK_0, 1
$01CC	$0840			MOVF	STACK_0, 0
$01CD	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-5.0_rcv.c,606 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$01CE	$3007			MOVLW	7
$01CF	$0440			IORWF	STACK_0, 0
$01D0	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-5.0_rcv.c,613 :: 		bit_len = 4;
$01D1	$3004			MOVLW	4
$01D2	$008F			MOVWF	_bit_len
;D-91_PIC16_color_changer_v-5.0_rcv.c,615 :: 		}//_main_Setup
$01D3	$0008			RETURN
$00BD	$	__pulse_ms:
;D-91_PIC16_color_changer_v-5.0_rcv.c,79 :: 		void _pulse_ms(int num)
;D-91_PIC16_color_changer_v-5.0_rcv.c,83 :: 		for(i = 0; i < num; i++)
$00BD	$1303			BCF	STATUS, RP1
$00BE	$1283			BCF	STATUS, RP0
$00BF	$019E			CLRF	_pulse_ms_i_L0
$00C0	$019F			CLRF	_pulse_ms_i_L0+1
$00C1	$	L__pulse_ms_3:
$00C1	$3080			MOVLW	128
$00C2	$061F			XORWF	_pulse_ms_i_L0+1, 0
$00C3	$00C0			MOVWF	STACK_0
$00C4	$3080			MOVLW	128
$00C5	$061D			XORWF	FARG__pulse_ms+1, 0
$00C6	$0240			SUBWF	STACK_0, 0
$00C7	$1D03			BTFSS	STATUS, Z
$00C8	$28CB			GOTO	L__pulse_ms_68
$00C9	$081C			MOVF	FARG__pulse_ms+0, 0
$00CA	$021E			SUBWF	_pulse_ms_i_L0, 0
$00CB	$	L__pulse_ms_68:
$00CB	$1803			BTFSC	STATUS, C
$00CC	$28F4			GOTO	L__pulse_ms_4
;D-91_PIC16_color_changer_v-5.0_rcv.c,86 :: 		PORTA = 0x01; Delay_ms(1);
$00CD	$3001			MOVLW	1
$00CE	$0085			MOVWF	PORTA
$00CF	$3007			MOVLW	7
$00D0	$00CB			MOVWF	STACK_11
$00D1	$30FF			MOVLW	255
$00D2	$00CA			MOVWF	STACK_10
$00D3	$0BCB			DECFSZ	STACK_11, F
$00D4	$28D6			GOTO	$+2
$00D5	$28D9			GOTO	$+4
$00D6	$0BCA			DECFSZ	STACK_10, F
$00D7	$28D6			GOTO	$-1
$00D8	$28D3			GOTO	$-5
$00D9	$3078			MOVLW	120
$00DA	$00CA			MOVWF	STACK_10
$00DB	$0BCA			DECFSZ	STACK_10, F
$00DC	$28DB			GOTO	$-1
$00DD	$0000			NOP
$00DE	$0000			NOP
;D-91_PIC16_color_changer_v-5.0_rcv.c,88 :: 		PORTA = 0x00; Delay_ms(1);
$00DF	$0185			CLRF	PORTA, 1
$00E0	$3007			MOVLW	7
$00E1	$00CB			MOVWF	STACK_11
$00E2	$30FF			MOVLW	255
$00E3	$00CA			MOVWF	STACK_10
$00E4	$0BCB			DECFSZ	STACK_11, F
$00E5	$28E7			GOTO	$+2
$00E6	$28EA			GOTO	$+4
$00E7	$0BCA			DECFSZ	STACK_10, F
$00E8	$28E7			GOTO	$-1
$00E9	$28E4			GOTO	$-5
$00EA	$3078			MOVLW	120
$00EB	$00CA			MOVWF	STACK_10
$00EC	$0BCA			DECFSZ	STACK_10, F
$00ED	$28EC			GOTO	$-1
$00EE	$0000			NOP
$00EF	$0000			NOP
;D-91_PIC16_color_changer_v-5.0_rcv.c,90 :: 		}
$00F0	$	L__pulse_ms_5:
;D-91_PIC16_color_changer_v-5.0_rcv.c,83 :: 		for(i = 0; i < num; i++)
$00F0	$0A9E			INCF	_pulse_ms_i_L0, 1
$00F1	$1903			BTFSC	STATUS, Z
$00F2	$0A9F			INCF	_pulse_ms_i_L0+1, 1
;D-91_PIC16_color_changer_v-5.0_rcv.c,90 :: 		}
$00F3	$28C1			GOTO	L__pulse_ms_3
$00F4	$	L__pulse_ms_4:
;D-91_PIC16_color_changer_v-5.0_rcv.c,92 :: 		}
$00F4	$0008			RETURN
$0206	$	GlobalIniD-91_PIC16_color_changer_v-5:
$0206	$3001			MOVLW	1
$0207	$1303			BCF	STATUS, RP1
$0208	$1283			BCF	STATUS, RP0
$0209	$0090			MOVWF	_LED_FLAG+0
$020A	$0008			RETURN
$01ED	$	_main:
;D-91_PIC16_color_changer_v-5.0_rcv.c,445 :: 		void main(void)
;D-91_PIC16_color_changer_v-5.0_rcv.c,448 :: 		_main_Setup();
$01ED	$21B5			CALL	__main_Setup
;D-91_PIC16_color_changer_v-5.0_rcv.c,450 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$01EE	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-5.0_rcv.c,451 :: 		INTCON |= 0x80;
$01EF	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-5.0_rcv.c,453 :: 		while(1)
$01F0	$	L_main_52:
;D-91_PIC16_color_changer_v-5.0_rcv.c,456 :: 		_pulse_ms(1);
$01F0	$3001			MOVLW	1
$01F1	$009C			MOVWF	FARG__pulse_ms+0
$01F2	$3000			MOVLW	0
$01F3	$009D			MOVWF	FARG__pulse_ms+1
$01F4	$20BD			CALL	__pulse_ms
;D-91_PIC16_color_changer_v-5.0_rcv.c,457 :: 		Delay_ms(2);
$01F5	$300D			MOVLW	13
$01F6	$00CB			MOVWF	STACK_11
$01F7	$30FF			MOVLW	255
$01F8	$00CA			MOVWF	STACK_10
$01F9	$0BCB			DECFSZ	STACK_11, F
$01FA	$29FC			GOTO	$+2
$01FB	$29FF			GOTO	$+4
$01FC	$0BCA			DECFSZ	STACK_10, F
$01FD	$29FC			GOTO	$-1
$01FE	$29F9			GOTO	$-5
$01FF	$30F3			MOVLW	243
$0200	$00CA			MOVWF	STACK_10
$0201	$0BCA			DECFSZ	STACK_10, F
$0202	$2A01			GOTO	$-1
$0203	$0000			NOP
;D-91_PIC16_color_changer_v-5.0_rcv.c,462 :: 		}//while(1)
$0204	$29F0			GOTO	L_main_52
;D-91_PIC16_color_changer_v-5.0_rcv.c,464 :: 		}//void main(void)
$0205	$2A05			GOTO	$
