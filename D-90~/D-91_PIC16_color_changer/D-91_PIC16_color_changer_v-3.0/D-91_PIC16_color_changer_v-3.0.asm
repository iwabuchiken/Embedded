;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/09/01 16:55:13
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$289C			GOTO	_main
$00EB	$	__pulse_Modulation:
;D-91_PIC16_color_changer_v-3.0.c,69 :: 		_pulse_Modulation(void)
;D-91_PIC16_color_changer_v-3.0.c,73 :: 		PORTA        = 0x01;   // RA0 => on
$00EB	$3001			MOVLW	1
$00EC	$1303			BCF	STATUS, RP1
$00ED	$1283			BCF	STATUS, RP0
$00EE	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-3.0.c,74 :: 		Delay_us(9);   // 8.8us
$00EF	$300E			MOVLW	14
$00F0	$00CA			MOVWF	STACK_10
$00F1	$0BCA			DECFSZ	STACK_10, F
$00F2	$28F1			GOTO	$-1
$00F3	$0000			NOP
$00F4	$0000			NOP
;D-91_PIC16_color_changer_v-3.0.c,76 :: 		PORTA        = 0x00;   // RA0 => off
$00F5	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,77 :: 		Delay_us(17);   // 26.3us - 8.8us =% 17us
$00F6	$301C			MOVLW	28
$00F7	$00CA			MOVWF	STACK_10
$00F8	$0BCA			DECFSZ	STACK_10, F
$00F9	$28F8			GOTO	$-1
;D-91_PIC16_color_changer_v-3.0.c,79 :: 		}
$00FA	$0008			RETURN
$00BE	$	__reader:
;D-91_PIC16_color_changer_v-3.0.c,82 :: 		_reader(void)
;D-91_PIC16_color_changer_v-3.0.c,85 :: 		TMR0     = 0;
$00BE	$1303			BCF	STATUS, RP1
$00BF	$1283			BCF	STATUS, RP0
$00C0	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-3.0.c,89 :: 		while(MS90)         // 9.0ms
$00C1	$	L__reader_0:
$00C1	$30B0			MOVLW	176
$00C2	$0201			SUBWF	TMR0, 0
$00C3	$1803			BTFSC	STATUS, C
$00C4	$28D3			GOTO	L__reader_1
;D-91_PIC16_color_changer_v-3.0.c,92 :: 		PORTA        = 0x01;   // RA0 => on
$00C5	$3001			MOVLW	1
$00C6	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-3.0.c,93 :: 		Delay_us(9);   // 8.8us
$00C7	$300E			MOVLW	14
$00C8	$00CA			MOVWF	STACK_10
$00C9	$0BCA			DECFSZ	STACK_10, F
$00CA	$28C9			GOTO	$-1
$00CB	$0000			NOP
$00CC	$0000			NOP
;D-91_PIC16_color_changer_v-3.0.c,95 :: 		PORTA        = 0x00;   // RA0 => off
$00CD	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,96 :: 		Delay_us(17);   // 26.3us - 8.8us =% 17us
$00CE	$301C			MOVLW	28
$00CF	$00CA			MOVWF	STACK_10
$00D0	$0BCA			DECFSZ	STACK_10, F
$00D1	$28D0			GOTO	$-1
;D-91_PIC16_color_changer_v-3.0.c,98 :: 		}
$00D2	$28C1			GOTO	L__reader_0
$00D3	$	L__reader_1:
;D-91_PIC16_color_changer_v-3.0.c,100 :: 		TMR0 = 0;
$00D3	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-3.0.c,101 :: 		PORTA = 0x00;
$00D4	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,103 :: 		while(MS45)       // 4.5ms
$00D5	$	L__reader_2:
$00D5	$3058			MOVLW	88
$00D6	$0201			SUBWF	TMR0, 0
$00D7	$1C03			BTFSS	STATUS, C
$00D8	$28D5			GOTO	L__reader_2
;D-91_PIC16_color_changer_v-3.0.c,107 :: 		}
$00D9	$	L__reader_3:
;D-91_PIC16_color_changer_v-3.0.c,109 :: 		}//void _reader(void)
$00D9	$0008			RETURN
$0023	$	__custom_lower:
;D-91_PIC16_color_changer_v-3.0.c,112 :: 		_custom_lower(void)
;D-91_PIC16_color_changer_v-3.0.c,115 :: 		bit_len = 4;
$0023	$3004			MOVLW	4
$0024	$1303			BCF	STATUS, RP1
$0025	$1283			BCF	STATUS, RP0
$0026	$008C			MOVWF	_bit_len
;D-91_PIC16_color_changer_v-3.0.c,117 :: 		custom_code_a = 0x05;
$0027	$3005			MOVLW	5
$0028	$008D			MOVWF	_custom_code_a
;D-91_PIC16_color_changer_v-3.0.c,120 :: 		for(i = 0; i < bit_len; i++)
$0029	$018E			CLRF	_i, 1
$002A	$	L__custom_lower_4:
$002A	$080C			MOVF	_bit_len, 0
$002B	$020E			SUBWF	_i, 0
$002C	$1803			BTFSC	STATUS, C
$002D	$2853			GOTO	L__custom_lower_5
;D-91_PIC16_color_changer_v-3.0.c,128 :: 		RESET_TMR;
$002E	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-3.0.c,130 :: 		while(TMR0 < 11)	// 0.56ms
$002F	$	L__custom_lower_7:
$002F	$300B			MOVLW	11
$0030	$0201			SUBWF	TMR0, 0
$0031	$1803			BTFSC	STATUS, C
$0032	$2835			GOTO	L__custom_lower_8
;D-91_PIC16_color_changer_v-3.0.c,132 :: 		_pulse_Modulation();
$0033	$20EB			CALL	__pulse_Modulation
;D-91_PIC16_color_changer_v-3.0.c,134 :: 		}
$0034	$282F			GOTO	L__custom_lower_7
$0035	$	L__custom_lower_8:
;D-91_PIC16_color_changer_v-3.0.c,141 :: 		PORTA = 0x00;
$0035	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,143 :: 		if (((custom_code_a >> i) & 0x01) == 0)
$0036	$080E			MOVF	_i, 0
$0037	$00C1			MOVWF	STACK_1
$0038	$080D			MOVF	_custom_code_a, 0
$0039	$00C0			MOVWF	STACK_0
$003A	$0841			MOVF	STACK_1, 0
$003B	$	L__custom_lower_23:
$003B	$1903			BTFSC	STATUS, Z
$003C	$2841			GOTO	L__custom_lower_24
$003D	$0CC0			RRF	STACK_0, 1
$003E	$13C0			BCF	STACK_0, 7
$003F	$3FFF			ADDLW	255
$0040	$283B			GOTO	L__custom_lower_23
$0041	$	L__custom_lower_24:
$0041	$3001			MOVLW	1
$0042	$0540			ANDWF	STACK_0, 0
$0043	$00C1			MOVWF	STACK_1
$0044	$0841			MOVF	STACK_1, 0
$0045	$3A00			XORLW	0
$0046	$1D03			BTFSS	STATUS, Z
$0047	$284D			GOTO	L__custom_lower_9
;D-91_PIC16_color_changer_v-3.0.c,146 :: 		while(TMR0 < 22)	// 1.125ms
$0048	$	L__custom_lower_10:
$0048	$3016			MOVLW	22
$0049	$0201			SUBWF	TMR0, 0
$004A	$1C03			BTFSS	STATUS, C
$004B	$2848			GOTO	L__custom_lower_10
;D-91_PIC16_color_changer_v-3.0.c,149 :: 		}
$004C	$	L__custom_lower_11:
;D-91_PIC16_color_changer_v-3.0.c,151 :: 		} else {
$004C	$2851			GOTO	L__custom_lower_12
$004D	$	L__custom_lower_9:
;D-91_PIC16_color_changer_v-3.0.c,153 :: 		while(TMR0 < 44)	// 2.250ms
$004D	$	L__custom_lower_13:
$004D	$302C			MOVLW	44
$004E	$0201			SUBWF	TMR0, 0
$004F	$1C03			BTFSS	STATUS, C
$0050	$284D			GOTO	L__custom_lower_13
;D-91_PIC16_color_changer_v-3.0.c,156 :: 		}
$0051	$	L__custom_lower_14:
;D-91_PIC16_color_changer_v-3.0.c,158 :: 		}//if (((custom_code_a >> i) & 0x01) == 0)
$0051	$	L__custom_lower_12:
;D-91_PIC16_color_changer_v-3.0.c,160 :: 		}//for(i = 0; i < bit_len)
$0051	$	L__custom_lower_6:
;D-91_PIC16_color_changer_v-3.0.c,120 :: 		for(i = 0; i < bit_len; i++)
$0051	$0A8E			INCF	_i, 1
;D-91_PIC16_color_changer_v-3.0.c,160 :: 		}//for(i = 0; i < bit_len)
$0052	$282A			GOTO	L__custom_lower_4
$0053	$	L__custom_lower_5:
;D-91_PIC16_color_changer_v-3.0.c,162 :: 		}//_custom_lower
$0053	$0008			RETURN
$00DA	$	__pulsing_u_100:
;D-91_PIC16_color_changer_v-3.0.c,270 :: 		_pulsing_u_100()
;D-91_PIC16_color_changer_v-3.0.c,273 :: 		PORTA = 0x00;
$00DA	$1303			BCF	STATUS, RP1
$00DB	$1283			BCF	STATUS, RP0
$00DC	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,275 :: 		PORTA = 0x01; Delay_us(100);
$00DD	$3001			MOVLW	1
$00DE	$0085			MOVWF	PORTA
$00DF	$30A6			MOVLW	166
$00E0	$00CA			MOVWF	STACK_10
$00E1	$0BCA			DECFSZ	STACK_10, F
$00E2	$28E1			GOTO	$-1
$00E3	$0000			NOP
;D-91_PIC16_color_changer_v-3.0.c,277 :: 		PORTA = 0x00; Delay_us(100);
$00E4	$0185			CLRF	PORTA, 1
$00E5	$30A6			MOVLW	166
$00E6	$00CA			MOVWF	STACK_10
$00E7	$0BCA			DECFSZ	STACK_10, F
$00E8	$28E7			GOTO	$-1
$00E9	$0000			NOP
;D-91_PIC16_color_changer_v-3.0.c,279 :: 		}//_pulsing_u_100
$00EA	$0008			RETURN
$007A	$	__Delay_50ms:
;D-91_PIC16_color_changer_v-3.0.c,165 :: 		_Delay_50ms(void) {
;D-91_PIC16_color_changer_v-3.0.c,167 :: 		Delay_ms(50);
$007A	$3002			MOVLW	2
$007B	$1303			BCF	STATUS, RP1
$007C	$1283			BCF	STATUS, RP0
$007D	$00CC			MOVWF	STACK_12
$007E	$30FF			MOVLW	255
$007F	$00CB			MOVWF	STACK_11
$0080	$30FF			MOVLW	255
$0081	$00CA			MOVWF	STACK_10
$0082	$0BCC			DECFSZ	STACK_12, F
$0083	$2885			GOTO	$+2
$0084	$288C			GOTO	$+8
$0085	$0BCB			DECFSZ	STACK_11, F
$0086	$2888			GOTO	$+2
$0087	$288B			GOTO	$+4
$0088	$0BCA			DECFSZ	STACK_10, F
$0089	$2888			GOTO	$-1
$008A	$2885			GOTO	$-5
$008B	$2882			GOTO	$-9
$008C	$3046			MOVLW	70
$008D	$00CB			MOVWF	STACK_11
$008E	$30FF			MOVLW	255
$008F	$00CA			MOVWF	STACK_10
$0090	$0BCB			DECFSZ	STACK_11, F
$0091	$2893			GOTO	$+2
$0092	$2896			GOTO	$+4
$0093	$0BCA			DECFSZ	STACK_10, F
$0094	$2893			GOTO	$-1
$0095	$2890			GOTO	$-5
$0096	$30CF			MOVLW	207
$0097	$00CA			MOVWF	STACK_10
$0098	$0BCA			DECFSZ	STACK_10, F
$0099	$2898			GOTO	$-1
$009A	$0000			NOP
;D-91_PIC16_color_changer_v-3.0.c,169 :: 		}
$009B	$0008			RETURN
$0054	$	__Opearations:
;D-91_PIC16_color_changer_v-3.0.c,172 :: 		_Opearations() {
;D-91_PIC16_color_changer_v-3.0.c,174 :: 		while(PORTB_0_H) {
$0054	$	L__Opearations_15:
$0054	$3001			MOVLW	1
$0055	$1303			BCF	STATUS, RP1
$0056	$1283			BCF	STATUS, RP0
$0057	$0506			ANDWF	PORTB, 0
$0058	$00C1			MOVWF	STACK_1
$0059	$0841			MOVF	STACK_1, 0
$005A	$3A01			XORLW	1
$005B	$1D03			BTFSS	STATUS, Z
$005C	$2879			GOTO	L__Opearations_16
;D-91_PIC16_color_changer_v-3.0.c,182 :: 		if ((PORTB_1_H) && !(PORTB_2_H) && !(PORTB_3_H)) {
$005D	$3002			MOVLW	2
$005E	$0506			ANDWF	PORTB, 0
$005F	$00C1			MOVWF	STACK_1
$0060	$0841			MOVF	STACK_1, 0
$0061	$3A02			XORLW	2
$0062	$1D03			BTFSS	STATUS, Z
$0063	$2877			GOTO	L__Opearations_19
$0064	$3004			MOVLW	4
$0065	$0506			ANDWF	PORTB, 0
$0066	$00C1			MOVWF	STACK_1
$0067	$0841			MOVF	STACK_1, 0
$0068	$3A04			XORLW	4
$0069	$1903			BTFSC	STATUS, Z
$006A	$2877			GOTO	L__Opearations_19
$006B	$3008			MOVLW	8
$006C	$0506			ANDWF	PORTB, 0
$006D	$00C1			MOVWF	STACK_1
$006E	$0841			MOVF	STACK_1, 0
$006F	$3A08			XORLW	8
$0070	$1903			BTFSC	STATUS, Z
$0071	$2877			GOTO	L__Opearations_19
$0072	$	L124_ex_L__Opearations_19:
;D-91_PIC16_color_changer_v-3.0.c,184 :: 		_reader();
$0072	$20BE			CALL	__reader
;D-91_PIC16_color_changer_v-3.0.c,186 :: 		_custom_lower();
$0073	$2023			CALL	__custom_lower
;D-91_PIC16_color_changer_v-3.0.c,189 :: 		_pulsing_u_100();
$0074	$20DA			CALL	__pulsing_u_100
;D-91_PIC16_color_changer_v-3.0.c,193 :: 		_Delay_50ms();
$0075	$207A			CALL	__Delay_50ms
;D-91_PIC16_color_changer_v-3.0.c,195 :: 		} else {
$0076	$2878			GOTO	L__Opearations_20
$0077	$	L__Opearations_19:
;D-91_PIC16_color_changer_v-3.0.c,197 :: 		OUT_OFF;
$0077	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,199 :: 		}
$0078	$	L__Opearations_20:
;D-91_PIC16_color_changer_v-3.0.c,201 :: 		}//while(PORTB_0_H)
$0078	$2854			GOTO	L__Opearations_15
$0079	$	L__Opearations_16:
;D-91_PIC16_color_changer_v-3.0.c,203 :: 		}//_Opearations
$0079	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$0090			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008F			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0091			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0092			MOVWF	STSAVED_0
;D-91_PIC16_color_changer_v-3.0.c,205 :: 		void interrupt(void)
;D-91_PIC16_color_changer_v-3.0.c,216 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-3.0.c,217 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-3.0.c,218 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-3.0.c,220 :: 		_Opearations();
$0015	$2054			CALL	__Opearations
;D-91_PIC16_color_changer_v-3.0.c,228 :: 		INTCON |= 0x10;		  // INT interrupt => permitted
$0016	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-3.0.c,229 :: 		INTCON |= 0x80;
$0017	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-3.0.c,231 :: 		}//void interrupt(void)
$0018	$	L_Interrupt_end:
$0018	$0812			MOVF	STSAVED_0, 0
$0019	$00C0			MOVWF	STACK_0
$001A	$0811			MOVF	?savePCLATH, 0
$001B	$008A			MOVWF	PCLATH
$001C	$080F			MOVF	?saveFSR, 0
$001D	$0084			MOVWF	FSR
$001E	$0E10			SWAPF	?saveSTATUS, 0
$001F	$0083			MOVWF	STATUS
$0020	$0ECF			SWAPF	STACK_15, 1
$0021	$0E4F			SWAPF	STACK_15, 0
$0022	$0009			RETFIE
$009C	$	_main:
;D-91_PIC16_color_changer_v-3.0.c,234 :: 		void main(void)
;D-91_PIC16_color_changer_v-3.0.c,238 :: 		TRISA     = 0x00;
$009C	$1303			BCF	STATUS, RP1
$009D	$1683			BSF	STATUS, RP0
$009E	$0185			CLRF	TRISA, 1
;D-91_PIC16_color_changer_v-3.0.c,239 :: 		PORTA     = 0x00;		//0000 0010
$009F	$1283			BCF	STATUS, RP0
$00A0	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,241 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$00A1	$30FF			MOVLW	255
$00A2	$1683			BSF	STATUS, RP0
$00A3	$0086			MOVWF	TRISB
;D-91_PIC16_color_changer_v-3.0.c,243 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$00A4	$307F			MOVLW	127
$00A5	$0501			ANDWF	OPTION_REG, 0
$00A6	$00C0			MOVWF	STACK_0
$00A7	$0840			MOVF	STACK_0, 0
$00A8	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,244 :: 		OPTION_REG &= 0xFF;	// INT interrupt => by 0V ~> 5V
$00A9	$30FF			MOVLW	255
$00AA	$05C0			ANDWF	STACK_0, 1
$00AB	$0840			MOVF	STACK_0, 0
$00AC	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,247 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$00AD	$30DF			MOVLW	223
$00AE	$05C0			ANDWF	STACK_0, 1
$00AF	$0840			MOVF	STACK_0, 0
$00B0	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,248 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$00B1	$30F0			MOVLW	240
$00B2	$05C0			ANDWF	STACK_0, 1
$00B3	$0840			MOVF	STACK_0, 0
$00B4	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,249 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$00B5	$3007			MOVLW	7
$00B6	$0440			IORWF	STACK_0, 0
$00B7	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,257 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$00B8	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-3.0.c,258 :: 		INTCON |= 0x80;
$00B9	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-3.0.c,260 :: 		while(1)
$00BA	$	L_main_21:
;D-91_PIC16_color_changer_v-3.0.c,263 :: 		OUT_OFF;
$00BA	$1283			BCF	STATUS, RP0
$00BB	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,265 :: 		}//while(1)
$00BC	$28BA			GOTO	L_main_21
;D-91_PIC16_color_changer_v-3.0.c,267 :: 		}//void main(void)
$00BD	$28BD			GOTO	$
