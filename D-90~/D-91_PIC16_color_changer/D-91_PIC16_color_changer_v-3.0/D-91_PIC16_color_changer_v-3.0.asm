;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/09/01 11:53:32
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2846			GOTO	_main
$0068	$	__reader:
;D-91_PIC16_color_changer_v-3.0.c,53 :: 		void _reader(void)
;D-91_PIC16_color_changer_v-3.0.c,56 :: 		TMR0     = 0;
$0068	$1303			BCF	STATUS, RP1
$0069	$1283			BCF	STATUS, RP0
$006A	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-3.0.c,60 :: 		while(MS90)         // 9.0ms
$006B	$	L__reader_0:
$006B	$30B0			MOVLW	176
$006C	$0201			SUBWF	TMR0, 0
$006D	$1803			BTFSC	STATUS, C
$006E	$287D			GOTO	L__reader_1
;D-91_PIC16_color_changer_v-3.0.c,63 :: 		PORTA        = 0x01;   // RA0 => on
$006F	$3001			MOVLW	1
$0070	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-3.0.c,64 :: 		Delay_us(9);   // 8.8us
$0071	$300E			MOVLW	14
$0072	$00CA			MOVWF	STACK_10
$0073	$0BCA			DECFSZ	STACK_10, F
$0074	$2873			GOTO	$-1
$0075	$0000			NOP
$0076	$0000			NOP
;D-91_PIC16_color_changer_v-3.0.c,66 :: 		PORTA        = 0x00;   // RA0 => off
$0077	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,67 :: 		Delay_us(17);   // 26.3us - 8.8us =% 17us
$0078	$301C			MOVLW	28
$0079	$00CA			MOVWF	STACK_10
$007A	$0BCA			DECFSZ	STACK_10, F
$007B	$287A			GOTO	$-1
;D-91_PIC16_color_changer_v-3.0.c,69 :: 		}
$007C	$286B			GOTO	L__reader_0
$007D	$	L__reader_1:
;D-91_PIC16_color_changer_v-3.0.c,71 :: 		TMR0 = 0;
$007D	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-3.0.c,72 :: 		PORTA = 0x00;
$007E	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,74 :: 		while(MS45)       // 4.5ms
$007F	$	L__reader_2:
$007F	$3058			MOVLW	88
$0080	$0201			SUBWF	TMR0, 0
$0081	$1C03			BTFSS	STATUS, C
$0082	$287F			GOTO	L__reader_2
;D-91_PIC16_color_changer_v-3.0.c,78 :: 		}
$0083	$	L__reader_3:
;D-91_PIC16_color_changer_v-3.0.c,80 :: 		}//void _reader(void)
$0083	$0008			RETURN
$0023	$	__Opearations:
;D-91_PIC16_color_changer_v-3.0.c,83 :: 		_Opearations() {
;D-91_PIC16_color_changer_v-3.0.c,85 :: 		while(PORTB_0_H) {
$0023	$	L__Opearations_4:
$0023	$3001			MOVLW	1
$0024	$1303			BCF	STATUS, RP1
$0025	$1283			BCF	STATUS, RP0
$0026	$0506			ANDWF	PORTB, 0
$0027	$00C1			MOVWF	STACK_1
$0028	$0841			MOVF	STACK_1, 0
$0029	$3A01			XORLW	1
$002A	$1D03			BTFSS	STATUS, Z
$002B	$2845			GOTO	L__Opearations_5
;D-91_PIC16_color_changer_v-3.0.c,93 :: 		if ((PORTB_1_H) && !(PORTB_2_H) && !(PORTB_3_H)) {
$002C	$3002			MOVLW	2
$002D	$0506			ANDWF	PORTB, 0
$002E	$00C1			MOVWF	STACK_1
$002F	$0841			MOVF	STACK_1, 0
$0030	$3A02			XORLW	2
$0031	$1D03			BTFSS	STATUS, Z
$0032	$2843			GOTO	L__Opearations_8
$0033	$3004			MOVLW	4
$0034	$0506			ANDWF	PORTB, 0
$0035	$00C1			MOVWF	STACK_1
$0036	$0841			MOVF	STACK_1, 0
$0037	$3A04			XORLW	4
$0038	$1903			BTFSC	STATUS, Z
$0039	$2843			GOTO	L__Opearations_8
$003A	$3008			MOVLW	8
$003B	$0506			ANDWF	PORTB, 0
$003C	$00C1			MOVWF	STACK_1
$003D	$0841			MOVF	STACK_1, 0
$003E	$3A08			XORLW	8
$003F	$1903			BTFSC	STATUS, Z
$0040	$2843			GOTO	L__Opearations_8
$0041	$	L45_ex_L__Opearations_8:
;D-91_PIC16_color_changer_v-3.0.c,95 :: 		_reader();
$0041	$2068			CALL	__reader
;D-91_PIC16_color_changer_v-3.0.c,97 :: 		} else {
$0042	$2844			GOTO	L__Opearations_9
$0043	$	L__Opearations_8:
;D-91_PIC16_color_changer_v-3.0.c,99 :: 		OUT_OFF;
$0043	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,101 :: 		}
$0044	$	L__Opearations_9:
;D-91_PIC16_color_changer_v-3.0.c,103 :: 		}//while(PORTB_0_H)
$0044	$2823			GOTO	L__Opearations_4
$0045	$	L__Opearations_5:
;D-91_PIC16_color_changer_v-3.0.c,105 :: 		}//_Opearations
$0045	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008D			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008C			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$008E			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$008F			MOVWF	STSAVED_0
;D-91_PIC16_color_changer_v-3.0.c,107 :: 		void interrupt(void)
;D-91_PIC16_color_changer_v-3.0.c,118 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-3.0.c,119 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-3.0.c,120 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-3.0.c,122 :: 		_Opearations();
$0015	$2023			CALL	__Opearations
;D-91_PIC16_color_changer_v-3.0.c,130 :: 		INTCON |= 0x10;		  // INT interrupt => permitted
$0016	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-3.0.c,131 :: 		INTCON |= 0x80;
$0017	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-3.0.c,133 :: 		}//void interrupt(void)
$0018	$	L_Interrupt_end:
$0018	$080F			MOVF	STSAVED_0, 0
$0019	$00C0			MOVWF	STACK_0
$001A	$080E			MOVF	?savePCLATH, 0
$001B	$008A			MOVWF	PCLATH
$001C	$080C			MOVF	?saveFSR, 0
$001D	$0084			MOVWF	FSR
$001E	$0E0D			SWAPF	?saveSTATUS, 0
$001F	$0083			MOVWF	STATUS
$0020	$0ECF			SWAPF	STACK_15, 1
$0021	$0E4F			SWAPF	STACK_15, 0
$0022	$0009			RETFIE
$0046	$	_main:
;D-91_PIC16_color_changer_v-3.0.c,136 :: 		void main(void)
;D-91_PIC16_color_changer_v-3.0.c,140 :: 		TRISA     = 0x00;
$0046	$1303			BCF	STATUS, RP1
$0047	$1683			BSF	STATUS, RP0
$0048	$0185			CLRF	TRISA, 1
;D-91_PIC16_color_changer_v-3.0.c,141 :: 		PORTA     = 0x00;		//0000 0010
$0049	$1283			BCF	STATUS, RP0
$004A	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,143 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$004B	$30FF			MOVLW	255
$004C	$1683			BSF	STATUS, RP0
$004D	$0086			MOVWF	TRISB
;D-91_PIC16_color_changer_v-3.0.c,145 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$004E	$307F			MOVLW	127
$004F	$0501			ANDWF	OPTION_REG, 0
$0050	$00C0			MOVWF	STACK_0
$0051	$0840			MOVF	STACK_0, 0
$0052	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,146 :: 		OPTION_REG &= 0xFF;	// INT interrupt => by 0V ~> 5V
$0053	$30FF			MOVLW	255
$0054	$05C0			ANDWF	STACK_0, 1
$0055	$0840			MOVF	STACK_0, 0
$0056	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,149 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$0057	$30DF			MOVLW	223
$0058	$05C0			ANDWF	STACK_0, 1
$0059	$0840			MOVF	STACK_0, 0
$005A	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,150 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$005B	$30F0			MOVLW	240
$005C	$05C0			ANDWF	STACK_0, 1
$005D	$0840			MOVF	STACK_0, 0
$005E	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,151 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$005F	$3007			MOVLW	7
$0060	$0440			IORWF	STACK_0, 0
$0061	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.0.c,159 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$0062	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-3.0.c,160 :: 		INTCON |= 0x80;
$0063	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-3.0.c,162 :: 		while(1)
$0064	$	L_main_10:
;D-91_PIC16_color_changer_v-3.0.c,165 :: 		OUT_OFF;
$0064	$1283			BCF	STATUS, RP0
$0065	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.0.c,167 :: 		}//while(1)
$0066	$2864			GOTO	L_main_10
;D-91_PIC16_color_changer_v-3.0.c,169 :: 		}//void main(void)
$0067	$2867			GOTO	$
