;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/09/05 19:10:56
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$28A0			GOTO	_main
$00EF	$	__pulse_Modulation:
;D-91_PIC16_color_changer_v-3.1.c,71 :: 		_pulse_Modulation(void)
;D-91_PIC16_color_changer_v-3.1.c,75 :: 		PORTA        = 0x01;   // RA0 => on
$00EF	$3001			MOVLW	1
$00F0	$1303			BCF	STATUS, RP1
$00F1	$1283			BCF	STATUS, RP0
$00F2	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-3.1.c,76 :: 		Delay_us(9);   // 8.8us
$00F3	$300E			MOVLW	14
$00F4	$00CA			MOVWF	STACK_10
$00F5	$0BCA			DECFSZ	STACK_10, F
$00F6	$28F5			GOTO	$-1
$00F7	$0000			NOP
$00F8	$0000			NOP
;D-91_PIC16_color_changer_v-3.1.c,78 :: 		PORTA        = 0x00;   // RA0 => off
$00F9	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.1.c,79 :: 		Delay_us(17);   // 26.3us - 8.8us =% 17us
$00FA	$301C			MOVLW	28
$00FB	$00CA			MOVWF	STACK_10
$00FC	$0BCA			DECFSZ	STACK_10, F
$00FD	$28FC			GOTO	$-1
;D-91_PIC16_color_changer_v-3.1.c,81 :: 		}
$00FE	$0008			RETURN
$00C2	$	__reader:
;D-91_PIC16_color_changer_v-3.1.c,84 :: 		_reader(void)
;D-91_PIC16_color_changer_v-3.1.c,87 :: 		TMR0     = 0;
$00C2	$1303			BCF	STATUS, RP1
$00C3	$1283			BCF	STATUS, RP0
$00C4	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-3.1.c,91 :: 		while(MS90)         // 9.0ms
$00C5	$	L__reader_0:
$00C5	$30B0			MOVLW	176
$00C6	$0201			SUBWF	TMR0, 0
$00C7	$1803			BTFSC	STATUS, C
$00C8	$28D7			GOTO	L__reader_1
;D-91_PIC16_color_changer_v-3.1.c,94 :: 		PORTA        = 0x01;   // RA0 => on
$00C9	$3001			MOVLW	1
$00CA	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-3.1.c,95 :: 		Delay_us(9);   // 8.8us
$00CB	$300E			MOVLW	14
$00CC	$00CA			MOVWF	STACK_10
$00CD	$0BCA			DECFSZ	STACK_10, F
$00CE	$28CD			GOTO	$-1
$00CF	$0000			NOP
$00D0	$0000			NOP
;D-91_PIC16_color_changer_v-3.1.c,97 :: 		PORTA        = 0x00;   // RA0 => off
$00D1	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.1.c,98 :: 		Delay_us(17);   // 26.3us - 8.8us =% 17us
$00D2	$301C			MOVLW	28
$00D3	$00CA			MOVWF	STACK_10
$00D4	$0BCA			DECFSZ	STACK_10, F
$00D5	$28D4			GOTO	$-1
;D-91_PIC16_color_changer_v-3.1.c,100 :: 		}
$00D6	$28C5			GOTO	L__reader_0
$00D7	$	L__reader_1:
;D-91_PIC16_color_changer_v-3.1.c,102 :: 		TMR0 = 0;
$00D7	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-3.1.c,103 :: 		PORTA = 0x00;
$00D8	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.1.c,105 :: 		while(MS45)       // 4.5ms
$00D9	$	L__reader_2:
$00D9	$3058			MOVLW	88
$00DA	$0201			SUBWF	TMR0, 0
$00DB	$1C03			BTFSS	STATUS, C
$00DC	$28D9			GOTO	L__reader_2
;D-91_PIC16_color_changer_v-3.1.c,109 :: 		}
$00DD	$	L__reader_3:
;D-91_PIC16_color_changer_v-3.1.c,111 :: 		}//void _reader(void)
$00DD	$0008			RETURN
$0023	$	__custom_lower_num:
;D-91_PIC16_color_changer_v-3.1.c,167 :: 		_custom_lower_num(int code)
;D-91_PIC16_color_changer_v-3.1.c,170 :: 		bit_len = 4;
$0023	$3004			MOVLW	4
$0024	$1303			BCF	STATUS, RP1
$0025	$1283			BCF	STATUS, RP0
$0026	$008C			MOVWF	_bit_len
;D-91_PIC16_color_changer_v-3.1.c,172 :: 		custom_code_a = code;
$0027	$0812			MOVF	FARG__custom_lower_num+0, 0
$0028	$008D			MOVWF	_custom_code_a
;D-91_PIC16_color_changer_v-3.1.c,176 :: 		for(i = 0; i < bit_len; i++)
$0029	$018E			CLRF	_i, 1
$002A	$	L__custom_lower_num_15:
$002A	$080C			MOVF	_bit_len, 0
$002B	$020E			SUBWF	_i, 0
$002C	$1803			BTFSC	STATUS, C
$002D	$2853			GOTO	L__custom_lower_num_16
;D-91_PIC16_color_changer_v-3.1.c,184 :: 		RESET_TMR;
$002E	$0181			CLRF	TMR0, 1
;D-91_PIC16_color_changer_v-3.1.c,186 :: 		while(TMR0 < 11)	// 0.56ms
$002F	$	L__custom_lower_num_18:
$002F	$300B			MOVLW	11
$0030	$0201			SUBWF	TMR0, 0
$0031	$1803			BTFSC	STATUS, C
$0032	$2835			GOTO	L__custom_lower_num_19
;D-91_PIC16_color_changer_v-3.1.c,188 :: 		_pulse_Modulation();
$0033	$20EF			CALL	__pulse_Modulation
;D-91_PIC16_color_changer_v-3.1.c,190 :: 		}
$0034	$282F			GOTO	L__custom_lower_num_18
$0035	$	L__custom_lower_num_19:
;D-91_PIC16_color_changer_v-3.1.c,197 :: 		PORTA = 0x00;
$0035	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.1.c,199 :: 		if (((custom_code_a >> i) & 0x01) == 0)
$0036	$080E			MOVF	_i, 0
$0037	$00C1			MOVWF	STACK_1
$0038	$080D			MOVF	_custom_code_a, 0
$0039	$00C0			MOVWF	STACK_0
$003A	$0841			MOVF	STACK_1, 0
$003B	$	L__custom_lower_num_36:
$003B	$1903			BTFSC	STATUS, Z
$003C	$2841			GOTO	L__custom_lower_num_37
$003D	$0CC0			RRF	STACK_0, 1
$003E	$13C0			BCF	STACK_0, 7
$003F	$3FFF			ADDLW	255
$0040	$283B			GOTO	L__custom_lower_num_36
$0041	$	L__custom_lower_num_37:
$0041	$3001			MOVLW	1
$0042	$0540			ANDWF	STACK_0, 0
$0043	$00C1			MOVWF	STACK_1
$0044	$0841			MOVF	STACK_1, 0
$0045	$3A00			XORLW	0
$0046	$1D03			BTFSS	STATUS, Z
$0047	$284D			GOTO	L__custom_lower_num_20
;D-91_PIC16_color_changer_v-3.1.c,202 :: 		while(TMR0 < 22)	// 1.125ms
$0048	$	L__custom_lower_num_21:
$0048	$3016			MOVLW	22
$0049	$0201			SUBWF	TMR0, 0
$004A	$1C03			BTFSS	STATUS, C
$004B	$2848			GOTO	L__custom_lower_num_21
;D-91_PIC16_color_changer_v-3.1.c,205 :: 		}
$004C	$	L__custom_lower_num_22:
;D-91_PIC16_color_changer_v-3.1.c,207 :: 		} else {
$004C	$2851			GOTO	L__custom_lower_num_23
$004D	$	L__custom_lower_num_20:
;D-91_PIC16_color_changer_v-3.1.c,209 :: 		while(TMR0 < 44)	// 2.250ms
$004D	$	L__custom_lower_num_24:
$004D	$302C			MOVLW	44
$004E	$0201			SUBWF	TMR0, 0
$004F	$1C03			BTFSS	STATUS, C
$0050	$284D			GOTO	L__custom_lower_num_24
;D-91_PIC16_color_changer_v-3.1.c,212 :: 		}
$0051	$	L__custom_lower_num_25:
;D-91_PIC16_color_changer_v-3.1.c,214 :: 		}//if (((custom_code_a >> i) & 0x01) == 0)
$0051	$	L__custom_lower_num_23:
;D-91_PIC16_color_changer_v-3.1.c,216 :: 		}//for(i = 0; i < bit_len)
$0051	$	L__custom_lower_num_17:
;D-91_PIC16_color_changer_v-3.1.c,176 :: 		for(i = 0; i < bit_len; i++)
$0051	$0A8E			INCF	_i, 1
;D-91_PIC16_color_changer_v-3.1.c,216 :: 		}//for(i = 0; i < bit_len)
$0052	$282A			GOTO	L__custom_lower_num_15
$0053	$	L__custom_lower_num_16:
;D-91_PIC16_color_changer_v-3.1.c,218 :: 		}//_custom_lower
$0053	$0008			RETURN
$00DE	$	__pulsing_u_100:
;D-91_PIC16_color_changer_v-3.1.c,328 :: 		_pulsing_u_100()
;D-91_PIC16_color_changer_v-3.1.c,331 :: 		PORTA = 0x00;
$00DE	$1303			BCF	STATUS, RP1
$00DF	$1283			BCF	STATUS, RP0
$00E0	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.1.c,333 :: 		PORTA = 0x01; Delay_us(100);
$00E1	$3001			MOVLW	1
$00E2	$0085			MOVWF	PORTA
$00E3	$30A6			MOVLW	166
$00E4	$00CA			MOVWF	STACK_10
$00E5	$0BCA			DECFSZ	STACK_10, F
$00E6	$28E5			GOTO	$-1
$00E7	$0000			NOP
;D-91_PIC16_color_changer_v-3.1.c,335 :: 		PORTA = 0x00; Delay_us(100);
$00E8	$0185			CLRF	PORTA, 1
$00E9	$30A6			MOVLW	166
$00EA	$00CA			MOVWF	STACK_10
$00EB	$0BCA			DECFSZ	STACK_10, F
$00EC	$28EB			GOTO	$-1
$00ED	$0000			NOP
;D-91_PIC16_color_changer_v-3.1.c,337 :: 		}//_pulsing_u_100
$00EE	$0008			RETURN
$007E	$	__Delay_50ms:
;D-91_PIC16_color_changer_v-3.1.c,221 :: 		_Delay_50ms(void) {
;D-91_PIC16_color_changer_v-3.1.c,223 :: 		Delay_ms(50);
$007E	$3002			MOVLW	2
$007F	$1303			BCF	STATUS, RP1
$0080	$1283			BCF	STATUS, RP0
$0081	$00CC			MOVWF	STACK_12
$0082	$30FF			MOVLW	255
$0083	$00CB			MOVWF	STACK_11
$0084	$30FF			MOVLW	255
$0085	$00CA			MOVWF	STACK_10
$0086	$0BCC			DECFSZ	STACK_12, F
$0087	$2889			GOTO	$+2
$0088	$2890			GOTO	$+8
$0089	$0BCB			DECFSZ	STACK_11, F
$008A	$288C			GOTO	$+2
$008B	$288F			GOTO	$+4
$008C	$0BCA			DECFSZ	STACK_10, F
$008D	$288C			GOTO	$-1
$008E	$2889			GOTO	$-5
$008F	$2886			GOTO	$-9
$0090	$3046			MOVLW	70
$0091	$00CB			MOVWF	STACK_11
$0092	$30FF			MOVLW	255
$0093	$00CA			MOVWF	STACK_10
$0094	$0BCB			DECFSZ	STACK_11, F
$0095	$2897			GOTO	$+2
$0096	$289A			GOTO	$+4
$0097	$0BCA			DECFSZ	STACK_10, F
$0098	$2897			GOTO	$-1
$0099	$2894			GOTO	$-5
$009A	$30CF			MOVLW	207
$009B	$00CA			MOVWF	STACK_10
$009C	$0BCA			DECFSZ	STACK_10, F
$009D	$289C			GOTO	$-1
$009E	$0000			NOP
;D-91_PIC16_color_changer_v-3.1.c,225 :: 		}
$009F	$0008			RETURN
$0054	$	__Opearations:
;D-91_PIC16_color_changer_v-3.1.c,228 :: 		_Opearations() {
;D-91_PIC16_color_changer_v-3.1.c,230 :: 		while(PORTB_0_H) {
$0054	$	L__Opearations_26:
$0054	$3001			MOVLW	1
$0055	$1303			BCF	STATUS, RP1
$0056	$1283			BCF	STATUS, RP0
$0057	$0506			ANDWF	PORTB, 0
$0058	$00C1			MOVWF	STACK_1
$0059	$0841			MOVF	STACK_1, 0
$005A	$3A01			XORLW	1
$005B	$1D03			BTFSS	STATUS, Z
$005C	$287D			GOTO	L__Opearations_27
;D-91_PIC16_color_changer_v-3.1.c,238 :: 		if ((PORTB_1_H) && !(PORTB_2_H) && !(PORTB_3_H)) {
$005D	$3002			MOVLW	2
$005E	$0506			ANDWF	PORTB, 0
$005F	$00C1			MOVWF	STACK_1
$0060	$0841			MOVF	STACK_1, 0
$0061	$3A02			XORLW	2
$0062	$1D03			BTFSS	STATUS, Z
$0063	$287B			GOTO	L__Opearations_30
$0064	$3004			MOVLW	4
$0065	$0506			ANDWF	PORTB, 0
$0066	$00C1			MOVWF	STACK_1
$0067	$0841			MOVF	STACK_1, 0
$0068	$3A04			XORLW	4
$0069	$1903			BTFSC	STATUS, Z
$006A	$287B			GOTO	L__Opearations_30
$006B	$3008			MOVLW	8
$006C	$0506			ANDWF	PORTB, 0
$006D	$00C1			MOVWF	STACK_1
$006E	$0841			MOVF	STACK_1, 0
$006F	$3A08			XORLW	8
$0070	$1903			BTFSC	STATUS, Z
$0071	$287B			GOTO	L__Opearations_30
$0072	$	L156_ex_L__Opearations_30:
;D-91_PIC16_color_changer_v-3.1.c,240 :: 		_reader();
$0072	$20C2			CALL	__reader
;D-91_PIC16_color_changer_v-3.1.c,242 :: 		_custom_lower_num(6);
$0073	$3006			MOVLW	6
$0074	$0092			MOVWF	FARG__custom_lower_num+0
$0075	$3000			MOVLW	0
$0076	$0093			MOVWF	FARG__custom_lower_num+1
$0077	$2023			CALL	__custom_lower_num
;D-91_PIC16_color_changer_v-3.1.c,247 :: 		_pulsing_u_100();
$0078	$20DE			CALL	__pulsing_u_100
;D-91_PIC16_color_changer_v-3.1.c,251 :: 		_Delay_50ms();
$0079	$207E			CALL	__Delay_50ms
;D-91_PIC16_color_changer_v-3.1.c,253 :: 		} else {
$007A	$287C			GOTO	L__Opearations_31
$007B	$	L__Opearations_30:
;D-91_PIC16_color_changer_v-3.1.c,255 :: 		OUT_OFF;
$007B	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.1.c,257 :: 		}
$007C	$	L__Opearations_31:
;D-91_PIC16_color_changer_v-3.1.c,259 :: 		}//while(PORTB_0_H)
$007C	$2854			GOTO	L__Opearations_26
$007D	$	L__Opearations_27:
;D-91_PIC16_color_changer_v-3.1.c,261 :: 		}//_Opearations
$007D	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$0090			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008F			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0091			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0094			MOVWF	STSAVED_0
;D-91_PIC16_color_changer_v-3.1.c,263 :: 		void interrupt(void)
;D-91_PIC16_color_changer_v-3.1.c,274 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-3.1.c,275 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-3.1.c,276 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-3.1.c,278 :: 		_Opearations();
$0015	$2054			CALL	__Opearations
;D-91_PIC16_color_changer_v-3.1.c,286 :: 		INTCON |= 0x10;		  // INT interrupt => permitted
$0016	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-3.1.c,287 :: 		INTCON |= 0x80;
$0017	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-3.1.c,289 :: 		}//void interrupt(void)
$0018	$	L_Interrupt_end:
$0018	$0814			MOVF	STSAVED_0, 0
$0019	$00C0			MOVWF	STACK_0
$001A	$0811			MOVF	?savePCLATH, 0
$001B	$008A			MOVWF	PCLATH
$001C	$080F			MOVF	?saveFSR, 0
$001D	$0084			MOVWF	FSR
$001E	$0E10			SWAPF	?saveSTATUS, 0
$001F	$0083			MOVWF	STATUS
$0020	$0ECF			SWAPF	STACK_15, 1
$0021	$0E4F			SWAPF	STACK_15, 0
$0022	$0009			RETFIE
$00A0	$	_main:
;D-91_PIC16_color_changer_v-3.1.c,292 :: 		void main(void)
;D-91_PIC16_color_changer_v-3.1.c,296 :: 		TRISA     = 0x00;
$00A0	$1303			BCF	STATUS, RP1
$00A1	$1683			BSF	STATUS, RP0
$00A2	$0185			CLRF	TRISA, 1
;D-91_PIC16_color_changer_v-3.1.c,297 :: 		PORTA     = 0x00;		//0000 0010
$00A3	$1283			BCF	STATUS, RP0
$00A4	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.1.c,299 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$00A5	$30FF			MOVLW	255
$00A6	$1683			BSF	STATUS, RP0
$00A7	$0086			MOVWF	TRISB
;D-91_PIC16_color_changer_v-3.1.c,301 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$00A8	$307F			MOVLW	127
$00A9	$0501			ANDWF	OPTION_REG, 0
$00AA	$00C0			MOVWF	STACK_0
$00AB	$0840			MOVF	STACK_0, 0
$00AC	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.1.c,302 :: 		OPTION_REG &= 0xFF;	// INT interrupt => by 0V ~> 5V
$00AD	$30FF			MOVLW	255
$00AE	$05C0			ANDWF	STACK_0, 1
$00AF	$0840			MOVF	STACK_0, 0
$00B0	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.1.c,305 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$00B1	$30DF			MOVLW	223
$00B2	$05C0			ANDWF	STACK_0, 1
$00B3	$0840			MOVF	STACK_0, 0
$00B4	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.1.c,306 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$00B5	$30F0			MOVLW	240
$00B6	$05C0			ANDWF	STACK_0, 1
$00B7	$0840			MOVF	STACK_0, 0
$00B8	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.1.c,307 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$00B9	$3007			MOVLW	7
$00BA	$0440			IORWF	STACK_0, 0
$00BB	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-3.1.c,315 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$00BC	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-3.1.c,316 :: 		INTCON |= 0x80;
$00BD	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-3.1.c,318 :: 		while(1)
$00BE	$	L_main_32:
;D-91_PIC16_color_changer_v-3.1.c,321 :: 		OUT_OFF;
$00BE	$1283			BCF	STATUS, RP0
$00BF	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-3.1.c,323 :: 		}//while(1)
$00C0	$28BE			GOTO	L_main_32
;D-91_PIC16_color_changer_v-3.1.c,325 :: 		}//void main(void)
$00C1	$28C1			GOTO	$
