;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/08/31 16:55:31
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$285B			GOTO	_main
$0023	$	__Opearations:
;D-91_PIC16_color_changer_v-1.0.c,35 :: 		void _Opearations(void) {
;D-91_PIC16_color_changer_v-1.0.c,37 :: 		while(PORTB_0_H) {
$0023	$	L__Opearations_0:
$0023	$3001			MOVLW	1
$0024	$1303			BCF	STATUS, RP1
$0025	$1283			BCF	STATUS, RP0
$0026	$0506			ANDWF	PORTB, 0
$0027	$00C1			MOVWF	STACK_1
$0028	$0841			MOVF	STACK_1, 0
$0029	$3A01			XORLW	1
$002A	$1D03			BTFSS	STATUS, Z
$002B	$285A			GOTO	L__Opearations_1
;D-91_PIC16_color_changer_v-1.0.c,40 :: 		if (PORTB_0_H_1_H) {
$002C	$3003			MOVLW	3
$002D	$0506			ANDWF	PORTB, 0
$002E	$00C1			MOVWF	STACK_1
$002F	$0841			MOVF	STACK_1, 0
$0030	$3A03			XORLW	3
$0031	$1D03			BTFSS	STATUS, Z
$0032	$2836			GOTO	L__Opearations_2
;D-91_PIC16_color_changer_v-1.0.c,45 :: 		LED_1_ON_2_ON;
$0033	$3003			MOVLW	3
$0034	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,47 :: 		} else if (PORTB_0_H && !(PORTB_1_H)) {
$0035	$2859			GOTO	L__Opearations_3
$0036	$	L__Opearations_2:
$0036	$3001			MOVLW	1
$0037	$0506			ANDWF	PORTB, 0
$0038	$00C1			MOVWF	STACK_1
$0039	$0841			MOVF	STACK_1, 0
$003A	$3A01			XORLW	1
$003B	$1D03			BTFSS	STATUS, Z
$003C	$2847			GOTO	L__Opearations_6
$003D	$3002			MOVLW	2
$003E	$0506			ANDWF	PORTB, 0
$003F	$00C1			MOVWF	STACK_1
$0040	$0841			MOVF	STACK_1, 0
$0041	$3A02			XORLW	2
$0042	$1903			BTFSC	STATUS, Z
$0043	$2847			GOTO	L__Opearations_6
$0044	$	L23_ex_L__Opearations_6:
;D-91_PIC16_color_changer_v-1.0.c,50 :: 		LED_1_ON;
$0044	$3001			MOVLW	1
$0045	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,53 :: 		} else if (!(PORTB_0_H) && (PORTB_1_H)) {
$0046	$2859			GOTO	L__Opearations_7
$0047	$	L__Opearations_6:
$0047	$3001			MOVLW	1
$0048	$0506			ANDWF	PORTB, 0
$0049	$00C1			MOVWF	STACK_1
$004A	$0841			MOVF	STACK_1, 0
$004B	$3A01			XORLW	1
$004C	$1903			BTFSC	STATUS, Z
$004D	$2858			GOTO	L__Opearations_10
$004E	$3002			MOVLW	2
$004F	$0506			ANDWF	PORTB, 0
$0050	$00C1			MOVWF	STACK_1
$0051	$0841			MOVF	STACK_1, 0
$0052	$3A02			XORLW	2
$0053	$1D03			BTFSS	STATUS, Z
$0054	$2858			GOTO	L__Opearations_10
$0055	$	L40_ex_L__Opearations_10:
;D-91_PIC16_color_changer_v-1.0.c,57 :: 		LED_2_ON;
$0055	$3002			MOVLW	2
$0056	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,59 :: 		} else {
$0057	$2859			GOTO	L__Opearations_11
$0058	$	L__Opearations_10:
;D-91_PIC16_color_changer_v-1.0.c,61 :: 		LEDs_OFF;
$0058	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,65 :: 		}
$0059	$	L__Opearations_11:
$0059	$	L__Opearations_7:
$0059	$	L__Opearations_3:
;D-91_PIC16_color_changer_v-1.0.c,67 :: 		}
$0059	$2823			GOTO	L__Opearations_0
$005A	$	L__Opearations_1:
;D-91_PIC16_color_changer_v-1.0.c,69 :: 		}
$005A	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008D			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008C			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$008E			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$008F			MOVWF	STSAVED_0
;D-91_PIC16_color_changer_v-1.0.c,71 :: 		void interrupt(void)
;D-91_PIC16_color_changer_v-1.0.c,82 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-1.0.c,83 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-1.0.c,84 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-1.0.c,86 :: 		_Opearations();
$0015	$2023			CALL	__Opearations
;D-91_PIC16_color_changer_v-1.0.c,94 :: 		INTCON |= 0x10;		  // INT interrupt => permitted
$0016	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-1.0.c,95 :: 		INTCON |= 0x80;
$0017	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-1.0.c,97 :: 		}//void interrupt(void)
$0018	$	L_Interrupt_end:
$0018	$080F			MOVF	STSAVED_0, 0
$0019	$00C0			MOVWF	STACK_0
$001A	$080E			MOVF	?savePCLATH, 0
$001B	$008A			MOVWF	PCLATH
$001C	$080C			MOVF	?saveFSR, 0
$001D	$0084			MOVWF	FSR
$001E	$0E0D			SWAPF	?saveSTATUS, 0
$001F	$0083			MOVWF	STATUS
$0020	$0ECF			SWAPF	STACK_15, 1
$0021	$0E4F			SWAPF	STACK_15, 0
$0022	$0009			RETFIE
$005B	$	_main:
;D-91_PIC16_color_changer_v-1.0.c,100 :: 		void main(void)
;D-91_PIC16_color_changer_v-1.0.c,104 :: 		TRISA     = 0x00;
$005B	$1303			BCF	STATUS, RP1
$005C	$1683			BSF	STATUS, RP0
$005D	$0185			CLRF	TRISA, 1
;D-91_PIC16_color_changer_v-1.0.c,105 :: 		PORTA     = 0x00;		//0000 0010
$005E	$1283			BCF	STATUS, RP0
$005F	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,107 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$0060	$30FF			MOVLW	255
$0061	$1683			BSF	STATUS, RP0
$0062	$0086			MOVWF	TRISB
;D-91_PIC16_color_changer_v-1.0.c,109 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$0063	$307F			MOVLW	127
$0064	$0501			ANDWF	OPTION_REG, 0
$0065	$00C0			MOVWF	STACK_0
$0066	$0840			MOVF	STACK_0, 0
$0067	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-1.0.c,110 :: 		OPTION_REG &= 0xFF;	// INT interrupt => by 0V ~> 5V
$0068	$30FF			MOVLW	255
$0069	$0540			ANDWF	STACK_0, 0
$006A	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-1.0.c,123 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$006B	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-1.0.c,124 :: 		INTCON |= 0x80;
$006C	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-1.0.c,126 :: 		while(1)
$006D	$	L_main_12:
;D-91_PIC16_color_changer_v-1.0.c,130 :: 		LEDs_OFF;
$006D	$1283			BCF	STATUS, RP0
$006E	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,132 :: 		}//while(1)
$006F	$286D			GOTO	L_main_12
;D-91_PIC16_color_changer_v-1.0.c,134 :: 		}//void main(void)
$0070	$2870			GOTO	$
