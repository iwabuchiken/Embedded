;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/08/31 11:52:08
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2823			GOTO	_main
$0045	$	__Opearations:
;D-91_PIC16_color_changer_v-1.0.c,38 :: 		void _Opearations(void) {
;D-91_PIC16_color_changer_v-1.0.c,40 :: 		while(PORTB & 0x01 == 0x01) {
$0045	$	L__Opearations_0:
$0045	$3001			MOVLW	1
$0046	$1303			BCF	STATUS, RP1
$0047	$1283			BCF	STATUS, RP0
$0048	$0506			ANDWF	PORTB, 0
$0049	$00C0			MOVWF	STACK_0
$004A	$1903			BTFSC	STATUS, Z
$004B	$2863			GOTO	L__Opearations_1
;D-91_PIC16_color_changer_v-1.0.c,42 :: 		if (PORTB & 0x02 == 0x02) {
$004C	$3001			MOVLW	1
$004D	$0506			ANDWF	PORTB, 0
$004E	$00C0			MOVWF	STACK_0
$004F	$1903			BTFSC	STATUS, Z
$0050	$2855			GOTO	L__Opearations_2
;D-91_PIC16_color_changer_v-1.0.c,45 :: 		LED_1_OFF;
$0051	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,46 :: 		LED_2_ON;
$0052	$3002			MOVLW	2
$0053	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,48 :: 		} else if (PORTB & 0x02 != 0x02) {
$0054	$2862			GOTO	L__Opearations_3
$0055	$	L__Opearations_2:
$0055	$3000			MOVLW	0
$0056	$0506			ANDWF	PORTB, 0
$0057	$00C0			MOVWF	STACK_0
$0058	$1903			BTFSC	STATUS, Z
$0059	$285E			GOTO	L__Opearations_4
;D-91_PIC16_color_changer_v-1.0.c,50 :: 		LED_1_ON;
$005A	$3001			MOVLW	1
$005B	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,51 :: 		LED_2_OFF;
$005C	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,53 :: 		} else {
$005D	$2862			GOTO	L__Opearations_5
$005E	$	L__Opearations_4:
;D-91_PIC16_color_changer_v-1.0.c,55 :: 		LED_1_ON;
$005E	$3001			MOVLW	1
$005F	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,56 :: 		LED_2_ON;
$0060	$3002			MOVLW	2
$0061	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,58 :: 		}
$0062	$	L__Opearations_5:
$0062	$	L__Opearations_3:
;D-91_PIC16_color_changer_v-1.0.c,60 :: 		}
$0062	$2845			GOTO	L__Opearations_0
$0063	$	L__Opearations_1:
;D-91_PIC16_color_changer_v-1.0.c,62 :: 		}
$0063	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008F			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008E			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0090			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0091			MOVWF	STSAVED_0
;D-91_PIC16_color_changer_v-1.0.c,64 :: 		void interrupt(void)
;D-91_PIC16_color_changer_v-1.0.c,75 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-1.0.c,76 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-1.0.c,77 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-1.0.c,79 :: 		_Opearations();
$0015	$2045			CALL	__Opearations
;D-91_PIC16_color_changer_v-1.0.c,87 :: 		INTCON |= 0x10;		  // INT interrupt => permitted
$0016	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-1.0.c,88 :: 		INTCON |= 0x80;
$0017	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-1.0.c,90 :: 		}//void interrupt(void)
$0018	$	L_Interrupt_end:
$0018	$0811			MOVF	STSAVED_0, 0
$0019	$00C0			MOVWF	STACK_0
$001A	$0810			MOVF	?savePCLATH, 0
$001B	$008A			MOVWF	PCLATH
$001C	$080E			MOVF	?saveFSR, 0
$001D	$0084			MOVWF	FSR
$001E	$0E0F			SWAPF	?saveSTATUS, 0
$001F	$0083			MOVWF	STATUS
$0020	$0ECF			SWAPF	STACK_15, 1
$0021	$0E4F			SWAPF	STACK_15, 0
$0022	$0009			RETFIE
$0064	$	GlobalIniD-91_PIC16_color_changer_v-1:
$0064	$3001			MOVLW	1
$0065	$1303			BCF	STATUS, RP1
$0066	$1283			BCF	STATUS, RP0
$0067	$008C			MOVWF	_LED_FLAG+0
$0068	$3008			MOVLW	8
$0069	$008D			MOVWF	_bit_len+0
$006A	$0008			RETURN
$0023	$	_main:
;D-91_PIC16_color_changer_v-1.0.c,93 :: 		void main(void)
;D-91_PIC16_color_changer_v-1.0.c,97 :: 		TRISA     = 0x00;
$0023	$1303			BCF	STATUS, RP1
$0024	$1683			BSF	STATUS, RP0
$0025	$0185			CLRF	TRISA, 1
;D-91_PIC16_color_changer_v-1.0.c,98 :: 		PORTA     = 0x00;		//0000 0010
$0026	$1283			BCF	STATUS, RP0
$0027	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,100 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$0028	$30FF			MOVLW	255
$0029	$1683			BSF	STATUS, RP0
$002A	$0086			MOVWF	TRISB
;D-91_PIC16_color_changer_v-1.0.c,102 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$002B	$307F			MOVLW	127
$002C	$0501			ANDWF	OPTION_REG, 0
$002D	$00C0			MOVWF	STACK_0
$002E	$0840			MOVF	STACK_0, 0
$002F	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-1.0.c,103 :: 		OPTION_REG &= 0xFF;	// INT interrupt => by 0V ~> 5V
$0030	$30FF			MOVLW	255
$0031	$05C0			ANDWF	STACK_0, 1
$0032	$0840			MOVF	STACK_0, 0
$0033	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-1.0.c,106 :: 		OPTION_REG &= 0xDF;	// Timer by clock
$0034	$30DF			MOVLW	223
$0035	$05C0			ANDWF	STACK_0, 1
$0036	$0840			MOVF	STACK_0, 0
$0037	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-1.0.c,107 :: 		OPTION_REG &= 0xF0;	// Prescaler => on
$0038	$30F0			MOVLW	240
$0039	$05C0			ANDWF	STACK_0, 1
$003A	$0840			MOVF	STACK_0, 0
$003B	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-1.0.c,108 :: 		OPTION_REG |= 0x07; // Prescaler => 1/256
$003C	$3007			MOVLW	7
$003D	$0440			IORWF	STACK_0, 0
$003E	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-1.0.c,116 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$003F	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-1.0.c,117 :: 		INTCON |= 0x80;
$0040	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-1.0.c,119 :: 		while(1)
$0041	$	L_main_6:
;D-91_PIC16_color_changer_v-1.0.c,123 :: 		LED_1_OFF;
$0041	$1283			BCF	STATUS, RP0
$0042	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,126 :: 		}//while(1)
$0043	$2841			GOTO	L_main_6
;D-91_PIC16_color_changer_v-1.0.c,128 :: 		}//void main(void)
$0044	$2844			GOTO	$
