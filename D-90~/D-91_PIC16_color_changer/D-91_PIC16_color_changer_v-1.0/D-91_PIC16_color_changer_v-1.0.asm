;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/09/01 11:07:22
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$288F			GOTO	_main
$0023	$	__Opearations:
;D-91_PIC16_color_changer_v-1.0.c,49 :: 		void _Opearations(void) {
;D-91_PIC16_color_changer_v-1.0.c,51 :: 		while(PORTB_0_H) {
$0023	$	L__Opearations_0:
$0023	$3001			MOVLW	1
$0024	$1303			BCF	STATUS, RP1
$0025	$1283			BCF	STATUS, RP0
$0026	$0506			ANDWF	PORTB, 0
$0027	$00C1			MOVWF	STACK_1
$0028	$0841			MOVF	STACK_1, 0
$0029	$3A01			XORLW	1
$002A	$1D03			BTFSS	STATUS, Z
$002B	$288E			GOTO	L__Opearations_1
;D-91_PIC16_color_changer_v-1.0.c,54 :: 		if ((PORTB_1_H) && (PORTB_2_H) && (PORTB_3_H)) {
$002C	$3002			MOVLW	2
$002D	$0506			ANDWF	PORTB, 0
$002E	$00C1			MOVWF	STACK_1
$002F	$0841			MOVF	STACK_1, 0
$0030	$3A02			XORLW	2
$0031	$1D03			BTFSS	STATUS, Z
$0032	$2844			GOTO	L__Opearations_4
$0033	$3004			MOVLW	4
$0034	$0506			ANDWF	PORTB, 0
$0035	$00C1			MOVWF	STACK_1
$0036	$0841			MOVF	STACK_1, 0
$0037	$3A04			XORLW	4
$0038	$1D03			BTFSS	STATUS, Z
$0039	$2844			GOTO	L__Opearations_4
$003A	$3008			MOVLW	8
$003B	$0506			ANDWF	PORTB, 0
$003C	$00C1			MOVWF	STACK_1
$003D	$0841			MOVF	STACK_1, 0
$003E	$3A08			XORLW	8
$003F	$1D03			BTFSS	STATUS, Z
$0040	$2844			GOTO	L__Opearations_4
$0041	$	L19_ex_L__Opearations_4:
;D-91_PIC16_color_changer_v-1.0.c,56 :: 		LEDs_ON;
$0041	$3007			MOVLW	7
$0042	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,58 :: 		} else if ((PORTB_1_H) && !(PORTB_2_H) && !(PORTB_3_H)) {
$0043	$288D			GOTO	L__Opearations_5
$0044	$	L__Opearations_4:
$0044	$3002			MOVLW	2
$0045	$0506			ANDWF	PORTB, 0
$0046	$00C1			MOVWF	STACK_1
$0047	$0841			MOVF	STACK_1, 0
$0048	$3A02			XORLW	2
$0049	$1D03			BTFSS	STATUS, Z
$004A	$285C			GOTO	L__Opearations_8
$004B	$3004			MOVLW	4
$004C	$0506			ANDWF	PORTB, 0
$004D	$00C1			MOVWF	STACK_1
$004E	$0841			MOVF	STACK_1, 0
$004F	$3A04			XORLW	4
$0050	$1903			BTFSC	STATUS, Z
$0051	$285C			GOTO	L__Opearations_8
$0052	$3008			MOVLW	8
$0053	$0506			ANDWF	PORTB, 0
$0054	$00C1			MOVWF	STACK_1
$0055	$0841			MOVF	STACK_1, 0
$0056	$3A08			XORLW	8
$0057	$1903			BTFSC	STATUS, Z
$0058	$285C			GOTO	L__Opearations_8
$0059	$	L40_ex_L__Opearations_8:
;D-91_PIC16_color_changer_v-1.0.c,60 :: 		LED_1_ON;
$0059	$3001			MOVLW	1
$005A	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,62 :: 		} else if (!(PORTB_1_H) && (PORTB_2_H) && !(PORTB_3_H)) {
$005B	$288D			GOTO	L__Opearations_9
$005C	$	L__Opearations_8:
$005C	$3002			MOVLW	2
$005D	$0506			ANDWF	PORTB, 0
$005E	$00C1			MOVWF	STACK_1
$005F	$0841			MOVF	STACK_1, 0
$0060	$3A02			XORLW	2
$0061	$1903			BTFSC	STATUS, Z
$0062	$2874			GOTO	L__Opearations_12
$0063	$3004			MOVLW	4
$0064	$0506			ANDWF	PORTB, 0
$0065	$00C1			MOVWF	STACK_1
$0066	$0841			MOVF	STACK_1, 0
$0067	$3A04			XORLW	4
$0068	$1D03			BTFSS	STATUS, Z
$0069	$2874			GOTO	L__Opearations_12
$006A	$3008			MOVLW	8
$006B	$0506			ANDWF	PORTB, 0
$006C	$00C1			MOVWF	STACK_1
$006D	$0841			MOVF	STACK_1, 0
$006E	$3A08			XORLW	8
$006F	$1903			BTFSC	STATUS, Z
$0070	$2874			GOTO	L__Opearations_12
$0071	$	L61_ex_L__Opearations_12:
;D-91_PIC16_color_changer_v-1.0.c,64 :: 		LED_2_ON;
$0071	$3002			MOVLW	2
$0072	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,66 :: 		} else if (!(PORTB_1_H) && !(PORTB_2_H) && (PORTB_3_H)) {
$0073	$288D			GOTO	L__Opearations_13
$0074	$	L__Opearations_12:
$0074	$3002			MOVLW	2
$0075	$0506			ANDWF	PORTB, 0
$0076	$00C1			MOVWF	STACK_1
$0077	$0841			MOVF	STACK_1, 0
$0078	$3A02			XORLW	2
$0079	$1903			BTFSC	STATUS, Z
$007A	$288C			GOTO	L__Opearations_16
$007B	$3004			MOVLW	4
$007C	$0506			ANDWF	PORTB, 0
$007D	$00C1			MOVWF	STACK_1
$007E	$0841			MOVF	STACK_1, 0
$007F	$3A04			XORLW	4
$0080	$1903			BTFSC	STATUS, Z
$0081	$288C			GOTO	L__Opearations_16
$0082	$3008			MOVLW	8
$0083	$0506			ANDWF	PORTB, 0
$0084	$00C1			MOVWF	STACK_1
$0085	$0841			MOVF	STACK_1, 0
$0086	$3A08			XORLW	8
$0087	$1D03			BTFSS	STATUS, Z
$0088	$288C			GOTO	L__Opearations_16
$0089	$	L82_ex_L__Opearations_16:
;D-91_PIC16_color_changer_v-1.0.c,68 :: 		LED_3_ON;
$0089	$3004			MOVLW	4
$008A	$0085			MOVWF	PORTA
;D-91_PIC16_color_changer_v-1.0.c,70 :: 		} else {
$008B	$288D			GOTO	L__Opearations_17
$008C	$	L__Opearations_16:
;D-91_PIC16_color_changer_v-1.0.c,72 :: 		LEDs_OFF;
$008C	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,76 :: 		}
$008D	$	L__Opearations_17:
$008D	$	L__Opearations_13:
$008D	$	L__Opearations_9:
$008D	$	L__Opearations_5:
;D-91_PIC16_color_changer_v-1.0.c,78 :: 		}
$008D	$2823			GOTO	L__Opearations_0
$008E	$	L__Opearations_1:
;D-91_PIC16_color_changer_v-1.0.c,80 :: 		}
$008E	$0008			RETURN
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008D			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008C			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$008E			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$008F			MOVWF	STSAVED_0
;D-91_PIC16_color_changer_v-1.0.c,82 :: 		void interrupt(void)
;D-91_PIC16_color_changer_v-1.0.c,93 :: 		INTCON &= 0x7F;  // interrupt => forbidden
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-1.0.c,94 :: 		INTCON &= 0xEF;  // INT interrupt => forbidden
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-1.0.c,95 :: 		INTCON &= 0xFD;  // INT interrupt flag => cleared
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D-91_PIC16_color_changer_v-1.0.c,97 :: 		_Opearations();
$0015	$2023			CALL	__Opearations
;D-91_PIC16_color_changer_v-1.0.c,105 :: 		INTCON |= 0x10;		  // INT interrupt => permitted
$0016	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-1.0.c,106 :: 		INTCON |= 0x80;
$0017	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-1.0.c,108 :: 		}//void interrupt(void)
$0018	$	L_Interrupt_end:
$0018	$080F			MOVF	STSAVED_0, 0
$0019	$00C0			MOVWF	STACK_0
$001A	$080E			MOVF	?savePCLATH, 0
$001B	$008A			MOVWF	PCLATH
$001C	$080C			MOVF	?saveFSR, 0
$001D	$0084			MOVWF	FSR
$001E	$0E0D			SWAPF	?saveSTATUS, 0
$001F	$0083			MOVWF	STATUS
$0020	$0ECF			SWAPF	STACK_15, 1
$0021	$0E4F			SWAPF	STACK_15, 0
$0022	$0009			RETFIE
$008F	$	_main:
;D-91_PIC16_color_changer_v-1.0.c,111 :: 		void main(void)
;D-91_PIC16_color_changer_v-1.0.c,115 :: 		TRISA     = 0x00;
$008F	$1303			BCF	STATUS, RP1
$0090	$1683			BSF	STATUS, RP0
$0091	$0185			CLRF	TRISA, 1
;D-91_PIC16_color_changer_v-1.0.c,116 :: 		PORTA     = 0x00;		//0000 0010
$0092	$1283			BCF	STATUS, RP0
$0093	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,118 :: 		TRISB     = 0xFF;		// Input: RB0 ~ RB7
$0094	$30FF			MOVLW	255
$0095	$1683			BSF	STATUS, RP0
$0096	$0086			MOVWF	TRISB
;D-91_PIC16_color_changer_v-1.0.c,120 :: 		OPTION_REG &= 0x7F;	// Pull-up => on
$0097	$307F			MOVLW	127
$0098	$0501			ANDWF	OPTION_REG, 0
$0099	$00C0			MOVWF	STACK_0
$009A	$0840			MOVF	STACK_0, 0
$009B	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-1.0.c,121 :: 		OPTION_REG &= 0xFF;	// INT interrupt => by 0V ~> 5V
$009C	$30FF			MOVLW	255
$009D	$0540			ANDWF	STACK_0, 0
$009E	$0081			MOVWF	OPTION_REG
;D-91_PIC16_color_changer_v-1.0.c,134 :: 		INTCON |= 0x10;        // INT interrupt => permitted
$009F	$160B			BSF	INTCON, 4
;D-91_PIC16_color_changer_v-1.0.c,135 :: 		INTCON |= 0x80;
$00A0	$178B			BSF	INTCON, 7
;D-91_PIC16_color_changer_v-1.0.c,137 :: 		while(1)
$00A1	$	L_main_18:
;D-91_PIC16_color_changer_v-1.0.c,141 :: 		LEDs_OFF;
$00A1	$1283			BCF	STATUS, RP0
$00A2	$0185			CLRF	PORTA, 1
;D-91_PIC16_color_changer_v-1.0.c,143 :: 		}//while(1)
$00A3	$28A1			GOTO	L_main_18
;D-91_PIC16_color_changer_v-1.0.c,145 :: 		}//void main(void)
$00A4	$28A4			GOTO	$
