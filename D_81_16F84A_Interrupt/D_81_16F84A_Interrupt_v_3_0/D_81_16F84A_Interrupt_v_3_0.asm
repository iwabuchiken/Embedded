;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/02/23 21:14:32
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2831			GOTO	_main
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008F			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008E			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0090			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0091			MOVWF	STSAVED_0
;D_81_16F84A_Interrupt_v_3_0.c,3 :: 		void interrupt(void)
;D_81_16F84A_Interrupt_v_3_0.c,5 :: 		INTCON         &= 0x7F;
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D_81_16F84A_Interrupt_v_3_0.c,6 :: 		INTCON         &= 0xDF;
$0011	$30DF			MOVLW	223
$0012	$058B			ANDWF	INTCON, 1
;D_81_16F84A_Interrupt_v_3_0.c,7 :: 		INTCON         &= 0xFB;
$0013	$30FB			MOVLW	251
$0014	$058B			ANDWF	INTCON, 1
;D_81_16F84A_Interrupt_v_3_0.c,9 :: 		count++;
$0015	$0A8C			INCF	_count, 1
$0016	$1903			BTFSC	STATUS, Z
$0017	$0A8D			INCF	_count+1, 1
;D_81_16F84A_Interrupt_v_3_0.c,11 :: 		if(count == 19531)
$0018	$080D			MOVF	_count+1, 0
$0019	$3A4C			XORLW	76
$001A	$1D03			BTFSS	STATUS, Z
$001B	$281E			GOTO	L_interrupt_3
$001C	$304B			MOVLW	75
$001D	$060C			XORWF	_count, 0
$001E	$	L_interrupt_3:
$001E	$1D03			BTFSS	STATUS, Z
$001F	$2824			GOTO	L_interrupt_0
;D_81_16F84A_Interrupt_v_3_0.c,13 :: 		PORTA    ^= 0x03;
$0020	$3003			MOVLW	3
$0021	$0685			XORWF	PORTA, 1
;D_81_16F84A_Interrupt_v_3_0.c,14 :: 		count    = 0;
$0022	$018C			CLRF	_count
$0023	$018D			CLRF	_count+1
;D_81_16F84A_Interrupt_v_3_0.c,15 :: 		}
$0024	$	L_interrupt_0:
;D_81_16F84A_Interrupt_v_3_0.c,17 :: 		INTCON         |= 0x20;
$0024	$168B			BSF	INTCON, 5
;D_81_16F84A_Interrupt_v_3_0.c,18 :: 		INTCON         |= 0x80;
$0025	$178B			BSF	INTCON, 7
;D_81_16F84A_Interrupt_v_3_0.c,20 :: 		}//void interrupt(void)
$0026	$	L_Interrupt_end:
$0026	$0811			MOVF	STSAVED_0, 0
$0027	$00C0			MOVWF	STACK_0
$0028	$0810			MOVF	?savePCLATH, 0
$0029	$008A			MOVWF	PCLATH
$002A	$080E			MOVF	?saveFSR, 0
$002B	$0084			MOVWF	FSR
$002C	$0E0F			SWAPF	?saveSTATUS, 0
$002D	$0083			MOVWF	STATUS
$002E	$0ECF			SWAPF	STACK_15, 1
$002F	$0E4F			SWAPF	STACK_15, 0
$0030	$0009			RETFIE
$0031	$	_main:
;D_81_16F84A_Interrupt_v_3_0.c,22 :: 		void main(void)
;D_81_16F84A_Interrupt_v_3_0.c,25 :: 		TRISA     = 0x00;
$0031	$1303			BCF	STATUS, RP1
$0032	$1683			BSF	STATUS, RP0
$0033	$0185			CLRF	TRISA, 1
;D_81_16F84A_Interrupt_v_3_0.c,26 :: 		PORTA     = 0x02; //0000 0010
$0034	$3002			MOVLW	2
$0035	$1283			BCF	STATUS, RP0
$0036	$0085			MOVWF	PORTA
;D_81_16F84A_Interrupt_v_3_0.c,27 :: 		TRISB     = 0xFF;
$0037	$30FF			MOVLW	255
$0038	$1683			BSF	STATUS, RP0
$0039	$0086			MOVWF	TRISB
;D_81_16F84A_Interrupt_v_3_0.c,29 :: 		OPTION_REG &= 0x7F;
$003A	$307F			MOVLW	127
$003B	$0501			ANDWF	OPTION_REG, 0
$003C	$00C0			MOVWF	STACK_0
$003D	$0840			MOVF	STACK_0, 0
$003E	$0081			MOVWF	OPTION_REG
;D_81_16F84A_Interrupt_v_3_0.c,30 :: 		OPTION_REG &= 0xDF;
$003F	$30DF			MOVLW	223
$0040	$0540			ANDWF	STACK_0, 0
$0041	$0081			MOVWF	OPTION_REG
;D_81_16F84A_Interrupt_v_3_0.c,32 :: 		count = 0;
$0042	$018C			CLRF	_count
$0043	$018D			CLRF	_count+1
;D_81_16F84A_Interrupt_v_3_0.c,33 :: 		TMR0  = 0;
$0044	$1283			BCF	STATUS, RP0
$0045	$0181			CLRF	TMR0, 1
;D_81_16F84A_Interrupt_v_3_0.c,35 :: 		INTCON         |= 0x20;
$0046	$168B			BSF	INTCON, 5
;D_81_16F84A_Interrupt_v_3_0.c,36 :: 		INTCON         |= 0x80;
$0047	$178B			BSF	INTCON, 7
;D_81_16F84A_Interrupt_v_3_0.c,38 :: 		while(1)
$0048	$	L_main_1:
$0048	$2848			GOTO	L_main_1
;D_81_16F84A_Interrupt_v_3_0.c,43 :: 		}//void main(void)
$0049	$2849			GOTO	$
