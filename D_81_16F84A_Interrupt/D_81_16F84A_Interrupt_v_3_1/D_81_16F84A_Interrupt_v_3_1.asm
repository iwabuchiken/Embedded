;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/02/24 21:07:18
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2837			GOTO	_main
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008F			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008E			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$0090			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$0091			MOVWF	STSAVED_0
;D_81_16F84A_Interrupt_v_3_1.c,3 :: 		void interrupt(void)
;D_81_16F84A_Interrupt_v_3_1.c,6 :: 		while(PORTB == 0xFD)
$000F	$	L_interrupt_0:
$000F	$0806			MOVF	PORTB, 0
$0010	$3AFD			XORLW	253
$0011	$1D03			BTFSS	STATUS, Z
$0012	$2815			GOTO	L_interrupt_1
;D_81_16F84A_Interrupt_v_3_1.c,8 :: 		PORTA = 0x00;
$0013	$0185			CLRF	PORTA, 1
;D_81_16F84A_Interrupt_v_3_1.c,9 :: 		}
$0014	$280F			GOTO	L_interrupt_0
$0015	$	L_interrupt_1:
;D_81_16F84A_Interrupt_v_3_1.c,11 :: 		INTCON         &= 0x7F;
$0015	$307F			MOVLW	127
$0016	$058B			ANDWF	INTCON, 1
;D_81_16F84A_Interrupt_v_3_1.c,12 :: 		INTCON         &= 0xDF;
$0017	$30DF			MOVLW	223
$0018	$058B			ANDWF	INTCON, 1
;D_81_16F84A_Interrupt_v_3_1.c,13 :: 		INTCON         &= 0xFB;
$0019	$30FB			MOVLW	251
$001A	$058B			ANDWF	INTCON, 1
;D_81_16F84A_Interrupt_v_3_1.c,15 :: 		count++;
$001B	$0A8C			INCF	_count, 1
$001C	$1903			BTFSC	STATUS, Z
$001D	$0A8D			INCF	_count+1, 1
;D_81_16F84A_Interrupt_v_3_1.c,17 :: 		if(count == 76)
$001E	$3000			MOVLW	0
$001F	$060D			XORWF	_count+1, 0
$0020	$1D03			BTFSS	STATUS, Z
$0021	$2824			GOTO	L_interrupt_5
$0022	$304C			MOVLW	76
$0023	$060C			XORWF	_count, 0
$0024	$	L_interrupt_5:
$0024	$1D03			BTFSS	STATUS, Z
$0025	$282A			GOTO	L_interrupt_2
;D_81_16F84A_Interrupt_v_3_1.c,19 :: 		PORTA    ^= 0x03;
$0026	$3003			MOVLW	3
$0027	$0685			XORWF	PORTA, 1
;D_81_16F84A_Interrupt_v_3_1.c,20 :: 		count    = 0;
$0028	$018C			CLRF	_count
$0029	$018D			CLRF	_count+1
;D_81_16F84A_Interrupt_v_3_1.c,21 :: 		}
$002A	$	L_interrupt_2:
;D_81_16F84A_Interrupt_v_3_1.c,23 :: 		INTCON         |= 0x20;
$002A	$168B			BSF	INTCON, 5
;D_81_16F84A_Interrupt_v_3_1.c,24 :: 		INTCON         |= 0x80;
$002B	$178B			BSF	INTCON, 7
;D_81_16F84A_Interrupt_v_3_1.c,26 :: 		}//void interrupt(void)
$002C	$	L_Interrupt_end:
$002C	$0811			MOVF	STSAVED_0, 0
$002D	$00C0			MOVWF	STACK_0
$002E	$0810			MOVF	?savePCLATH, 0
$002F	$008A			MOVWF	PCLATH
$0030	$080E			MOVF	?saveFSR, 0
$0031	$0084			MOVWF	FSR
$0032	$0E0F			SWAPF	?saveSTATUS, 0
$0033	$0083			MOVWF	STATUS
$0034	$0ECF			SWAPF	STACK_15, 1
$0035	$0E4F			SWAPF	STACK_15, 0
$0036	$0009			RETFIE
$0037	$	_main:
;D_81_16F84A_Interrupt_v_3_1.c,28 :: 		void main(void)
;D_81_16F84A_Interrupt_v_3_1.c,31 :: 		TRISA     = 0x00;
$0037	$1303			BCF	STATUS, RP1
$0038	$1683			BSF	STATUS, RP0
$0039	$0185			CLRF	TRISA, 1
;D_81_16F84A_Interrupt_v_3_1.c,32 :: 		PORTA     = 0x02; //0000 0010
$003A	$3002			MOVLW	2
$003B	$1283			BCF	STATUS, RP0
$003C	$0085			MOVWF	PORTA
;D_81_16F84A_Interrupt_v_3_1.c,33 :: 		TRISB     = 0xFF;
$003D	$30FF			MOVLW	255
$003E	$1683			BSF	STATUS, RP0
$003F	$0086			MOVWF	TRISB
;D_81_16F84A_Interrupt_v_3_1.c,35 :: 		OPTION_REG &= 0x7F;
$0040	$307F			MOVLW	127
$0041	$0501			ANDWF	OPTION_REG, 0
$0042	$00C0			MOVWF	STACK_0
$0043	$0840			MOVF	STACK_0, 0
$0044	$0081			MOVWF	OPTION_REG
;D_81_16F84A_Interrupt_v_3_1.c,36 :: 		OPTION_REG &= 0xDF;
$0045	$30DF			MOVLW	223
$0046	$05C0			ANDWF	STACK_0, 1
$0047	$0840			MOVF	STACK_0, 0
$0048	$0081			MOVWF	OPTION_REG
;D_81_16F84A_Interrupt_v_3_1.c,38 :: 		OPTION_REG &= 0xF0; //1111 0000
$0049	$30F0			MOVLW	240
$004A	$05C0			ANDWF	STACK_0, 1
$004B	$0840			MOVF	STACK_0, 0
$004C	$0081			MOVWF	OPTION_REG
;D_81_16F84A_Interrupt_v_3_1.c,39 :: 		OPTION_REG |= 0x07; //0000 011
$004D	$3007			MOVLW	7
$004E	$0440			IORWF	STACK_0, 0
$004F	$0081			MOVWF	OPTION_REG
;D_81_16F84A_Interrupt_v_3_1.c,41 :: 		count = 0;
$0050	$018C			CLRF	_count
$0051	$018D			CLRF	_count+1
;D_81_16F84A_Interrupt_v_3_1.c,42 :: 		TMR0  = 0;
$0052	$1283			BCF	STATUS, RP0
$0053	$0181			CLRF	TMR0, 1
;D_81_16F84A_Interrupt_v_3_1.c,44 :: 		INTCON         |= 0x20;
$0054	$168B			BSF	INTCON, 5
;D_81_16F84A_Interrupt_v_3_1.c,45 :: 		INTCON         |= 0x80;
$0055	$178B			BSF	INTCON, 7
;D_81_16F84A_Interrupt_v_3_1.c,47 :: 		while(1)
$0056	$	L_main_3:
$0056	$2856			GOTO	L_main_3
;D_81_16F84A_Interrupt_v_3_1.c,52 :: 		}//void main(void)
$0057	$2857			GOTO	$
