;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/02/22 17:15:53
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$285A			GOTO	_main
$0004	$	_interrupt:
$0004	$00CF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$008D			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$008C			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$008E			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0840			MOVF	STACK_0, 0
$000E	$008F			MOVWF	STSAVED_0
;D_81_16F84A_Interrupt_v_2_0.c,1 :: 		void interrupt(void)
;D_81_16F84A_Interrupt_v_2_0.c,3 :: 		INTCON         &= 0x7F;
$000F	$307F			MOVLW	127
$0010	$058B			ANDWF	INTCON, 1
;D_81_16F84A_Interrupt_v_2_0.c,4 :: 		INTCON         &= 0xEF;
$0011	$30EF			MOVLW	239
$0012	$058B			ANDWF	INTCON, 1
;D_81_16F84A_Interrupt_v_2_0.c,5 :: 		INTCON         &= 0xFD;
$0013	$30FD			MOVLW	253
$0014	$058B			ANDWF	INTCON, 1
;D_81_16F84A_Interrupt_v_2_0.c,7 :: 		Delay_ms(20);
$0015	$3082			MOVLW	130
$0016	$00CB			MOVWF	STACK_11
$0017	$30FF			MOVLW	255
$0018	$00CA			MOVWF	STACK_10
$0019	$0BCB			DECFSZ	STACK_11, F
$001A	$281C			GOTO	$+2
$001B	$281F			GOTO	$+4
$001C	$0BCA			DECFSZ	STACK_10, F
$001D	$281C			GOTO	$-1
$001E	$2819			GOTO	$-5
$001F	$3087			MOVLW	135
$0020	$00CA			MOVWF	STACK_10
$0021	$0BCA			DECFSZ	STACK_10, F
$0022	$2821			GOTO	$-1
$0023	$0000			NOP
;D_81_16F84A_Interrupt_v_2_0.c,9 :: 		if((PORTB & 0x01) == 0)
$0024	$3001			MOVLW	1
$0025	$0506			ANDWF	PORTB, 0
$0026	$00C1			MOVWF	STACK_1
$0027	$0841			MOVF	STACK_1, 0
$0028	$3A00			XORLW	0
$0029	$1D03			BTFSS	STATUS, Z
$002A	$284D			GOTO	L_interrupt_0
;D_81_16F84A_Interrupt_v_2_0.c,12 :: 		PORTA   = 0x00;
$002B	$0185			CLRF	PORTA, 1
;D_81_16F84A_Interrupt_v_2_0.c,13 :: 		Delay_ms(2000);
$002C	$3033			MOVLW	51
$002D	$00CC			MOVWF	STACK_12
$002E	$30FF			MOVLW	255
$002F	$00CB			MOVWF	STACK_11
$0030	$30FF			MOVLW	255
$0031	$00CA			MOVWF	STACK_10
$0032	$0BCC			DECFSZ	STACK_12, F
$0033	$2835			GOTO	$+2
$0034	$283C			GOTO	$+8
$0035	$0BCB			DECFSZ	STACK_11, F
$0036	$2838			GOTO	$+2
$0037	$283B			GOTO	$+4
$0038	$0BCA			DECFSZ	STACK_10, F
$0039	$2838			GOTO	$-1
$003A	$2835			GOTO	$-5
$003B	$2832			GOTO	$-9
$003C	$30FD			MOVLW	253
$003D	$00CB			MOVWF	STACK_11
$003E	$30FF			MOVLW	255
$003F	$00CA			MOVWF	STACK_10
$0040	$0BCB			DECFSZ	STACK_11, F
$0041	$2843			GOTO	$+2
$0042	$2846			GOTO	$+4
$0043	$0BCA			DECFSZ	STACK_10, F
$0044	$2843			GOTO	$-1
$0045	$2840			GOTO	$-5
$0046	$30B5			MOVLW	181
$0047	$00CA			MOVWF	STACK_10
$0048	$0BCA			DECFSZ	STACK_10, F
$0049	$2848			GOTO	$-1
$004A	$0000			NOP
;D_81_16F84A_Interrupt_v_2_0.c,14 :: 		PORTA   = 0x03;
$004B	$3003			MOVLW	3
$004C	$0085			MOVWF	PORTA
;D_81_16F84A_Interrupt_v_2_0.c,17 :: 		}
$004D	$	L_interrupt_0:
;D_81_16F84A_Interrupt_v_2_0.c,19 :: 		INTCON         |= 0x10;
$004D	$160B			BSF	INTCON, 4
;D_81_16F84A_Interrupt_v_2_0.c,20 :: 		INTCON         |= 0x80;
$004E	$178B			BSF	INTCON, 7
;D_81_16F84A_Interrupt_v_2_0.c,22 :: 		}//void interrupt(void)
$004F	$	L_Interrupt_end:
$004F	$080F			MOVF	STSAVED_0, 0
$0050	$00C0			MOVWF	STACK_0
$0051	$080E			MOVF	?savePCLATH, 0
$0052	$008A			MOVWF	PCLATH
$0053	$080C			MOVF	?saveFSR, 0
$0054	$0084			MOVWF	FSR
$0055	$0E0D			SWAPF	?saveSTATUS, 0
$0056	$0083			MOVWF	STATUS
$0057	$0ECF			SWAPF	STACK_15, 1
$0058	$0E4F			SWAPF	STACK_15, 0
$0059	$0009			RETFIE
$005A	$	_main:
;D_81_16F84A_Interrupt_v_2_0.c,24 :: 		void main(void)
;D_81_16F84A_Interrupt_v_2_0.c,27 :: 		TRISA     = 0x00;
$005A	$1303			BCF	STATUS, RP1
$005B	$1683			BSF	STATUS, RP0
$005C	$0185			CLRF	TRISA, 1
;D_81_16F84A_Interrupt_v_2_0.c,28 :: 		PORTA     = 0x03;
$005D	$3003			MOVLW	3
$005E	$1283			BCF	STATUS, RP0
$005F	$0085			MOVWF	PORTA
;D_81_16F84A_Interrupt_v_2_0.c,29 :: 		TRISB     = 0xFF;
$0060	$30FF			MOVLW	255
$0061	$1683			BSF	STATUS, RP0
$0062	$0086			MOVWF	TRISB
;D_81_16F84A_Interrupt_v_2_0.c,31 :: 		OPTION_REG &= 0x7F;
$0063	$307F			MOVLW	127
$0064	$0501			ANDWF	OPTION_REG, 0
$0065	$00C0			MOVWF	STACK_0
$0066	$0840			MOVF	STACK_0, 0
$0067	$0081			MOVWF	OPTION_REG
;D_81_16F84A_Interrupt_v_2_0.c,32 :: 		OPTION_REG &= 0xBF;
$0068	$30BF			MOVLW	191
$0069	$0540			ANDWF	STACK_0, 0
$006A	$0081			MOVWF	OPTION_REG
;D_81_16F84A_Interrupt_v_2_0.c,34 :: 		INTCON         |= 0x10;
$006B	$160B			BSF	INTCON, 4
;D_81_16F84A_Interrupt_v_2_0.c,35 :: 		INTCON         |= 0x80;
$006C	$178B			BSF	INTCON, 7
;D_81_16F84A_Interrupt_v_2_0.c,37 :: 		while(1)
$006D	$	L_main_1:
$006D	$286D			GOTO	L_main_1
;D_81_16F84A_Interrupt_v_2_0.c,42 :: 		}//void main(void)
$006E	$286E			GOTO	$
