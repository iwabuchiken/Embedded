;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2014/02/21 20:45:39
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0004	$	_main:
;D_79_PIC16F84A__Aoki_66.c,1 :: 		void main(void)
;D_79_PIC16F84A__Aoki_66.c,3 :: 		TRISA     = 0x00;
$0004	$1303			BCF	STATUS, RP1
$0005	$1683			BSF	STATUS, RP0
$0006	$0185			CLRF	TRISA, 1
;D_79_PIC16F84A__Aoki_66.c,4 :: 		PORTA     = 0x03;
$0007	$3003			MOVLW	3
$0008	$1283			BCF	STATUS, RP0
$0009	$0085			MOVWF	PORTA
;D_79_PIC16F84A__Aoki_66.c,5 :: 		TRISB     = 0xFF;
$000A	$30FF			MOVLW	255
$000B	$1683			BSF	STATUS, RP0
$000C	$0086			MOVWF	TRISB
;D_79_PIC16F84A__Aoki_66.c,7 :: 		OPTION_REG &= 0x7F;
$000D	$307F			MOVLW	127
$000E	$0581			ANDWF	OPTION_REG, 1
;D_79_PIC16F84A__Aoki_66.c,9 :: 		while(1)
$000F	$	L_main_0:
;D_79_PIC16F84A__Aoki_66.c,12 :: 		if (PORTB == 0xFE)
$000F	$1283			BCF	STATUS, RP0
$0010	$0806			MOVF	PORTB, 0
$0011	$3AFE			XORLW	254
$0012	$1D03			BTFSS	STATUS, Z
$0013	$2817			GOTO	L_main_2
;D_79_PIC16F84A__Aoki_66.c,14 :: 		PORTA = 0x02;
$0014	$3002			MOVLW	2
$0015	$0085			MOVWF	PORTA
;D_79_PIC16F84A__Aoki_66.c,15 :: 		}
$0016	$2820			GOTO	L_main_3
$0017	$	L_main_2:
;D_79_PIC16F84A__Aoki_66.c,16 :: 		else if (PORTB == 0xFD)
$0017	$0806			MOVF	PORTB, 0
$0018	$3AFD			XORLW	253
$0019	$1D03			BTFSS	STATUS, Z
$001A	$281E			GOTO	L_main_4
;D_79_PIC16F84A__Aoki_66.c,18 :: 		PORTA = 0x01;
$001B	$3001			MOVLW	1
$001C	$0085			MOVWF	PORTA
;D_79_PIC16F84A__Aoki_66.c,19 :: 		}
$001D	$2820			GOTO	L_main_5
$001E	$	L_main_4:
;D_79_PIC16F84A__Aoki_66.c,22 :: 		PORTA = 0x03;
$001E	$3003			MOVLW	3
$001F	$0085			MOVWF	PORTA
;D_79_PIC16F84A__Aoki_66.c,23 :: 		}//if (PORTB == 0xFE)
$0020	$	L_main_5:
$0020	$	L_main_3:
;D_79_PIC16F84A__Aoki_66.c,25 :: 		}//while(1)
$0020	$280F			GOTO	L_main_0
;D_79_PIC16F84A__Aoki_66.c,27 :: 		}//void main(void)
$0021	$2821			GOTO	$
