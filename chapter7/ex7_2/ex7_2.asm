;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2010/01/07 19:30:00
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$00E8	$	_SD1602_write:
;sd1602_4bit_mode.h,1 :: 		void SD1602_write(char c, char r)
;sd1602_4bit_mode.h,3 :: 		PORTB = c & 0xF0; /* RB4〜RB7にデータの上位4bitをセットする */
$00E8	$30F0			MOVLW	240
$00E9	$1303			BCF	STATUS, RP1
$00EA	$1283			BCF	STATUS, RP0
$00EB	$051C			ANDWF	FARG_SD1602_write+0, 0
$00EC	$0086			MOVWF	PORTB
;sd1602_4bit_mode.h,5 :: 		if (r == 1) /* 文字コードの場合 */
$00ED	$081D			MOVF	FARG_SD1602_write+1, 0
$00EE	$3A01			XORLW	1
$00EF	$1D03			BTFSS	STATUS, Z
$00F0	$28F3			GOTO	L_SD1602_write_0
;sd1602_4bit_mode.h,7 :: 		PORTA |= 0x02; /* RSを1にする */
$00F1	$1485			BSF	PORTA, 1
;sd1602_4bit_mode.h,8 :: 		}
$00F2	$28F5			GOTO	L_SD1602_write_1
$00F3	$	L_SD1602_write_0:
;sd1602_4bit_mode.h,11 :: 		PORTA &= 0xFD; /* RSを0にする */
$00F3	$30FD			MOVLW	253
$00F4	$0585			ANDWF	PORTA, 1
;sd1602_4bit_mode.h,12 :: 		}
$00F5	$	L_SD1602_write_1:
;sd1602_4bit_mode.h,14 :: 		PORTA &= 0xFE; /* Eを0にする */
$00F5	$30FE			MOVLW	254
$00F6	$0585			ANDWF	PORTA, 1
;sd1602_4bit_mode.h,15 :: 		Delay_us(1); /* 1us（40ns以上）の時間待ち */
$00F7	$3001			MOVLW	1
$00F8	$00CA			MOVWF	STACK_10
$00F9	$0BCA			DECFSZ	STACK_10, F
$00FA	$28F9			GOTO	$-1
$00FB	$0000			NOP
;sd1602_4bit_mode.h,16 :: 		PORTA |= 0x01; /* Eを1にする */
$00FC	$1405			BSF	PORTA, 0
;sd1602_4bit_mode.h,17 :: 		Delay_us(1);  /* 1us（230ns以上）の時間待ち */
$00FD	$3001			MOVLW	1
$00FE	$00CA			MOVWF	STACK_10
$00FF	$0BCA			DECFSZ	STACK_10, F
$0100	$28FF			GOTO	$-1
$0101	$0000			NOP
;sd1602_4bit_mode.h,18 :: 		PORTA &= 0xFE; /* Eを0にする */
$0102	$30FE			MOVLW	254
$0103	$0585			ANDWF	PORTA, 1
;sd1602_4bit_mode.h,19 :: 		}
$0104	$0008			RETURN
$0138	$	_SD1602_control:
;sd1602_4bit_mode.h,28 :: 		void SD1602_control(char c)
;sd1602_4bit_mode.h,30 :: 		SD1602_write(c, 0); /* 制御コードの上位4bitを渡す */
$0138	$1303			BCF	STATUS, RP1
$0139	$1283			BCF	STATUS, RP0
$013A	$081B			MOVF	FARG_SD1602_control+0, 0
$013B	$009C			MOVWF	FARG_SD1602_write+0
$013C	$019D			CLRF	FARG_SD1602_write+1, 1
$013D	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,31 :: 		SD1602_write(c << 4, 0); /* 制御コードの下位4bitを渡す */
$013E	$081B			MOVF	FARG_SD1602_control+0, 0
$013F	$009C			MOVWF	FARG_SD1602_write+0
$0140	$0D9C			RLF	FARG_SD1602_write+0, 1
$0141	$101C			BCF	FARG_SD1602_write+0, 0
$0142	$0D9C			RLF	FARG_SD1602_write+0, 1
$0143	$101C			BCF	FARG_SD1602_write+0, 0
$0144	$0D9C			RLF	FARG_SD1602_write+0, 1
$0145	$101C			BCF	FARG_SD1602_write+0, 0
$0146	$0D9C			RLF	FARG_SD1602_write+0, 1
$0147	$101C			BCF	FARG_SD1602_write+0, 0
$0148	$019D			CLRF	FARG_SD1602_write+1, 1
$0149	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,32 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$014A	$3053			MOVLW	83
$014B	$00CA			MOVWF	STACK_10
$014C	$0BCA			DECFSZ	STACK_10, F
$014D	$294C			GOTO	$-1
;sd1602_4bit_mode.h,33 :: 		}
$014E	$0008			RETURN
$011F	$	_SD1602_display:
;sd1602_4bit_mode.h,21 :: 		void SD1602_display(char c)
;sd1602_4bit_mode.h,23 :: 		SD1602_write(c, 1); /* 文字コードの上位4bitを渡す */
$011F	$1303			BCF	STATUS, RP1
$0120	$1283			BCF	STATUS, RP0
$0121	$081B			MOVF	FARG_SD1602_display+0, 0
$0122	$009C			MOVWF	FARG_SD1602_write+0
$0123	$3001			MOVLW	1
$0124	$009D			MOVWF	FARG_SD1602_write+1
$0125	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,24 :: 		SD1602_write(c << 4, 1); /* 文字コードの下位4bitを渡す */
$0126	$081B			MOVF	FARG_SD1602_display+0, 0
$0127	$009C			MOVWF	FARG_SD1602_write+0
$0128	$0D9C			RLF	FARG_SD1602_write+0, 1
$0129	$101C			BCF	FARG_SD1602_write+0, 0
$012A	$0D9C			RLF	FARG_SD1602_write+0, 1
$012B	$101C			BCF	FARG_SD1602_write+0, 0
$012C	$0D9C			RLF	FARG_SD1602_write+0, 1
$012D	$101C			BCF	FARG_SD1602_write+0, 0
$012E	$0D9C			RLF	FARG_SD1602_write+0, 1
$012F	$101C			BCF	FARG_SD1602_write+0, 0
$0130	$3001			MOVLW	1
$0131	$009D			MOVWF	FARG_SD1602_write+1
$0132	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,25 :: 		Delay_us(50); /* 50us（40us以上）の時間待ち */
$0133	$3053			MOVLW	83
$0134	$00CA			MOVWF	STACK_10
$0135	$0BCA			DECFSZ	STACK_10, F
$0136	$2935			GOTO	$-1
;sd1602_4bit_mode.h,26 :: 		}
$0137	$0008			RETURN
$007A	$	_SD1602_init:
;sd1602_4bit_mode.h,42 :: 		void SD1602_init(void)
;sd1602_4bit_mode.h,44 :: 		Delay_ms(20); /* 20ms（15ms以上）の時間待ち */
$007A	$3082			MOVLW	130
$007B	$1303			BCF	STATUS, RP1
$007C	$1283			BCF	STATUS, RP0
$007D	$00CB			MOVWF	STACK_11
$007E	$30FF			MOVLW	255
$007F	$00CA			MOVWF	STACK_10
$0080	$0BCB			DECFSZ	STACK_11, F
$0081	$2883			GOTO	$+2
$0082	$2886			GOTO	$+4
$0083	$0BCA			DECFSZ	STACK_10, F
$0084	$2883			GOTO	$-1
$0085	$2880			GOTO	$-5
$0086	$3087			MOVLW	135
$0087	$00CA			MOVWF	STACK_10
$0088	$0BCA			DECFSZ	STACK_10, F
$0089	$2888			GOTO	$-1
$008A	$0000			NOP
;sd1602_4bit_mode.h,45 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$008B	$3030			MOVLW	48
$008C	$009C			MOVWF	FARG_SD1602_write+0
$008D	$019D			CLRF	FARG_SD1602_write+1, 1
$008E	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,46 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$008F	$3021			MOVLW	33
$0090	$00CB			MOVWF	STACK_11
$0091	$30FF			MOVLW	255
$0092	$00CA			MOVWF	STACK_10
$0093	$0BCB			DECFSZ	STACK_11, F
$0094	$2896			GOTO	$+2
$0095	$2899			GOTO	$+4
$0096	$0BCA			DECFSZ	STACK_10, F
$0097	$2896			GOTO	$-1
$0098	$2893			GOTO	$-5
$0099	$3060			MOVLW	96
$009A	$00CA			MOVWF	STACK_10
$009B	$0BCA			DECFSZ	STACK_10, F
$009C	$289B			GOTO	$-1
$009D	$0000			NOP
$009E	$0000			NOP
;sd1602_4bit_mode.h,47 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$009F	$3030			MOVLW	48
$00A0	$009C			MOVWF	FARG_SD1602_write+0
$00A1	$019D			CLRF	FARG_SD1602_write+1, 1
$00A2	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,48 :: 		Delay_ms(5); /* 5ms（100us以上）の時間待ち */
$00A3	$3021			MOVLW	33
$00A4	$00CB			MOVWF	STACK_11
$00A5	$30FF			MOVLW	255
$00A6	$00CA			MOVWF	STACK_10
$00A7	$0BCB			DECFSZ	STACK_11, F
$00A8	$28AA			GOTO	$+2
$00A9	$28AD			GOTO	$+4
$00AA	$0BCA			DECFSZ	STACK_10, F
$00AB	$28AA			GOTO	$-1
$00AC	$28A7			GOTO	$-5
$00AD	$3060			MOVLW	96
$00AE	$00CA			MOVWF	STACK_10
$00AF	$0BCA			DECFSZ	STACK_10, F
$00B0	$28AF			GOTO	$-1
$00B1	$0000			NOP
$00B2	$0000			NOP
;sd1602_4bit_mode.h,49 :: 		SD1602_write(0x30, 0); /* 8bitモード設定 */
$00B3	$3030			MOVLW	48
$00B4	$009C			MOVWF	FARG_SD1602_write+0
$00B5	$019D			CLRF	FARG_SD1602_write+1, 1
$00B6	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,50 :: 		Delay_ms(5); /* 5ms（4.1ms以上）の時間待ち */
$00B7	$3021			MOVLW	33
$00B8	$00CB			MOVWF	STACK_11
$00B9	$30FF			MOVLW	255
$00BA	$00CA			MOVWF	STACK_10
$00BB	$0BCB			DECFSZ	STACK_11, F
$00BC	$28BE			GOTO	$+2
$00BD	$28C1			GOTO	$+4
$00BE	$0BCA			DECFSZ	STACK_10, F
$00BF	$28BE			GOTO	$-1
$00C0	$28BB			GOTO	$-5
$00C1	$3060			MOVLW	96
$00C2	$00CA			MOVWF	STACK_10
$00C3	$0BCA			DECFSZ	STACK_10, F
$00C4	$28C3			GOTO	$-1
$00C5	$0000			NOP
$00C6	$0000			NOP
;sd1602_4bit_mode.h,51 :: 		SD1602_write(0x20, 0); /* 4bitモード設定 */
$00C7	$3020			MOVLW	32
$00C8	$009C			MOVWF	FARG_SD1602_write+0
$00C9	$019D			CLRF	FARG_SD1602_write+1, 1
$00CA	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,52 :: 		Delay_ms(5); /* 5ms（40us以上）の時間待ち */
$00CB	$3021			MOVLW	33
$00CC	$00CB			MOVWF	STACK_11
$00CD	$30FF			MOVLW	255
$00CE	$00CA			MOVWF	STACK_10
$00CF	$0BCB			DECFSZ	STACK_11, F
$00D0	$28D2			GOTO	$+2
$00D1	$28D5			GOTO	$+4
$00D2	$0BCA			DECFSZ	STACK_10, F
$00D3	$28D2			GOTO	$-1
$00D4	$28CF			GOTO	$-5
$00D5	$3060			MOVLW	96
$00D6	$00CA			MOVWF	STACK_10
$00D7	$0BCA			DECFSZ	STACK_10, F
$00D8	$28D7			GOTO	$-1
$00D9	$0000			NOP
$00DA	$0000			NOP
;sd1602_4bit_mode.h,53 :: 		SD1602_control(0x28); /* 4bitモードで2行表示に設定する */
$00DB	$3028			MOVLW	40
$00DC	$009B			MOVWF	FARG_SD1602_control+0
$00DD	$2138			CALL	_SD1602_control
;sd1602_4bit_mode.h,54 :: 		SD1602_control(0x08); /* テキスト表示をオフにする */
$00DE	$3008			MOVLW	8
$00DF	$009B			MOVWF	FARG_SD1602_control+0
$00E0	$2138			CALL	_SD1602_control
;sd1602_4bit_mode.h,55 :: 		SD1602_control(0x0C); /* テキスト表示をオンにする */
$00E1	$300C			MOVLW	12
$00E2	$009B			MOVWF	FARG_SD1602_control+0
$00E3	$2138			CALL	_SD1602_control
;sd1602_4bit_mode.h,56 :: 		SD1602_control(0x06); /* カーソル移動を右方向に設定する */
$00E4	$3006			MOVLW	6
$00E5	$009B			MOVWF	FARG_SD1602_control+0
$00E6	$2138			CALL	_SD1602_control
;sd1602_4bit_mode.h,57 :: 		}
$00E7	$0008			RETURN
$0105	$	_SD1602_clear:
;sd1602_4bit_mode.h,35 :: 		void SD1602_clear(void)
;sd1602_4bit_mode.h,37 :: 		SD1602_write(0x01, 0); /* 制御コードの上位4bitを渡す */
$0105	$3001			MOVLW	1
$0106	$1303			BCF	STATUS, RP1
$0107	$1283			BCF	STATUS, RP0
$0108	$009C			MOVWF	FARG_SD1602_write+0
$0109	$019D			CLRF	FARG_SD1602_write+1, 1
$010A	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,38 :: 		SD1602_write(0x01 << 4, 0); /* 制御コードの下位4bitを渡す */
$010B	$3010			MOVLW	16
$010C	$009C			MOVWF	FARG_SD1602_write+0
$010D	$019D			CLRF	FARG_SD1602_write+1, 1
$010E	$20E8			CALL	_SD1602_write
;sd1602_4bit_mode.h,39 :: 		Delay_ms(2); /* 2ms（1.64ms以上）の時間待ち */
$010F	$300D			MOVLW	13
$0110	$00CB			MOVWF	STACK_11
$0111	$30FF			MOVLW	255
$0112	$00CA			MOVWF	STACK_10
$0113	$0BCB			DECFSZ	STACK_11, F
$0114	$2916			GOTO	$+2
$0115	$2919			GOTO	$+4
$0116	$0BCA			DECFSZ	STACK_10, F
$0117	$2916			GOTO	$-1
$0118	$2913			GOTO	$-5
$0119	$30F3			MOVLW	243
$011A	$00CA			MOVWF	STACK_10
$011B	$0BCA			DECFSZ	STACK_10, F
$011C	$291B			GOTO	$-1
$011D	$0000			NOP
;sd1602_4bit_mode.h,40 :: 		}
$011E	$0008			RETURN
$014F	$	_SD1602_print:
;sd1602_4bit_mode.h,59 :: 		void SD1602_print(char *s)
;sd1602_4bit_mode.h,61 :: 		while (*s != 0x00) /* ナル文字（0x00）があらわれるまで */
$014F	$	L_SD1602_print_2:
$014F	$1303			BCF	STATUS, RP1
$0150	$1283			BCF	STATUS, RP0
$0151	$081A			MOVF	FARG_SD1602_print+0, 0
$0152	$0084			MOVWF	FSR
$0153	$0800			MOVF	INDF, 0
$0154	$00C1			MOVWF	STACK_1
$0155	$0841			MOVF	STACK_1, 0
$0156	$3A00			XORLW	0
$0157	$1903			BTFSC	STATUS, Z
$0158	$2960			GOTO	L_SD1602_print_3
;sd1602_4bit_mode.h,63 :: 		SD1602_display(*s); /* テキストデータを表示する */
$0159	$081A			MOVF	FARG_SD1602_print+0, 0
$015A	$0084			MOVWF	FSR
$015B	$0800			MOVF	INDF, 0
$015C	$009B			MOVWF	FARG_SD1602_display+0
$015D	$211F			CALL	_SD1602_display
;sd1602_4bit_mode.h,64 :: 		s++;
$015E	$0A9A			INCF	FARG_SD1602_print+0, 1
;sd1602_4bit_mode.h,65 :: 		}
$015F	$294F			GOTO	L_SD1602_print_2
$0160	$	L_SD1602_print_3:
;sd1602_4bit_mode.h,66 :: 		}
$0160	$0008			RETURN
$0004	$	_main:
$0004	$3048			MOVLW	72
$0005	$1303			BCF	STATUS, RP1
$0006	$1283			BCF	STATUS, RP0
$0007	$008C			MOVWF	main_s_L0+0
$0008	$3065			MOVLW	101
$0009	$008D			MOVWF	main_s_L0+1
$000A	$306C			MOVLW	108
$000B	$008E			MOVWF	main_s_L0+2
$000C	$306C			MOVLW	108
$000D	$008F			MOVWF	main_s_L0+3
$000E	$306F			MOVLW	111
$000F	$0090			MOVWF	main_s_L0+4
$0010	$302C			MOVLW	44
$0011	$0091			MOVWF	main_s_L0+5
$0012	$3020			MOVLW	32
$0013	$0092			MOVWF	main_s_L0+6
$0014	$3077			MOVLW	119
$0015	$0093			MOVWF	main_s_L0+7
$0016	$306F			MOVLW	111
$0017	$0094			MOVWF	main_s_L0+8
$0018	$3072			MOVLW	114
$0019	$0095			MOVWF	main_s_L0+9
$001A	$306C			MOVLW	108
$001B	$0096			MOVWF	main_s_L0+10
$001C	$3064			MOVLW	100
$001D	$0097			MOVWF	main_s_L0+11
$001E	$3021			MOVLW	33
$001F	$0098			MOVWF	main_s_L0+12
$0020	$0199			CLRF	main_s_L0+13
;ex7_2.c,3 :: 		void main(void)
;ex7_2.c,7 :: 		TRISA = 0x00; /* 出力端子: RA0〜RA4 */
$0021	$1683			BSF	STATUS, RP0
$0022	$0185			CLRF	TRISA, 1
;ex7_2.c,8 :: 		PORTA = 0x00; /* ポートA: 0 0 0 0 0 0 0 0 */
$0023	$1283			BCF	STATUS, RP0
$0024	$0185			CLRF	PORTA, 1
;ex7_2.c,9 :: 		TRISB = 0x00; /* 出力端子: RB0〜RB7 */
$0025	$1683			BSF	STATUS, RP0
$0026	$0186			CLRF	TRISB, 1
;ex7_2.c,10 :: 		PORTB = 0x00; /* ポートB: 0 0 0 0 0 0 0 0 */
$0027	$1283			BCF	STATUS, RP0
$0028	$0186			CLRF	PORTB, 1
;ex7_2.c,12 :: 		SD1602_init(); /* SD1602の初期化 */
$0029	$207A			CALL	_SD1602_init
;ex7_2.c,14 :: 		while (1) /* 無限ループ */
$002A	$	L_main_4:
;ex7_2.c,16 :: 		SD1602_clear(); /* 表示クリア */
$002A	$2105			CALL	_SD1602_clear
;ex7_2.c,17 :: 		SD1602_control(0x80); /* カーソルを0行目の先頭に移動する */
$002B	$3080			MOVLW	128
$002C	$009B			MOVWF	FARG_SD1602_control+0
$002D	$2138			CALL	_SD1602_control
;ex7_2.c,18 :: 		SD1602_print(s); /* テキストデータを表示する */
$002E	$300C			MOVLW	main_s_L0
$002F	$009A			MOVWF	FARG_SD1602_print+0
$0030	$214F			CALL	_SD1602_print
;ex7_2.c,19 :: 		Delay_ms(1000); /* 1000msの時間待ち */
$0031	$301A			MOVLW	26
$0032	$00CC			MOVWF	STACK_12
$0033	$30FF			MOVLW	255
$0034	$00CB			MOVWF	STACK_11
$0035	$30FF			MOVLW	255
$0036	$00CA			MOVWF	STACK_10
$0037	$0BCC			DECFSZ	STACK_12, F
$0038	$283A			GOTO	$+2
$0039	$2841			GOTO	$+8
$003A	$0BCB			DECFSZ	STACK_11, F
$003B	$283D			GOTO	$+2
$003C	$2840			GOTO	$+4
$003D	$0BCA			DECFSZ	STACK_10, F
$003E	$283D			GOTO	$-1
$003F	$283A			GOTO	$-5
$0040	$2837			GOTO	$-9
$0041	$307F			MOVLW	127
$0042	$00CB			MOVWF	STACK_11
$0043	$30FF			MOVLW	255
$0044	$00CA			MOVWF	STACK_10
$0045	$0BCB			DECFSZ	STACK_11, F
$0046	$2848			GOTO	$+2
$0047	$284B			GOTO	$+4
$0048	$0BCA			DECFSZ	STACK_10, F
$0049	$2848			GOTO	$-1
$004A	$2845			GOTO	$-5
$004B	$3058			MOVLW	88
$004C	$00CA			MOVWF	STACK_10
$004D	$0BCA			DECFSZ	STACK_10, F
$004E	$284D			GOTO	$-1
$004F	$0000			NOP
$0050	$0000			NOP
;ex7_2.c,21 :: 		SD1602_clear(); /* 表示クリア */
$0051	$2105			CALL	_SD1602_clear
;ex7_2.c,22 :: 		SD1602_control(0xC0); /* カーソルを1行目の先頭に移動する */
$0052	$30C0			MOVLW	192
$0053	$009B			MOVWF	FARG_SD1602_control+0
$0054	$2138			CALL	_SD1602_control
;ex7_2.c,23 :: 		SD1602_print(s); /* テキストデータを表示する */
$0055	$300C			MOVLW	main_s_L0
$0056	$009A			MOVWF	FARG_SD1602_print+0
$0057	$214F			CALL	_SD1602_print
;ex7_2.c,24 :: 		Delay_ms(1000); /* 1000msの時間待ち */
$0058	$301A			MOVLW	26
$0059	$00CC			MOVWF	STACK_12
$005A	$30FF			MOVLW	255
$005B	$00CB			MOVWF	STACK_11
$005C	$30FF			MOVLW	255
$005D	$00CA			MOVWF	STACK_10
$005E	$0BCC			DECFSZ	STACK_12, F
$005F	$2861			GOTO	$+2
$0060	$2868			GOTO	$+8
$0061	$0BCB			DECFSZ	STACK_11, F
$0062	$2864			GOTO	$+2
$0063	$2867			GOTO	$+4
$0064	$0BCA			DECFSZ	STACK_10, F
$0065	$2864			GOTO	$-1
$0066	$2861			GOTO	$-5
$0067	$285E			GOTO	$-9
$0068	$307F			MOVLW	127
$0069	$00CB			MOVWF	STACK_11
$006A	$30FF			MOVLW	255
$006B	$00CA			MOVWF	STACK_10
$006C	$0BCB			DECFSZ	STACK_11, F
$006D	$286F			GOTO	$+2
$006E	$2872			GOTO	$+4
$006F	$0BCA			DECFSZ	STACK_10, F
$0070	$286F			GOTO	$-1
$0071	$286C			GOTO	$-5
$0072	$3058			MOVLW	88
$0073	$00CA			MOVWF	STACK_10
$0074	$0BCA			DECFSZ	STACK_10, F
$0075	$2874			GOTO	$-1
$0076	$0000			NOP
$0077	$0000			NOP
;ex7_2.c,25 :: 		}
$0078	$282A			GOTO	L_main_4
;ex7_2.c,26 :: 		}
$0079	$2879			GOTO	$
